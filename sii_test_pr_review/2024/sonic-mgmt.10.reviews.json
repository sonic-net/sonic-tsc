[
    {
        "number": 15068,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-21T15:47:34Z",
        "comment_author": "mssonicbld",
        "comment_body": "Original PR: https://github.com/sonic-net/sonic-mgmt/pull/15046"
    },
    {
        "number": 15063,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-21T08:21:54Z",
        "comment_author": "liuh-80",
        "comment_body": "/azpw run Azure.sonic-mgmt"
    },
    {
        "number": 15063,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-21T08:21:57Z",
        "comment_author": "mssonicbld",
        "comment_body": "/AzurePipelines run Azure.sonic-mgmt"
    },
    {
        "number": 15063,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-21T08:22:10Z",
        "comment_author": "azure-pipelines",
        "comment_body": "<samp>\nAzure Pipelines successfully started running 1 pipeline(s).<br>\r\n\n</samp>"
    },
    {
        "number": 15063,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-21T08:25:08Z",
        "review_author": "lipxu"
    },
    {
        "number": 15063,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-21T13:56:19Z",
        "review_author": "StormLiangMS"
    },
    {
        "number": 15063,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-21T13:56:19Z",
        "latestReview_author": "StormLiangMS",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 15063,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-21T08:25:08Z",
        "latestReview_author": "lipxu",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 15049,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-18T12:13:27Z",
        "comment_author": "liuh-80",
        "comment_body": "/azpw run Azure.sonic-mgmt "
    },
    {
        "number": 15049,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-18T12:13:29Z",
        "comment_author": "mssonicbld",
        "comment_body": "/AzurePipelines run Azure.sonic-mgmt"
    },
    {
        "number": 15049,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-18T12:13:39Z",
        "comment_author": "azure-pipelines",
        "comment_body": "<samp>\nAzure Pipelines successfully started running 1 pipeline(s).<br>\r\n\n</samp>"
    },
    {
        "number": 15049,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-21T01:24:48Z",
        "review_author": "StormLiangMS"
    },
    {
        "number": 15049,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-21T01:24:48Z",
        "latestReview_author": "StormLiangMS",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 15046,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-18T18:20:34Z",
        "comment_author": "bingwang-ms",
        "comment_body": "LGTM. Thanks for the fix!"
    },
    {
        "number": 15046,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-18T18:21:03Z",
        "comment_author": "bingwang-ms",
        "comment_body": "/azp run Azure.sonic-mgmt"
    },
    {
        "number": 15046,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-18T18:21:13Z",
        "comment_author": "azure-pipelines",
        "comment_body": "<samp>\nAzure Pipelines successfully started running 1 pipeline(s).<br>\r\n\n</samp>"
    },
    {
        "number": 15046,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-21T15:47:32Z",
        "comment_author": "mssonicbld",
        "comment_body": "Cherry-pick PR to 202405: https://github.com/sonic-net/sonic-mgmt/pull/15068"
    },
    {
        "number": 15046,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-18T08:15:30Z",
        "review_author": "Gfrom2016"
    },
    {
        "number": 15046,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-18T18:20:47Z",
        "review_author": "bingwang-ms"
    },
    {
        "number": 15046,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-21T02:04:06Z",
        "review_author": "Gfrom2016"
    },
    {
        "number": 15046,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-21T02:04:06Z",
        "latestReview_author": "Gfrom2016",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 15045,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-18T07:43:41Z",
        "review_author": "yutongzhang-microsoft"
    },
    {
        "number": 15045,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-18T10:14:14Z",
        "review_author": "wangxin"
    },
    {
        "number": 15045,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-18T10:14:14Z",
        "latestReview_author": "wangxin",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 15045,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-18T07:43:41Z",
        "latestReview_author": "yutongzhang-microsoft",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 15043,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-18T03:54:16Z",
        "comment_author": "mssonicbld",
        "comment_body": "Original PR: https://github.com/sonic-net/sonic-mgmt/pull/14892"
    },
    {
        "number": 15040,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-17T23:07:56Z",
        "comment_author": "mssonicbld",
        "comment_body": "Original PR: https://github.com/sonic-net/sonic-mgmt/pull/15021"
    },
    {
        "number": 15039,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-17T23:05:00Z",
        "comment_author": "mssonicbld",
        "comment_body": "Original PR: https://github.com/sonic-net/sonic-mgmt/pull/14848"
    },
    {
        "number": 15038,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-17T23:04:42Z",
        "comment_author": "mssonicbld",
        "comment_body": "Original PR: https://github.com/sonic-net/sonic-mgmt/pull/14750"
    },
    {
        "number": 15036,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-17T18:57:23Z",
        "comment_author": "mssonicbld",
        "comment_body": "Original PR: https://github.com/sonic-net/sonic-mgmt/pull/14694"
    },
    {
        "number": 15033,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-17T10:28:53Z",
        "comment_author": "mssonicbld",
        "comment_body": "Original PR: https://github.com/sonic-net/sonic-mgmt/pull/15007"
    },
    {
        "number": 15032,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-17T09:59:43Z",
        "comment_author": "mssonicbld",
        "comment_body": "Original PR: https://github.com/sonic-net/sonic-mgmt/pull/14951"
    },
    {
        "number": 15031,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-17T07:49:51Z",
        "comment_author": "mssonicbld",
        "comment_body": "Original PR: https://github.com/sonic-net/sonic-mgmt/pull/14027"
    },
    {
        "number": 15030,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-17T07:49:50Z",
        "comment_author": "mssonicbld",
        "comment_body": "Original PR: https://github.com/sonic-net/sonic-mgmt/pull/14027"
    },
    {
        "number": 15029,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-17T07:04:01Z",
        "comment_author": "mssonicbld",
        "comment_body": "Original PR: https://github.com/sonic-net/sonic-mgmt/pull/15001"
    },
    {
        "number": 15028,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-17T07:03:57Z",
        "comment_author": "mssonicbld",
        "comment_body": "Original PR: https://github.com/sonic-net/sonic-mgmt/pull/15001"
    },
    {
        "number": 15027,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-17T07:54:59Z",
        "comment_author": "StormLiangMS",
        "comment_body": "/azp run Azure.sonic-mgmt"
    },
    {
        "number": 15027,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-17T07:55:10Z",
        "comment_author": "azure-pipelines",
        "comment_body": "<samp>\nAzure Pipelines successfully started running 1 pipeline(s).<br>\r\n\n</samp>"
    },
    {
        "number": 15027,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-17T06:43:24Z",
        "review_author": "StormLiangMS"
    },
    {
        "number": 15027,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-17T06:48:13Z",
        "review_author": "Gfrom2016"
    },
    {
        "number": 15027,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-18T15:17:57Z",
        "review_author": "bingwang-ms"
    },
    {
        "number": 15027,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-17T06:48:13Z",
        "latestReview_author": "Gfrom2016",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 15027,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-18T15:17:57Z",
        "latestReview_author": "bingwang-ms",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 15027,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-17T06:43:24Z",
        "latestReview_author": "StormLiangMS",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 15024,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-17T04:44:02Z",
        "comment_author": "mssonicbld",
        "comment_body": "Original PR: https://github.com/sonic-net/sonic-mgmt/pull/14409"
    },
    {
        "number": 15023,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-17T04:44:00Z",
        "comment_author": "mssonicbld",
        "comment_body": "Original PR: https://github.com/sonic-net/sonic-mgmt/pull/14409"
    },
    {
        "number": 15022,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-17T03:48:52Z",
        "comment_author": "mssonicbld",
        "comment_body": "Original PR: https://github.com/sonic-net/sonic-mgmt/pull/13438"
    },
    {
        "number": 15022,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-17T04:02:07Z",
        "review_author": "liuh-80"
    },
    {
        "number": 15022,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-17T04:02:07Z",
        "latestReview_author": "liuh-80",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 15021,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-17T23:07:54Z",
        "comment_author": "mssonicbld",
        "comment_body": "Cherry-pick PR to 202405: https://github.com/sonic-net/sonic-mgmt/pull/15040"
    },
    {
        "number": 15021,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-17T17:48:26Z",
        "review_author": "yanmo96"
    },
    {
        "number": 15021,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-17T17:48:26Z",
        "latestReview_author": "yanmo96",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 15020,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-17T02:09:19Z",
        "comment_author": "mssonicbld",
        "comment_body": "Original PR: https://github.com/sonic-net/sonic-mgmt/pull/14884"
    },
    {
        "number": 15019,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-17T01:33:21Z",
        "comment_author": "mssonicbld",
        "comment_body": "Original PR: https://github.com/sonic-net/sonic-mgmt/pull/14601"
    },
    {
        "number": 15018,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-16T22:21:16Z",
        "comment_author": "mssonicbld",
        "comment_body": "Original PR: https://github.com/sonic-net/sonic-mgmt/pull/13096"
    },
    {
        "number": 15011,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-16T08:55:00Z",
        "review_author": "wangxin"
    },
    {
        "number": 15011,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-16T08:55:00Z",
        "latestReview_author": "wangxin",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 15010,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-16T01:04:03Z",
        "review_author": "wen587"
    },
    {
        "number": 15010,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-16T08:55:35Z",
        "review_author": "wangxin"
    },
    {
        "number": 15010,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-16T08:55:35Z",
        "latestReview_author": "wangxin",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 15010,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-16T01:04:03Z",
        "latestReview_author": "wen587",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 15009,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-16T00:12:13Z",
        "comment_author": "mssonicbld",
        "comment_body": "Original PR: https://github.com/sonic-net/sonic-mgmt/pull/14952"
    },
    {
        "number": 15007,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-17T04:11:17Z",
        "comment_author": "yejianquan",
        "comment_body": "/azp run"
    },
    {
        "number": 15007,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-17T04:11:28Z",
        "comment_author": "azure-pipelines",
        "comment_body": "<samp>\nAzure Pipelines successfully started running 1 pipeline(s).<br>\r\n\n</samp>"
    },
    {
        "number": 15007,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-17T06:18:09Z",
        "comment_author": "yejianquan",
        "comment_body": "/azp run"
    },
    {
        "number": 15007,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-17T06:18:19Z",
        "comment_author": "azure-pipelines",
        "comment_body": "<samp>\nAzure Pipelines successfully started running 1 pipeline(s).<br>\r\n\n</samp>"
    },
    {
        "number": 15007,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-17T10:28:51Z",
        "comment_author": "mssonicbld",
        "comment_body": "Cherry-pick PR to 202405: https://github.com/sonic-net/sonic-mgmt/pull/15033"
    },
    {
        "number": 15007,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-16T00:05:26Z",
        "review_author": "yejianquan"
    },
    {
        "number": 15007,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-17T03:43:08Z",
        "review_author": "yejianquan"
    },
    {
        "number": 15007,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-17T04:09:46Z",
        "review_author": "yejianquan"
    },
    {
        "number": 15007,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-17T05:06:12Z",
        "review_author": "yejianquan"
    },
    {
        "number": 15007,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-17T05:07:08Z",
        "review_author": "augusdn"
    },
    {
        "number": 15007,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-17T05:08:13Z",
        "review_author": "augusdn"
    },
    {
        "number": 15007,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-17T06:03:07Z",
        "review_author": "yejianquan"
    },
    {
        "number": 15007,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-17T06:03:07Z",
        "latestReview_author": "yejianquan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 15006,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-15T22:45:40Z",
        "comment_author": "mssonicbld",
        "comment_body": "Original PR: https://github.com/sonic-net/sonic-mgmt/pull/15003"
    },
    {
        "number": 15005,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-16T02:13:48Z",
        "comment_author": "weiguo-nvidia",
        "comment_body": "Hi @bingwang-ms , \r\n\r\nCould you help review this cherry-pick PR, thanks!"
    },
    {
        "number": 15004,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-22T00:15:16Z",
        "review_author": "prgeor"
    },
    {
        "number": 15004,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-22T00:15:16Z",
        "latestReview_author": "prgeor",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 15003,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-15T22:45:38Z",
        "comment_author": "mssonicbld",
        "comment_body": "Cherry-pick PR to 202405: https://github.com/sonic-net/sonic-mgmt/pull/15006"
    },
    {
        "number": 15003,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-15T20:30:09Z",
        "review_author": "saiarcot895"
    },
    {
        "number": 15003,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-15T20:30:09Z",
        "latestReview_author": "saiarcot895",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 15001,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-17T03:57:10Z",
        "comment_author": "Janetxxx",
        "comment_body": "@yxieca @bingwang-ms Could you please help to approve the request labels"
    },
    {
        "number": 15001,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-17T07:03:55Z",
        "comment_author": "mssonicbld",
        "comment_body": "Cherry-pick PR to 202405: https://github.com/sonic-net/sonic-mgmt/pull/15028"
    },
    {
        "number": 15001,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-17T07:03:59Z",
        "comment_author": "mssonicbld",
        "comment_body": "Cherry-pick PR to 202311: https://github.com/sonic-net/sonic-mgmt/pull/15029"
    },
    {
        "number": 15001,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-16T11:35:56Z",
        "review_author": "Pterosaur"
    },
    {
        "number": 15001,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-17T03:06:19Z",
        "review_author": "wangxin"
    },
    {
        "number": 15001,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-17T03:06:19Z",
        "latestReview_author": "wangxin",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 15001,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-16T11:35:56Z",
        "latestReview_author": "Pterosaur",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14997,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-15T07:38:28Z",
        "review_author": "wangxin"
    },
    {
        "number": 14997,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-15T07:38:28Z",
        "latestReview_author": "wangxin",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14995,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-15T07:37:54Z",
        "review_author": "wangxin"
    },
    {
        "number": 14995,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-15T07:37:54Z",
        "latestReview_author": "wangxin",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14994,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-15T02:51:50Z",
        "comment_author": "mssonicbld",
        "comment_body": "Original PR: https://github.com/sonic-net/sonic-mgmt/pull/14987"
    },
    {
        "number": 14993,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-15T02:26:21Z",
        "comment_author": "mssonicbld",
        "comment_body": "Original PR: https://github.com/sonic-net/sonic-mgmt/pull/14824"
    },
    {
        "number": 14992,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-15T02:16:58Z",
        "comment_author": "rajendrat",
        "comment_body": "viz @kevinwangsk \r\n"
    },
    {
        "number": 14992,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-15T02:30:25Z",
        "review_author": "wsycqyz"
    },
    {
        "number": 14992,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-15T02:35:53Z",
        "review_author": "kevinskwang"
    },
    {
        "number": 14992,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-15T02:30:25Z",
        "latestReview_author": "wsycqyz",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14992,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-15T02:35:53Z",
        "latestReview_author": "kevinskwang",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14991,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-18T06:01:00Z",
        "review_author": "kevinskwang"
    },
    {
        "number": 14991,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-18T06:01:00Z",
        "latestReview_author": "kevinskwang",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14990,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-15T00:05:22Z",
        "comment_author": "mssonicbld",
        "comment_body": "Original PR: https://github.com/sonic-net/sonic-mgmt/pull/14332"
    },
    {
        "number": 14989,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-15T00:04:46Z",
        "comment_author": "mssonicbld",
        "comment_body": "Original PR: https://github.com/sonic-net/sonic-mgmt/pull/14849"
    },
    {
        "number": 14988,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-15T00:02:04Z",
        "comment_author": "mssonicbld",
        "comment_body": "Original PR: https://github.com/sonic-net/sonic-mgmt/pull/14875"
    },
    {
        "number": 14987,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-15T02:51:49Z",
        "comment_author": "mssonicbld",
        "comment_body": "Cherry-pick PR to 202405: https://github.com/sonic-net/sonic-mgmt/pull/14994"
    },
    {
        "number": 14987,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-15T02:50:56Z",
        "review_author": "yejianquan"
    },
    {
        "number": 14987,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-15T02:50:56Z",
        "latestReview_author": "yejianquan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14979,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-13T23:38:46Z",
        "comment_author": "mssonicbld",
        "comment_body": "Original PR: https://github.com/sonic-net/sonic-mgmt/pull/13579"
    },
    {
        "number": 14978,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-13T00:34:36Z",
        "comment_author": "mssonicbld",
        "comment_body": "Original PR: https://github.com/sonic-net/sonic-mgmt/pull/14964"
    },
    {
        "number": 14977,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-12T09:20:04Z",
        "review_author": "yutongzhang-microsoft"
    },
    {
        "number": 14977,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-14T01:41:11Z",
        "review_author": "StormLiangMS"
    },
    {
        "number": 14977,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-14T01:41:11Z",
        "latestReview_author": "StormLiangMS",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14977,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-12T09:20:04Z",
        "latestReview_author": "yutongzhang-microsoft",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14976,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-12T08:13:50Z",
        "review_author": "wangxin"
    },
    {
        "number": 14976,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-12T08:20:33Z",
        "review_author": "lerry-lee"
    },
    {
        "number": 14976,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-12T09:20:14Z",
        "review_author": "lerry-lee"
    },
    {
        "number": 14976,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-21T03:15:49Z",
        "review_author": "wangxin"
    },
    {
        "number": 14976,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-21T03:15:49Z",
        "latestReview_author": "wangxin",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14974,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-12T03:15:07Z",
        "comment_author": "mssonicbld",
        "comment_body": "Original PR: https://github.com/sonic-net/sonic-mgmt/pull/14959"
    },
    {
        "number": 14973,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-12T03:15:05Z",
        "comment_author": "mssonicbld",
        "comment_body": "Original PR: https://github.com/sonic-net/sonic-mgmt/pull/14959"
    },
    {
        "number": 14971,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-21T03:17:03Z",
        "review_author": "wangxin"
    },
    {
        "number": 14971,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-21T03:17:03Z",
        "latestReview_author": "wangxin",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14969,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-12T02:24:54Z",
        "review_author": "wangxin"
    },
    {
        "number": 14969,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-12T02:24:54Z",
        "latestReview_author": "wangxin",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14967,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-11T22:11:57Z",
        "comment_author": "mssonicbld",
        "comment_body": "Original PR: https://github.com/sonic-net/sonic-mgmt/pull/13660"
    },
    {
        "number": 14964,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-11T19:54:53Z",
        "comment_author": "vperumal",
        "comment_body": "FYI @abdosi @yejianquan - Kindly review and merge it\r\n\r\n=========================== short test summary info ============================\r\nSKIPPED [2] everflow/test_everflow_testbed.py: Skipping test since mirror with policer is not supported on Cisco 8000 platforms and Broadcom DNX platforms.\r\nSKIPPED [2] everflow/test_everflow_testbed.py:130: ingress ACL w/ egress Mirroring not supported, skipping\r\nSKIPPED [2] everflow/test_everflow_testbed.py:231: ingress ACL w/ egress Mirroring not supported, skipping\r\nSKIPPED [2] everflow/test_everflow_testbed.py:301: ingress ACL w/ egress Mirroring not supported, skipping\r\nSKIPPED [2] everflow/test_everflow_testbed.py:393: ingress ACL w/ egress Mirroring not supported, skipping\r\nSKIPPED [2] everflow/test_everflow_testbed.py:499: ingress ACL w/ egress Mirroring not supported, skipping\r\nSKIPPED [2] everflow/test_everflow_testbed.py:130: egress ACL w/ ingress Mirroring not supported, skipping\r\nSKIPPED [2] everflow/test_everflow_testbed.py:231: egress ACL w/ ingress Mirroring not supported, skipping\r\nSKIPPED [2] everflow/test_everflow_testbed.py:301: egress ACL w/ ingress Mirroring not supported, skipping\r\nSKIPPED [2] everflow/test_everflow_testbed.py:393: egress ACL w/ ingress Mirroring not supported, skipping\r\nSKIPPED [2] everflow/test_everflow_testbed.py:499: egress ACL w/ ingress Mirroring not supported, skipping\r\nSKIPPED [10] everflow/test_everflow_testbed.py: For Mellanox t0-120 setup - Need to skip the test due to HW resource limitation For Cisco-8000 - EverflowV4 EgressAcl EgressMirror - is not yet fully supported on cisco chassis. Skipping it till it is fully validated\r\nPASSED everflow/test_everflow_testbed.py::TestEverflowV4IngressAclIngressMirror::test_everflow_basic_forwarding[cli-downstream-default]\r\nPASSED everflow/test_everflow_testbed.py::TestEverflowV4IngressAclIngressMirror::test_everflow_neighbor_mac_change[cli-downstream-default]\r\nPASSED everflow/test_everflow_testbed.py::TestEverflowV4IngressAclIngressMirror::test_everflow_remove_unused_ecmp_next_hop[cli-downstream-default]\r\nPASSED everflow/test_everflow_testbed.py::TestEverflowV4IngressAclIngressMirror::test_everflow_remove_used_ecmp_next_hop[cli-downstream-default]\r\nPASSED everflow/test_everflow_testbed.py::TestEverflowV4IngressAclIngressMirror::test_everflow_basic_forwarding[cli-upstream-default]\r\nPASSED everflow/test_everflow_testbed.py::TestEverflowV4IngressAclIngressMirror::test_everflow_neighbor_mac_change[cli-upstream-default]\r\nPASSED everflow/test_everflow_testbed.py::TestEverflowV4IngressAclIngressMirror::test_everflow_remove_unused_ecmp_next_hop[cli-upstream-default]\r\nPASSED everflow/test_everflow_testbed.py::TestEverflowV4IngressAclIngressMirror::test_everflow_remove_used_ecmp_next_hop[cli-upstream-default]\r\n========== 8 passed, 32 skipped, 3025 warnings in 1820.61s (0:30:20) ==========="
    },
    {
        "number": 14964,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-11T22:55:12Z",
        "comment_author": "abdosi",
        "comment_body": "@yejianquan @auspham for viz."
    },
    {
        "number": 14964,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-13T00:34:06Z",
        "comment_author": "yejianquan",
        "comment_body": "@auspham for viz"
    },
    {
        "number": 14964,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-13T00:34:34Z",
        "comment_author": "mssonicbld",
        "comment_body": "Cherry-pick PR to 202405: https://github.com/sonic-net/sonic-mgmt/pull/14978"
    },
    {
        "number": 14964,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-11T22:54:18Z",
        "review_author": "abdosi"
    },
    {
        "number": 14964,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-11T22:54:18Z",
        "latestReview_author": "abdosi",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14959,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-11T08:36:59Z",
        "comment_author": "mssonicbld",
        "comment_body": "The [pre-commit](http://pre-commit.com/) check detected issues in the files touched by this pull request.\nThe pre-commit check is a mandatory check, please fix detected issues.\n\nDetailed pre-commit check results:\n<samp>trim trailing whitespace.................................................Failed<br/>- hook id: trailing-whitespace<br/>- exit code: 1<br/>- files were modified by this hook<br/><br/>Fixing tests/dhcp_relay/conftest.py<br/><br/>fix end of files.........................................................Passed<br/>check yaml...........................................(no files to check)Skipped<br/>check for added large files..............................................Passed<br/>check python ast.........................................................Passed<br/>flake8...................................................................Passed<br/>flake8...............................................(no files to check)Skipped<br/>check conditional mark sort..........................(no files to check)Skipped<br/></samp>\n\nTo run the pre-commit checks locally, you can follow below steps:\n1. Ensure that default python is python3. In sonic-mgmt docker container, default python is python2. You can run\n the check by activating the python3 virtual environment in sonic-mgmt docker container or outside of sonic-mgmt\n docker container.\n2. Ensure that the `pre-commit` package is installed:\n```\nsudo pip install pre-commit\n```\n3. Go to repository root folder\n4. Install the pre-commit hooks:\n```\npre-commit install\n```\n5. Use pre-commit to check staged file:\n```\npre-commit\n```\n6. Alternatively, you can check committed files using:\n```\npre-commit run --from-ref <commit_id> --to-ref <commit_id>\n```"
    },
    {
        "number": 14959,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-12T03:15:04Z",
        "comment_author": "mssonicbld",
        "comment_body": "Cherry-pick PR to 202405: https://github.com/sonic-net/sonic-mgmt/pull/14973"
    },
    {
        "number": 14959,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-12T03:15:05Z",
        "comment_author": "mssonicbld",
        "comment_body": "Cherry-pick PR to 202311: https://github.com/sonic-net/sonic-mgmt/pull/14974"
    },
    {
        "number": 14959,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-12T03:14:32Z",
        "review_author": "kevinskwang"
    },
    {
        "number": 14959,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-12T03:14:32Z",
        "latestReview_author": "kevinskwang",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14958,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-14T01:34:20Z",
        "review_author": "wangxin"
    },
    {
        "number": 14958,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-14T01:34:20Z",
        "latestReview_author": "wangxin",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14957,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-14T01:34:43Z",
        "review_author": "wangxin"
    },
    {
        "number": 14957,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-14T01:34:43Z",
        "latestReview_author": "wangxin",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14956,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-11T10:53:18Z",
        "review_author": "wangxin"
    },
    {
        "number": 14956,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-11T10:53:18Z",
        "latestReview_author": "wangxin",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14955,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-11T10:54:42Z",
        "review_author": "wangxin"
    },
    {
        "number": 14955,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-11T10:54:42Z",
        "latestReview_author": "wangxin",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14954,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-11T05:48:32Z",
        "comment_author": "mssonicbld",
        "comment_body": "Original PR: https://github.com/sonic-net/sonic-mgmt/pull/14347"
    },
    {
        "number": 14953,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-11T05:48:32Z",
        "comment_author": "mssonicbld",
        "comment_body": "Original PR: https://github.com/sonic-net/sonic-mgmt/pull/14347"
    },
    {
        "number": 14952,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-16T00:12:11Z",
        "comment_author": "mssonicbld",
        "comment_body": "Cherry-pick PR to 202405: https://github.com/sonic-net/sonic-mgmt/pull/15009"
    },
    {
        "number": 14952,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-11T05:33:41Z",
        "review_author": "cyw233"
    },
    {
        "number": 14952,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-16T00:10:38Z",
        "review_author": "yejianquan"
    },
    {
        "number": 14952,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-16T00:10:38Z",
        "latestReview_author": "yejianquan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14951,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-17T02:52:09Z",
        "comment_author": "yejianquan",
        "comment_body": "Successfully recover:\r\n![image](https://github.com/user-attachments/assets/abcc1303-e173-4410-8bed-1c8c8e735daa)\r\n"
    },
    {
        "number": 14951,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-17T03:03:34Z",
        "comment_author": "yejianquan",
        "comment_body": "Logs when fail:\r\n![image](https://github.com/user-attachments/assets/5b43732a-1bbd-418b-8823-cd8efaeac969)\r\n"
    },
    {
        "number": 14951,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-17T03:06:55Z",
        "comment_author": "yejianquan",
        "comment_body": "@vperumal for viz"
    },
    {
        "number": 14951,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-17T03:50:24Z",
        "comment_author": "yejianquan",
        "comment_body": "/azp run"
    },
    {
        "number": 14951,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-17T03:50:35Z",
        "comment_author": "azure-pipelines",
        "comment_body": "<samp>\nAzure Pipelines successfully started running 1 pipeline(s).<br>\r\n\n</samp>"
    },
    {
        "number": 14951,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-17T09:59:39Z",
        "comment_author": "mssonicbld",
        "comment_body": "Cherry-pick PR to 202405: https://github.com/sonic-net/sonic-mgmt/pull/15032"
    },
    {
        "number": 14951,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-17T07:29:51Z",
        "review_author": "sdszhang"
    },
    {
        "number": 14951,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-17T07:31:34Z",
        "review_author": "auspham"
    },
    {
        "number": 14951,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-17T07:31:34Z",
        "latestReview_author": "auspham",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14951,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-17T07:29:51Z",
        "latestReview_author": "sdszhang",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14950,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-11T05:41:38Z",
        "review_author": "wangxin"
    },
    {
        "number": 14950,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-11T05:41:38Z",
        "latestReview_author": "wangxin",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14949,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-11T05:41:05Z",
        "review_author": "wangxin"
    },
    {
        "number": 14949,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-11T05:41:05Z",
        "latestReview_author": "wangxin",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14946,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-11T01:54:34Z",
        "comment_author": "mssonicbld",
        "comment_body": "Original PR: https://github.com/sonic-net/sonic-mgmt/pull/14925"
    },
    {
        "number": 14944,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-15T23:42:03Z",
        "comment_author": "mssonicbld",
        "comment_body": "The [pre-commit](http://pre-commit.com/) check detected issues in the files touched by this pull request.\nThe pre-commit check is a mandatory check, please fix detected issues.\n\nDetailed pre-commit check results:\n<samp>trim trailing whitespace.................................................Passed<br/>fix end of files.........................................................Passed<br/>check yaml...........................................(no files to check)Skipped<br/>check for added large files..............................................Passed<br/>check python ast.........................................................Passed<br/>flake8...................................................................Failed<br/>- hook id: flake8<br/>- exit code: 1<br/><br/>tests/pc/test_lag_member.py:349:27: F811 redefinition of unused 'copy_acstests_directory' from line 13<br/>tests/pc/test_lag_member.py:349:52: F811 redefinition of unused 'copy_ptftests_directory' from line 13<br/><br/>flake8...............................................(no files to check)Skipped<br/>check conditional mark sort..........................(no files to check)Skipped<br/></samp>\n\nTo run the pre-commit checks locally, you can follow below steps:\n1. Ensure that default python is python3. In sonic-mgmt docker container, default python is python2. You can run\n the check by activating the python3 virtual environment in sonic-mgmt docker container or outside of sonic-mgmt\n docker container.\n2. Ensure that the `pre-commit` package is installed:\n```\nsudo pip install pre-commit\n```\n3. Go to repository root folder\n4. Install the pre-commit hooks:\n```\npre-commit install\n```\n5. Use pre-commit to check staged file:\n```\npre-commit\n```\n6. Alternatively, you can check committed files using:\n```\npre-commit run --from-ref <commit_id> --to-ref <commit_id>\n```"
    },
    {
        "number": 14944,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-21T08:51:33Z",
        "review_author": "yaqiangz"
    },
    {
        "number": 14944,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-22T00:51:07Z",
        "review_author": "bingwang-ms"
    },
    {
        "number": 14944,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-21T08:51:33Z",
        "latestReview_author": "yaqiangz",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14944,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-22T00:51:07Z",
        "latestReview_author": "bingwang-ms",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14943,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-16T08:53:53Z",
        "review_author": "wangxin"
    },
    {
        "number": 14943,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-16T08:53:53Z",
        "latestReview_author": "wangxin",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14939,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-11T02:15:15Z",
        "review_author": "wangxin"
    },
    {
        "number": 14939,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-11T02:15:15Z",
        "latestReview_author": "wangxin",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14937,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-10T04:47:29Z",
        "comment_author": "mssonicbld",
        "comment_body": "Original PR: https://github.com/sonic-net/sonic-mgmt/pull/14627"
    },
    {
        "number": 14936,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-10T02:46:20Z",
        "review_author": "ganglyu"
    },
    {
        "number": 14936,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-11T02:14:32Z",
        "review_author": "wangxin"
    },
    {
        "number": 14936,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-11T02:14:32Z",
        "latestReview_author": "wangxin",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14936,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-10T02:46:20Z",
        "latestReview_author": "ganglyu",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14935,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-10T02:03:33Z",
        "comment_author": "mssonicbld",
        "comment_body": "Original PR: https://github.com/sonic-net/sonic-mgmt/pull/14075"
    },
    {
        "number": 14935,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-10T04:09:44Z",
        "review_author": "ZhaohuiS"
    },
    {
        "number": 14935,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-10T04:15:59Z",
        "review_author": "ZhaohuiS"
    },
    {
        "number": 14935,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-10T04:15:59Z",
        "latestReview_author": "ZhaohuiS",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14934,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-10T01:50:11Z",
        "comment_author": "mssonicbld",
        "comment_body": "Original PR: https://github.com/sonic-net/sonic-mgmt/pull/14923"
    },
    {
        "number": 14933,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-10T01:27:53Z",
        "comment_author": "mssonicbld",
        "comment_body": "Original PR: https://github.com/sonic-net/sonic-mgmt/pull/14889"
    },
    {
        "number": 14931,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-10T00:59:11Z",
        "comment_author": "mssonicbld",
        "comment_body": "Original PR: https://github.com/sonic-net/sonic-mgmt/pull/14886"
    },
    {
        "number": 14930,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-10T00:14:03Z",
        "comment_author": "mssonicbld",
        "comment_body": "Original PR: https://github.com/sonic-net/sonic-mgmt/pull/14739"
    },
    {
        "number": 14929,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-10T00:13:57Z",
        "comment_author": "mssonicbld",
        "comment_body": "Original PR: https://github.com/sonic-net/sonic-mgmt/pull/14739"
    },
    {
        "number": 14925,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-09T23:15:18Z",
        "comment_author": "mssonicbld",
        "comment_body": "The [pre-commit](http://pre-commit.com/) check detected issues in the files touched by this pull request.\nThe pre-commit check is a mandatory check, please fix detected issues.\n\nDetailed pre-commit check results:\n<samp>trim trailing whitespace.................................................Passed<br/>fix end of files.........................................................Passed<br/>check yaml...........................................(no files to check)Skipped<br/>check for added large files..............................................Passed<br/>check python ast.........................................................Passed<br/>flake8...................................................................Failed<br/>- hook id: flake8<br/>- exit code: 1<br/><br/>tests/qos/qos_sai_base.py:618:77: E712 comparison to False should be 'if cond is False:' or 'if not cond:'<br/><br/>flake8...............................................(no files to check)Skipped<br/>check conditional mark sort..........................(no files to check)Skipped<br/></samp>\n\nTo run the pre-commit checks locally, you can follow below steps:\n1. Ensure that default python is python3. In sonic-mgmt docker container, default python is python2. You can run\n the check by activating the python3 virtual environment in sonic-mgmt docker container or outside of sonic-mgmt\n docker container.\n2. Ensure that the `pre-commit` package is installed:\n```\nsudo pip install pre-commit\n```\n3. Go to repository root folder\n4. Install the pre-commit hooks:\n```\npre-commit install\n```\n5. Use pre-commit to check staged file:\n```\npre-commit\n```\n6. Alternatively, you can check committed files using:\n```\npre-commit run --from-ref <commit_id> --to-ref <commit_id>\n```"
    },
    {
        "number": 14925,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-10T21:13:18Z",
        "comment_author": "zhixzhu",
        "comment_body": "@abdosi @sdszhang pls review."
    },
    {
        "number": 14925,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-11T01:54:32Z",
        "comment_author": "mssonicbld",
        "comment_body": "Cherry-pick PR to 202405: https://github.com/sonic-net/sonic-mgmt/pull/14946"
    },
    {
        "number": 14925,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-11T00:27:34Z",
        "review_author": "sdszhang"
    },
    {
        "number": 14925,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-11T01:51:26Z",
        "review_author": "abdosi"
    },
    {
        "number": 14925,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-11T01:51:26Z",
        "latestReview_author": "abdosi",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14925,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-11T00:27:34Z",
        "latestReview_author": "sdszhang",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14924,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-10T17:50:03Z",
        "review_author": "bingwang-ms"
    },
    {
        "number": 14924,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-10T17:50:03Z",
        "latestReview_author": "bingwang-ms",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14923,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-09T22:07:01Z",
        "comment_author": "bingwang-ms",
        "comment_body": "@AnantKishorSharma , @wsycqyz Can you please help review?"
    },
    {
        "number": 14923,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-10T01:32:41Z",
        "comment_author": "wsycqyz",
        "comment_body": "l\u011ftm"
    },
    {
        "number": 14923,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-10T01:50:09Z",
        "comment_author": "mssonicbld",
        "comment_body": "Cherry-pick PR to 202405: https://github.com/sonic-net/sonic-mgmt/pull/14934"
    },
    {
        "number": 14920,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-09T15:46:42Z",
        "comment_author": "mssonicbld",
        "comment_body": "Original PR: https://github.com/sonic-net/sonic-mgmt/pull/14883"
    },
    {
        "number": 14918,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-10T01:39:53Z",
        "comment_author": "wsycqyz",
        "comment_body": "With which Cisco topo did you deploy the 8101 fanout?"
    },
    {
        "number": 14918,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-14T02:40:13Z",
        "review_author": "kevinskwang"
    },
    {
        "number": 14918,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-14T02:40:13Z",
        "latestReview_author": "kevinskwang",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14912,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-10T03:56:00Z",
        "comment_author": "ZhaohuiS",
        "comment_body": "#11968 was reverted in 202405 https://github.com/sonic-net/sonic-mgmt/pull/14912\r\nSo we still need to use `length = len(list(condition.keys())[0])` \r\ninstead of `\"length = len(list(condition.keys())[0])\"` ?\r\nAnd the solution is to update conditional mark yml file and add all conditions for one case, right?"
    },
    {
        "number": 14912,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-10T05:45:11Z",
        "comment_author": "yutongzhang-microsoft",
        "comment_body": "> #11968 was reverted in 202405 #14912 So we still need to use `length = len(list(condition.keys())[0])` instead of `\"length = len(list(condition.keys())[0])\"` ? And the solution is to update conditional mark yml file and add all conditions for one case, right?\r\n\r\nHi, @ZhaohuiS, we have new logic in conditional mark in #14395 which will cherry pick into 202405 soon. Yes, this is the solution "
    },
    {
        "number": 14912,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-10T06:03:44Z",
        "comment_author": "mssonicbld",
        "comment_body": "@yutongzhang-microsoft PR conflicts with 202311 branch"
    },
    {
        "number": 14912,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-10T06:03:45Z",
        "comment_author": "mssonicbld",
        "comment_body": "@yutongzhang-microsoft PR conflicts with 202405 branch"
    },
    {
        "number": 14912,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-10T06:03:45Z",
        "comment_author": "mssonicbld",
        "comment_body": "@yutongzhang-microsoft PR conflicts with 202305 branch"
    },
    {
        "number": 14912,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-10T06:03:46Z",
        "comment_author": "mssonicbld",
        "comment_body": "@yutongzhang-microsoft PR conflicts with 202205 branch"
    },
    {
        "number": 14912,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-10T06:03:55Z",
        "comment_author": "mssonicbld",
        "comment_body": "@yutongzhang-microsoft PR conflicts with 202012 branch"
    },
    {
        "number": 14912,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-11T05:47:58Z",
        "comment_author": "mssonicbld",
        "comment_body": "@yutongzhang-microsoft PR conflicts with 202405 branch"
    },
    {
        "number": 14912,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-10T03:15:11Z",
        "review_author": "wangxin"
    },
    {
        "number": 14912,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-10T03:15:11Z",
        "latestReview_author": "wangxin",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14911,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-10T00:34:45Z",
        "comment_author": "wen587",
        "comment_body": "/azpw run Azure.sonic-mgmt"
    },
    {
        "number": 14911,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-10T00:34:48Z",
        "comment_author": "mssonicbld",
        "comment_body": "/AzurePipelines run Azure.sonic-mgmt"
    },
    {
        "number": 14911,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-10T00:34:58Z",
        "comment_author": "azure-pipelines",
        "comment_body": "<samp>\nAzure Pipelines successfully started running 1 pipeline(s).<br>\r\n\n</samp>"
    },
    {
        "number": 14911,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-10T07:21:10Z",
        "review_author": "ganglyu"
    },
    {
        "number": 14911,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-10T07:21:10Z",
        "latestReview_author": "ganglyu",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14910,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-10T00:34:42Z",
        "comment_author": "wen587",
        "comment_body": "/azpw run Azure.sonic-mgmt"
    },
    {
        "number": 14910,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-10T00:34:45Z",
        "comment_author": "mssonicbld",
        "comment_body": "/AzurePipelines run Azure.sonic-mgmt"
    },
    {
        "number": 14910,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-10T00:34:55Z",
        "comment_author": "azure-pipelines",
        "comment_body": "<samp>\nAzure Pipelines successfully started running 1 pipeline(s).<br>\r\n\n</samp>"
    },
    {
        "number": 14910,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-10T07:20:52Z",
        "review_author": "ganglyu"
    },
    {
        "number": 14910,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-10T07:20:52Z",
        "latestReview_author": "ganglyu",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14909,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-10T00:34:19Z",
        "comment_author": "wen587",
        "comment_body": "/azpw run Azure.sonic-mgmt"
    },
    {
        "number": 14909,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-10T00:34:21Z",
        "comment_author": "mssonicbld",
        "comment_body": "/AzurePipelines run Azure.sonic-mgmt"
    },
    {
        "number": 14909,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-10T00:34:31Z",
        "comment_author": "azure-pipelines",
        "comment_body": "<samp>\nAzure Pipelines successfully started running 1 pipeline(s).<br>\r\n\n</samp>"
    },
    {
        "number": 14909,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-10T07:16:05Z",
        "review_author": "StormLiangMS"
    },
    {
        "number": 14909,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-10T07:16:05Z",
        "latestReview_author": "StormLiangMS",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14907,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-09T07:31:14Z",
        "comment_author": "mssonicbld",
        "comment_body": "Original PR: https://github.com/sonic-net/sonic-mgmt/pull/14334"
    },
    {
        "number": 14907,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-17T14:51:02Z",
        "comment_author": "alpeshspatel",
        "comment_body": "@kevinwangsk can we get this merged please? "
    },
    {
        "number": 14907,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-18T07:37:46Z",
        "comment_author": "kevinskwang",
        "comment_body": "/azp run\r\n"
    },
    {
        "number": 14907,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-18T07:37:57Z",
        "comment_author": "azure-pipelines",
        "comment_body": "<samp>\nAzure Pipelines successfully started running 1 pipeline(s).<br>\r\n\n</samp>"
    },
    {
        "number": 14907,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-10T20:25:27Z",
        "review_author": "bpar9"
    },
    {
        "number": 14907,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-18T07:37:16Z",
        "review_author": "kevinskwang"
    },
    {
        "number": 14907,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-10T20:25:27Z",
        "latestReview_author": "bpar9",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14907,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-18T07:37:16Z",
        "latestReview_author": "kevinskwang",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14905,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-09T07:19:28Z",
        "comment_author": "mssonicbld",
        "comment_body": "Original PR: https://github.com/sonic-net/sonic-mgmt/pull/14894"
    },
    {
        "number": 14905,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-09T10:29:21Z",
        "review_author": "ganglyu"
    },
    {
        "number": 14905,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-09T10:29:21Z",
        "latestReview_author": "ganglyu",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14904,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-09T07:19:27Z",
        "comment_author": "mssonicbld",
        "comment_body": "Original PR: https://github.com/sonic-net/sonic-mgmt/pull/14894"
    },
    {
        "number": 14904,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-09T10:29:57Z",
        "review_author": "ganglyu"
    },
    {
        "number": 14904,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-09T10:29:57Z",
        "latestReview_author": "ganglyu",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14902,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-09T06:13:03Z",
        "comment_author": "mssonicbld",
        "comment_body": "Original PR: https://github.com/sonic-net/sonic-mgmt/pull/14789"
    },
    {
        "number": 14901,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-09T06:08:49Z",
        "comment_author": "mssonicbld",
        "comment_body": "Original PR: https://github.com/sonic-net/sonic-mgmt/pull/14110"
    },
    {
        "number": 14900,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-09T06:06:13Z",
        "comment_author": "mssonicbld",
        "comment_body": "Original PR: https://github.com/sonic-net/sonic-mgmt/pull/14777"
    },
    {
        "number": 14898,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-09T03:44:15Z",
        "comment_author": "mssonicbld",
        "comment_body": "Original PR: https://github.com/sonic-net/sonic-mgmt/pull/14882"
    },
    {
        "number": 14897,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-09T03:33:56Z",
        "review_author": "yutongzhang-microsoft"
    },
    {
        "number": 14897,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-10T03:20:52Z",
        "review_author": "wangxin"
    },
    {
        "number": 14897,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-10T03:20:52Z",
        "latestReview_author": "wangxin",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14897,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-09T03:33:56Z",
        "latestReview_author": "yutongzhang-microsoft",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14894,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-09T07:19:26Z",
        "comment_author": "mssonicbld",
        "comment_body": "Cherry-pick PR to 202311: https://github.com/sonic-net/sonic-mgmt/pull/14904"
    },
    {
        "number": 14894,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-09T07:19:26Z",
        "comment_author": "mssonicbld",
        "comment_body": "Cherry-pick PR to 202405: https://github.com/sonic-net/sonic-mgmt/pull/14905"
    },
    {
        "number": 14894,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-09T07:19:30Z",
        "comment_author": "mssonicbld",
        "comment_body": "Cherry-pick PR to 202305: https://github.com/sonic-net/sonic-mgmt/pull/14906"
    },
    {
        "number": 14894,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-09T04:49:14Z",
        "review_author": "qiluo-msft"
    },
    {
        "number": 14894,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-09T07:18:04Z",
        "review_author": "StormLiangMS"
    },
    {
        "number": 14894,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-09T04:49:14Z",
        "latestReview_author": "qiluo-msft",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14894,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-09T07:18:04Z",
        "latestReview_author": "StormLiangMS",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14893,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-09T22:11:30Z",
        "review_author": "bingwang-ms"
    },
    {
        "number": 14893,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-09T22:11:30Z",
        "latestReview_author": "bingwang-ms",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14892,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-09T02:01:34Z",
        "comment_author": "wsycqyz",
        "comment_body": "Let's retry the PR test. @XuChen-MSFT Can you help review this?"
    },
    {
        "number": 14892,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-09T03:01:26Z",
        "comment_author": "sdszhang",
        "comment_body": "@abdosi @yejianquan @kevinskwang for viz."
    },
    {
        "number": 14892,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-09T05:46:57Z",
        "comment_author": "rraghav-cisco",
        "comment_body": "My run log after the modifications:\r\n```\r\n===================================================================================== PASSES =====================================================================================\r\n_______________________________________________________________ TestQosSai.testQosSaiDscpToPgMapping[single_asic] ________________________________________________________________\r\n__________________________________________________________ TestQosSai.testQosSaiDscpToPgMapping[single_dut_multi_asic] ___________________________________________________________\r\n_____________________________________________________ TestQosSai.testQosSaiDscpToPgMapping[multi_dut_longlink_to_shortlink] ______________________________________________________\r\n_____________________________________________________ TestQosSai.testQosSaiDscpToPgMapping[multi_dut_shortlink_to_shortlink] _____________________________________________________\r\n_____________________________________________________ TestQosSai.testQosSaiDscpToPgMapping[multi_dut_shortlink_to_longlink] ______________________________________________________\r\n--------- generated xml file: /run_logs/16648/2024-10-08-19-47-50/K-400g-LL-sasic-gb/qos/test_qos_sai.py::TestQosSai::testQosSaiDscpToPgMapping_2024-10-08-19-47-50.xml ----------\r\nINFO:root:Can not get Allure report URL. Please check logs\r\n----------------------------------------------------------------------------- live log sessionfinish -----------------------------------------------------------------------------\r\n05:26:17 __init__.pytest_terminal_summary L0067 INFO | Can not get Allure report URL. Please check logs\r\n============================================================================ short test summary info =============================================================================\r\nPASSED qos/test_qos_sai.py::TestQosSai::testQosSaiDscpToPgMapping[single_asic]\r\nPASSED qos/test_qos_sai.py::TestQosSai::testQosSaiDscpToPgMapping[single_dut_multi_asic]\r\nPASSED qos/test_qos_sai.py::TestQosSai::testQosSaiDscpToPgMapping[multi_dut_longlink_to_shortlink]\r\nPASSED qos/test_qos_sai.py::TestQosSai::testQosSaiDscpToPgMapping[multi_dut_shortlink_to_shortlink]\r\nPASSED qos/test_qos_sai.py::TestQosSai::testQosSaiDscpToPgMapping[multi_dut_shortlink_to_longlink]\r\nERROR qos/test_qos_sai.py::TestQosSai::testQosSaiDscpToPgMapping[single_asic] - Failed: Processes \"['analyze_logs--<MultiAsicSonicHost xx37-rp>']\" failed with exit code \"1\"\r\n============================================================== 5 passed, 1 warning, 1 error in 34704.99s (9:38:24) ===============================================================\r\nsonic@202405-qos-sonic-mgmt-prod:/data/tests$ \r\n```"
    },
    {
        "number": 14892,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-09T05:49:43Z",
        "comment_author": "rraghav-cisco",
        "comment_body": "@sdszhang , @wsycqyz , @XuChen-MSFT @abdosi : Can you pls check why azp runs are failing ? Thanks."
    },
    {
        "number": 14892,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-09T06:41:55Z",
        "comment_author": "wsycqyz",
        "comment_body": "> @sdszhang , @wsycqyz , @XuChen-MSFT @abdosi : Can you pls check why azp runs are failing ? Thanks.\r\n\r\nLet the pipeline finish and I will look into it."
    },
    {
        "number": 14892,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-10T02:05:08Z",
        "comment_author": "yejianquan",
        "comment_body": "> > @sdszhang , @wsycqyz , @XuChen-MSFT @abdosi : Can you pls check why azp runs are failing ? Thanks.\r\n> \r\n> Let the pipeline finish and I will look into it.\r\n\r\nThe onboarding tests are optional, all the mandetory tests passed"
    },
    {
        "number": 14892,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-11T00:21:15Z",
        "comment_author": "sdszhang",
        "comment_body": "@rraghav-cisco can you attach the test result for T0 or T1 testbed to make sure no regression failures? Thanks."
    },
    {
        "number": 14892,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-15T03:41:28Z",
        "comment_author": "rraghav-cisco",
        "comment_body": "> @rraghav-cisco can you attach the test result for T0 or T1 testbed to make sure no regression failures? Thanks.\r\n\r\n@kevinskwang : The following is the result from 8101, I have attached the xls to this PR. The single failure is not related to this PR.\r\n```\r\nSKIPPED [3] qos/test_qos_sai.py: Unsupported platform or testbed type.\r\nFAILED qos/test_qos_sai.py::TestQosSai::testQosSaiLosslessVoq[single_asic-lossless_voq_1] - tests.common.errors.RunAnsibleModuleFail: run module shell failed, Ansible Results =>\r\n============================================================================================= 1 failed, 25 passed, 115 skipped, 1 warning in 4351.98s (1:12:31) ==============================================================================================\r\nsonic@sonic-ucs-m3-4:/data/sonic-mgmt/tests$ \r\n```\r\n[test_2024-10-15-02-10-25.log](https://github.com/user-attachments/files/17372189/test_2024-10-15-02-10-25.log)\r\n"
    },
    {
        "number": 14892,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-18T03:54:14Z",
        "comment_author": "mssonicbld",
        "comment_body": "Cherry-pick PR to 202405: https://github.com/sonic-net/sonic-mgmt/pull/15043"
    },
    {
        "number": 14892,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-11T00:38:18Z",
        "review_author": "kevinskwang"
    },
    {
        "number": 14892,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-11T00:58:34Z",
        "review_author": "rraghav-cisco"
    },
    {
        "number": 14892,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-16T04:35:34Z",
        "review_author": "sdszhang"
    },
    {
        "number": 14892,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-11T00:38:18Z",
        "latestReview_author": "kevinskwang",
        "latestReview_state": "COMMENTED"
    },
    {
        "number": 14892,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-16T04:35:34Z",
        "latestReview_author": "sdszhang",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14890,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-08T21:26:28Z",
        "comment_author": "mssonicbld",
        "comment_body": "The [pre-commit](http://pre-commit.com/) check detected issues in the files touched by this pull request.\nThe pre-commit check is a mandatory check, please fix detected issues.\n\nDetailed pre-commit check results:\n<samp>trim trailing whitespace.................................................Failed<br/>- hook id: trailing-whitespace<br/>- exit code: 1<br/>- files were modified by this hook<br/><br/>Fixing tests/bgp/test_bgp_stress_link_flap.py<br/><br/>fix end of files.........................................................Passed<br/>check yaml...........................................(no files to check)Skipped<br/>check for added large files..............................................Passed<br/>check python ast.........................................................Passed<br/>flake8...................................................................Failed<br/>- hook id: flake8<br/>- exit code: 1<br/><br/>tests/bgp/test_bgp_stress_link_flap.py:5:1: F401 'traceback' imported but unused<br/>tests/bgp/test_bgp_stress_link_flap.py:6:1: F401 'threading' imported but unused<br/>tests/bgp/test_bgp_stress_link_flap.py:10:1: F401 'tests.common.utilities.InterruptableThread' imported but unused<br/><br/>flake8...............................................(no files to check)Skipped<br/>...<br/>[truncated extra lines, please run pre-commit locally to view full check results]<br/></samp>\n\nTo run the pre-commit checks locally, you can follow below steps:\n1. Ensure that default python is python3. In sonic-mgmt docker container, default python is python2. You can run\n the check by activating the python3 virtual environment in sonic-mgmt docker container or outside of sonic-mgmt\n docker container.\n2. Ensure that the `pre-commit` package is installed:\n```\nsudo pip install pre-commit\n```\n3. Go to repository root folder\n4. Install the pre-commit hooks:\n```\npre-commit install\n```\n5. Use pre-commit to check staged file:\n```\npre-commit\n```\n6. Alternatively, you can check committed files using:\n```\npre-commit run --from-ref <commit_id> --to-ref <commit_id>\n```"
    },
    {
        "number": 14890,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-08T23:16:23Z",
        "comment_author": "dayouliu1",
        "comment_body": "/azp run Azure.sonic-mgmt"
    },
    {
        "number": 14890,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-08T23:16:29Z",
        "comment_author": "azure-pipelines",
        "comment_body": "<samp>\nCommenter does not have sufficient privileges for PR 14890 in repo sonic-net/sonic-mgmt<br>\r\n\n</samp>"
    },
    {
        "number": 14890,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-09T02:02:41Z",
        "comment_author": "wsycqyz",
        "comment_body": "let's try again pr test."
    },
    {
        "number": 14890,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-10T04:42:28Z",
        "comment_author": "StormLiangMS",
        "comment_body": "/azp run Azure.sonic-mgmt "
    },
    {
        "number": 14890,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-10T04:42:38Z",
        "comment_author": "azure-pipelines",
        "comment_body": "<samp>\nAzure Pipelines successfully started running 1 pipeline(s).<br>\r\n\n</samp>"
    },
    {
        "number": 14890,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-10T04:42:55Z",
        "comment_author": "StormLiangMS",
        "comment_body": "hi @lipxu could you help to take a look?"
    },
    {
        "number": 14890,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-10T06:05:23Z",
        "comment_author": "lipxu",
        "comment_body": "@dayouliu1 , thank you for enhancing the script, could you please share the data on how many flaps would be simulated using asyncio within a 60-seconds, thanks a lot"
    },
    {
        "number": 14890,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-14T17:10:34Z",
        "comment_author": "dayouliu1",
        "comment_body": "> @dayouliu1 , thank you for enhancing the script, could you please share the data on how many flaps would be simulated using asyncio within a 60-seconds, thanks a lot\r\n\r\nI updated the logging and made minor changes to the function logical flow for the test so that it will accurately record the flaps. From my testing, it will flap all the interfaces (dut, fanout, neighbor) once if TEST_RUN_DURATION=60 "
    },
    {
        "number": 14890,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-15T02:36:16Z",
        "comment_author": "lipxu",
        "comment_body": "> > @dayouliu1 , thank you for enhancing the script, could you please share the data on how many flaps would be simulated using asyncio within a 60-seconds, thanks a lot\r\n> \r\n> I updated the logging and made minor changes to the function logical flow for the test so that it will accurately record the flaps. From my testing, it will flap all the interfaces (dut, fanout, neighbor) once if TEST_RUN_DURATION=60\r\n\r\nthanks for your information, @dayouliu1 , this case is the test gap for the link flap in production, the flaps occured 22 times per second, seems the stress in this case is not enough, do you have any ideals about how to improve it in the further, thanks"
    },
    {
        "number": 14890,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-16T01:29:57Z",
        "comment_author": "dayouliu1",
        "comment_body": "@lipxu Just to clarify, when you say the flaps occurs 22 times per second, which interface is flapping? Is it one particular interface or the combined total of the DUT, fanout and neighbor?\r\n\r\nMore specifically, for the test, what flap count values (dut, fanout, neighbor) are we expecting for TEST_RUN_DURATION=60 for each parameter?\r\n\r\nEx: \r\nFor test_type=\"dut\" on a dut with X interfaces, we expect\r\ndut_flap_count: A\r\nfanout_flap_count: B\r\nneighbor_flap_count: C\r\n\r\nFor test_type=\"all\" on a dut with X interfaces, we expect\r\ndut_flap_count: A\r\nfanout_flap_count: B\r\nneighbor_flap_count: C\r\n\r\n"
    },
    {
        "number": 14890,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-16T01:54:40Z",
        "comment_author": "lipxu",
        "comment_body": "> @lipxu Just to clarify, when you say the flaps occurs 22 times per second, which interface is flapping? Is it one particular interface or the combined total of the DUT, fanout and neighbor?\r\n> \r\n> More specifically, for the test, what flap count values (dut, fanout, neighbor) are we expecting for TEST_RUN_DURATION=60 for each parameter?\r\n> \r\n> Ex: For test_type=\"dut\" on a dut with X interfaces, we expect dut_flap_count: A fanout_flap_count: B neighbor_flap_count: C\r\n> \r\n> For test_type=\"all\" on a dut with X interfaces, we expect dut_flap_count: A fanout_flap_count: B neighbor_flap_count: C\r\n\r\n@dayouliu1 , I remember flaps occurs 22 times per second is for the one special port on DUT which maybe hit some HW or link issue. We introduced this case to try to handle such condition, but seems the stress is not enough, so just want to sync with you if you have any further enhancement ideals, maybe we can improve it in the further, thanks"
    },
    {
        "number": 14890,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-16T21:17:39Z",
        "comment_author": "dayouliu1",
        "comment_body": "So I ran the current multi-threaded test with `test_type=\"dut\"` and `TEST_RUN_DURATION=60` for a DUT with 32 interfaces and these were the results:\r\n\r\n```\r\nINFO:test_bgp_stress_link_flap:Test running for 81.64742541313171 seconds\r\nINFO:test_bgp_stress_link_flap:Test run duration dut_flap_count 31 fanout_flap_count 0 neighbor_flap_count 0\r\n```\r\n\r\nIt had roughly similar performance to the asyncio approach, one flap per 2.5 seconds, so even the current test has a large performance gap to the proposed 22 flaps per second.\r\n\r\n@bobbymcgonigle could you follow up with your proposal? \r\n"
    },
    {
        "number": 14890,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-16T21:21:33Z",
        "comment_author": "bobbymcgonigle",
        "comment_body": "> > @lipxu Just to clarify, when you say the flaps occurs 22 times per second, which interface is flapping? Is it one particular interface or the combined total of the DUT, fanout and neighbor?\r\n> > More specifically, for the test, what flap count values (dut, fanout, neighbor) are we expecting for TEST_RUN_DURATION=60 for each parameter?\r\n> > Ex: For test_type=\"dut\" on a dut with X interfaces, we expect dut_flap_count: A fanout_flap_count: B neighbor_flap_count: C\r\n> > For test_type=\"all\" on a dut with X interfaces, we expect dut_flap_count: A fanout_flap_count: B neighbor_flap_count: C\r\n> \r\n> @dayouliu1 , I remember flaps occurs 22 times per second is for the one special port on DUT which maybe hit some HW or link issue. We introduced this case to try to handle such condition, but seems the stress is not enough, so just want to sync with you if you have any further enhancement ideals, maybe we can improve it in the further, thanks\r\n\r\n22 times per second was probably possible with NRZ speeds where multiple variables fell into place perfectly on your specific HW. With PAM4 speeds it is unlikely that this is even possible; CDR lock on PAM4 receivers takes multiple 100s of ms, and with some receivers can even be over 1 second. This doesn't even factor any additional time variables like how long it takes the python test to call cli shutdown commands etc.\r\n\r\nThis test runs on many devices with PAM4 links, we should either lower expectations of 22 flaps per second, or if this test cares primarily about BGP and not link events on the hw it runs on; imitate link events in SW for BGP to react against. For example maybe rather than issuing shut/no shut commands the APPL_DB operstatus could be updated in redis directly?\r\n\r\nIrrespective of the above, we should keep the current async approach in this PR from Dayou, which solves the deadlock+reported issues."
    },
    {
        "number": 14890,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-17T02:39:11Z",
        "comment_author": "StormLiangMS",
        "comment_body": "hi @bingwang-ms for 202405 cherry pick."
    },
    {
        "number": 14890,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-10T06:10:17Z",
        "review_author": "lipxu"
    },
    {
        "number": 14890,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-14T17:03:22Z",
        "review_author": "dayouliu1"
    },
    {
        "number": 14890,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-17T01:57:15Z",
        "review_author": "lipxu"
    },
    {
        "number": 14890,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-17T02:38:55Z",
        "review_author": "StormLiangMS"
    },
    {
        "number": 14890,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-17T02:38:55Z",
        "latestReview_author": "StormLiangMS",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14890,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-17T01:57:15Z",
        "latestReview_author": "lipxu",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14889,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-10T01:27:51Z",
        "comment_author": "mssonicbld",
        "comment_body": "Cherry-pick PR to 202405: https://github.com/sonic-net/sonic-mgmt/pull/14933"
    },
    {
        "number": 14889,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-09T01:51:23Z",
        "review_author": "wsycqyz"
    },
    {
        "number": 14889,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-10T01:26:05Z",
        "review_author": "kevinskwang"
    },
    {
        "number": 14889,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-09T01:51:23Z",
        "latestReview_author": "wsycqyz",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14889,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-10T01:26:05Z",
        "latestReview_author": "kevinskwang",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14886,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-10T00:59:10Z",
        "comment_author": "mssonicbld",
        "comment_body": "Cherry-pick PR to 202405: https://github.com/sonic-net/sonic-mgmt/pull/14931"
    },
    {
        "number": 14886,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-08T19:35:44Z",
        "review_author": "saiarcot895"
    },
    {
        "number": 14886,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-08T19:35:44Z",
        "latestReview_author": "saiarcot895",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14884,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-17T02:09:17Z",
        "comment_author": "mssonicbld",
        "comment_body": "Cherry-pick PR to 202405: https://github.com/sonic-net/sonic-mgmt/pull/15020"
    },
    {
        "number": 14884,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-22T00:35:15Z",
        "comment_author": "mssonicbld",
        "comment_body": "Cherry-pick PR to 202311: https://github.com/sonic-net/sonic-mgmt/pull/15075"
    },
    {
        "number": 14884,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-16T01:35:20Z",
        "review_author": "zjswhhh"
    },
    {
        "number": 14884,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-17T02:08:41Z",
        "review_author": "bingwang-ms"
    },
    {
        "number": 14884,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-16T01:35:20Z",
        "latestReview_author": "zjswhhh",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14884,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-17T02:08:41Z",
        "latestReview_author": "bingwang-ms",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14883,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-09T15:45:19Z",
        "comment_author": "bingwang-ms",
        "comment_body": "Does this issue only exist on particular platform?"
    },
    {
        "number": 14883,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-09T15:46:40Z",
        "comment_author": "mssonicbld",
        "comment_body": "Cherry-pick PR to 202405: https://github.com/sonic-net/sonic-mgmt/pull/14920"
    },
    {
        "number": 14883,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-09T15:45:59Z",
        "review_author": "bingwang-ms"
    },
    {
        "number": 14883,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-09T15:45:59Z",
        "latestReview_author": "bingwang-ms",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14882,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-08T06:59:53Z",
        "comment_author": "sdszhang",
        "comment_body": "Tests log:\r\n\r\nBefore the fix (around 15 minutes)\r\n```\r\n01/10/2024 20:55:34 reboot.execute_reboot_command L0214 INFO | rebooting svcstr2-8800-lc2-1 with command \"reboot\"\r\n......\r\n01/10/2024 21:14:51 reboot.reboot L0324 INFO | cold reboot finished on svcstr2-8800-lc2-1\r\n```\r\n\r\nAfter the fix (8 mins 33 seconds)\r\n```\r\n08/10/2024 05:19:23 reboot.execute_reboot_command L0214 INFO | rebooting svcstr2-8800-lc2-1 with command \"reboot\"\r\n......\r\n08/10/2024 05:27:56 reboot.reboot L0324 INFO | cold reboot finished on svcstr2-8800-lc2-1\r\n```\r\n"
    },
    {
        "number": 14882,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-09T03:44:13Z",
        "comment_author": "mssonicbld",
        "comment_body": "Cherry-pick PR to 202405: https://github.com/sonic-net/sonic-mgmt/pull/14898"
    },
    {
        "number": 14882,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-09T03:43:15Z",
        "review_author": "yejianquan"
    },
    {
        "number": 14882,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-09T03:43:15Z",
        "latestReview_author": "yejianquan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14881,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-08T06:50:40Z",
        "comment_author": "mssonicbld",
        "comment_body": "The [pre-commit](http://pre-commit.com/) check detected issues in the files touched by this pull request.\nThe pre-commit check is a mandatory check, please fix detected issues.\n\nDetailed pre-commit check results:\n<samp>trim trailing whitespace.................................................Passed<br/>fix end of files.........................................................Passed<br/>check yaml...........................................(no files to check)Skipped<br/>check for added large files..............................................Passed<br/>check python ast.........................................................Passed<br/>flake8...................................................................Failed<br/>- hook id: flake8<br/>- exit code: 1<br/><br/>tests/common/gu_utils.py:17:11: E225 missing whitespace around operator<br/><br/>flake8...............................................(no files to check)Skipped<br/>check conditional mark sort..........................(no files to check)Skipped<br/></samp>\n\nTo run the pre-commit checks locally, you can follow below steps:\n1. Ensure that default python is python3. In sonic-mgmt docker container, default python is python2. You can run\n the check by activating the python3 virtual environment in sonic-mgmt docker container or outside of sonic-mgmt\n docker container.\n2. Ensure that the `pre-commit` package is installed:\n```\nsudo pip install pre-commit\n```\n3. Go to repository root folder\n4. Install the pre-commit hooks:\n```\npre-commit install\n```\n5. Use pre-commit to check staged file:\n```\npre-commit\n```\n6. Alternatively, you can check committed files using:\n```\npre-commit run --from-ref <commit_id> --to-ref <commit_id>\n```"
    },
    {
        "number": 14881,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-09T08:28:09Z",
        "comment_author": "mssonicbld",
        "comment_body": "@wen587 PR conflicts with 202405 branch"
    },
    {
        "number": 14881,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-09T08:28:10Z",
        "comment_author": "mssonicbld",
        "comment_body": "@wen587 PR conflicts with 202305 branch"
    },
    {
        "number": 14881,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-09T08:28:12Z",
        "comment_author": "mssonicbld",
        "comment_body": "@wen587 PR conflicts with 202311 branch"
    },
    {
        "number": 14881,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-08T06:55:37Z",
        "review_author": "ganglyu"
    },
    {
        "number": 14881,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-08T06:57:15Z",
        "review_author": "ganglyu"
    },
    {
        "number": 14881,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-09T08:26:43Z",
        "review_author": "StormLiangMS"
    },
    {
        "number": 14881,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-08T06:57:15Z",
        "latestReview_author": "ganglyu",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14881,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-09T08:26:43Z",
        "latestReview_author": "StormLiangMS",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14879,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-08T06:47:32Z",
        "comment_author": "mssonicbld",
        "comment_body": "Original PR: https://github.com/sonic-net/sonic-mgmt/pull/14303"
    },
    {
        "number": 14878,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-08T07:12:49Z",
        "review_author": "yejianquan"
    },
    {
        "number": 14878,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-08T07:12:49Z",
        "latestReview_author": "yejianquan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14877,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-08T05:34:36Z",
        "review_author": "wsycqyz"
    },
    {
        "number": 14877,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-08T05:34:36Z",
        "latestReview_author": "wsycqyz",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14876,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-08T04:14:13Z",
        "comment_author": "mssonicbld",
        "comment_body": "Original PR: https://github.com/sonic-net/sonic-mgmt/pull/14846"
    },
    {
        "number": 14875,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-15T00:02:02Z",
        "comment_author": "mssonicbld",
        "comment_body": "Cherry-pick PR to 202405: https://github.com/sonic-net/sonic-mgmt/pull/14988"
    },
    {
        "number": 14875,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-09T01:12:03Z",
        "review_author": "arlakshm"
    },
    {
        "number": 14875,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-09T01:12:03Z",
        "latestReview_author": "arlakshm",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14873,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-08T01:46:55Z",
        "comment_author": "mssonicbld",
        "comment_body": "Original PR: https://github.com/sonic-net/sonic-mgmt/pull/14742"
    },
    {
        "number": 14872,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-08T01:44:17Z",
        "comment_author": "mssonicbld",
        "comment_body": "Original PR: https://github.com/sonic-net/sonic-mgmt/pull/14416"
    },
    {
        "number": 14871,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-08T01:38:39Z",
        "comment_author": "mssonicbld",
        "comment_body": "Original PR: https://github.com/sonic-net/sonic-mgmt/pull/14841"
    },
    {
        "number": 14870,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-08T00:41:34Z",
        "comment_author": "mssonicbld",
        "comment_body": "Original PR: https://github.com/sonic-net/sonic-mgmt/pull/14699"
    },
    {
        "number": 14869,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-08T00:41:34Z",
        "comment_author": "mssonicbld",
        "comment_body": "Original PR: https://github.com/sonic-net/sonic-mgmt/pull/14699"
    },
    {
        "number": 14868,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-08T00:40:39Z",
        "comment_author": "mssonicbld",
        "comment_body": "Original PR: https://github.com/sonic-net/sonic-mgmt/pull/14699"
    },
    {
        "number": 14867,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-07T23:45:00Z",
        "comment_author": "mssonicbld",
        "comment_body": "Original PR: https://github.com/sonic-net/sonic-mgmt/pull/14743"
    },
    {
        "number": 14866,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-07T23:24:29Z",
        "comment_author": "mssonicbld",
        "comment_body": "The [pre-commit](http://pre-commit.com/) check detected issues in the files touched by this pull request.\nThe pre-commit check is a mandatory check, please fix detected issues.\n\nDetailed pre-commit check results:\n<samp>trim trailing whitespace.................................................Passed<br/>fix end of files.........................................................Passed<br/>check yaml...............................................................Passed<br/>check for added large files..............................................Passed<br/>check python ast.....................................(no files to check)Skipped<br/>flake8...............................................(no files to check)Skipped<br/>flake8...............................................(no files to check)Skipped<br/>check conditional mark sort..............................................Failed<br/>- hook id: check-conditional-mark-sort<br/>- exit code: 1<br/><br/>The entries in tests/common/plugins/conditional_mark/tests_mark_conditions.yaml tests/common/plugins/conditional_mark/tests_mark_conditions_acl.yaml tests/common/plugins/conditional_mark/tests_mark_conditions_drop_packets.yaml tests/common/plugins/conditional_mark/tests_mark_conditions_platform_tests.yaml tests/common/plugins/conditional_mark/tests_mark_conditions_skip_traffic_test.yaml are not sorted in alphabetic order, please adjust the order before commit<br/>===========================================================================<br/>File: tests/common/plugins/conditional_mark/tests_mark_conditions.yaml<br/>===========================================================================<br/>Conditional marks before sort: ['acl/custom_acl_table/test_custom_acl_table.py', 'acl/null_route/test_null_route_helper.py', 'acl/test_acl.py', 'acl/test_acl_outer_vlan.py', 'arp/test_arp_dualtor.py::test_proxy_arp_for_standby_neighbor', 'arp/test_neighbor_mac_noptf.py', 'arp/test_unknown_mac.py', 'arp/test_wr_arp.py', 'bfd/test_bfd.py', 'bfd/test_bfd.py::test_bfd_basic', 'bfd/test_bfd.py::test_bfd_scale', 'bfd/test_bfd_static_route.py', 'bfd/test_bfd_traffic.py', 'bgp/test_bgp_allow_list.py', 'bgp/test_bgp_bbr.py', 'bgp/test_bgp_gr_helper.py', 'bgp/test_bgp_multipath_relax.py', 'bgp/test_bgp_queue.py', 'bgp/test_bgp_slb.py', 'bgp/test_bgp_slb.py::test_bgp_slb_neighbor_persistence_across_advanced_reboot', 'bgp/test_bgp_speaker.py', 'bgp/test_bgp_suppress_fib.py', 'bgp/test_bgpmon.py', 'bgp/test_traffic_shift.py::test_load_minigraph_with_traffic_shift_away', 'cacl/test_cacl_application.py::test_cacl_application_dualtor', 'cacl/test_cacl_application.py::test_cacl_application_nondualtor', 'cacl/test_cacl_application.py::test_multiasic_cacl_application', 'configlet/test_add_rack.py', 'container_hardening/test_container_hardening.py::test_container_privileged', 'copp/test_copp.py', 'copp/test_copp.py::TestCOPP::test_add_new_trap', 'copp/test_copp.py::TestCOPP::test_remove_trap', 'copp/test_copp.py::TestCOPP::test_trap_config_save_after_reboot', 'crm/test_crm.py::test_crm_fdb_entry', 'decap/test_decap.py::test_decap[ttl=pipe, dscp=pipe, vxlan=disable]', 'decap/test_decap.py::test_decap[ttl=pipe, dscp=pipe, vxlan=set_unset]', 'decap/test_decap.py::test_decap[ttl=pipe, dscp=uniform, vxlan=disable]', 'decap/test_decap.py::test_decap[ttl=pipe, dscp=uniform, vxlan=set_unset]', 'decap/test_decap.py::test_decap[ttl=uniform, dscp=pipe, vxlan=disable]', 'decap/test_decap.py::test_decap[ttl=uniform, dscp=pipe, vxlan=set_unset]', 'decap/test_decap.py::test_decap[ttl=uniform, dscp=uniform, vxlan=disable]', 'decap/test_decap.py::test_decap[ttl=uniform, dscp=uniform, vxlan=set_unset]', 'decap/test_subnet_decap.py::test_vlan_subnet_decap', 'dhcp_relay/test_dhcp_relay.py', 'dhcp_relay/test_dhcp_relay.py::test_dhcp_relay_after_link_flap', 'dhcp_relay/test_dhcp_relay.py::test_dhcp_relay_random_sport', 'dhcp_relay/test_dhcp_relay.py::test_dhcp_relay_start_with_uplinks_down', 'dhcp_relay/test_dhcp_relay.py::test_dhcp_relay_unicast_mac', 'dhcp_relay/test_dhcpv6_relay.py', 'drop_packets', 'dualtor/test_ipinip.py::test_encap_with_mirror_session', 'dualtor/test_orch_stress.py', 'dualtor/test_orchagent_active_tor_downstream.py', 'dualtor/test_orchagent_active_tor_downstream.py::test_downstream_ecmp_nexthops', 'dualtor/test_orchagent_mac_move.py', 'dualtor/test_orchagent_standby_tor_downstream.py::test_downstream_standby_mux_toggle_active', 'dualtor/test_orchagent_standby_tor_downstream.py::test_standby_tor_downstream', 'dualtor/test_orchagent_standby_tor_downstream.py::test_standby_tor_downstream_bgp_recovered', 'dualtor/test_orchagent_standby_tor_downstream.py::test_standby_tor_downstream_loopback_route_readded', 'dualtor/test_orchagent_standby_tor_downstream.py::test_standby_tor_downstream_t1_link_recovered', 'dualtor/test_orchagent_standby_tor_downstream.py::test_standby_tor_remove_neighbor_downstream_standby', 'dualtor/test_standby_tor_upstream_mux_toggle.py', 'dualtor/test_switchover_failure.py', 'dualtor/test_tor_ecn.py::test_dscp_to_queue_during_encap_on_standby', 'dualtor/test_tor_ecn.py::test_ecn_during_encap_on_standby', 'dualtor/test_tunnel_memory_leak.py::test_tunnel_memory_leak', 'dualtor_io', 'dualtor_io/test_link_failure.py::test_active_link_admin_down_config_reload_link_up_downstream_standby[active-active]', 'dualtor_io/test_link_failure.py::test_active_link_down_downstream_active', 'dualtor_io/test_link_failure.py::test_active_link_down_downstream_active_soc', 'dualtor_io/test_link_failure.py::test_active_link_down_downstream_standby', 'dualtor_io/test_link_failure.py::test_active_link_down_upstream', 'dualtor_io/test_link_failure.py::test_active_link_down_upstream_soc', 'dualtor_io/test_link_failure.py::test_standby_link_down_downstream_active', 'dualtor_io/test_link_failure.py::test_standby_link_down_downstream_standby', 'dualtor_io/test_link_failure.py::test_standby_link_down_upstream', 'dut_console', 'ecmp/inner_hashing/test_inner_hashing.py', 'ecmp/inner_hashing/test_inner_hashing_lag.py', 'ecmp/inner_hashing/test_wr_inner_hashing.py', 'ecmp/inner_hashing/test_wr_inner_hashing_lag.py', 'ecmp/test_ecmp_sai_value.py', 'ecmp/test_fgnhg.py', 'everflow/test_everflow_per_interface.py', 'everflow/test_everflow_per_interface.py::test_everflow_per_interface[ipv6-default]', 'everflow/test_everflow_per_interface.py::test_everflow_per_interface[ipv6-m0_l3_scenario]', 'everflow/test_everflow_per_interface.py::test_everflow_per_interface[ipv6-m0_vlan_scenario]', 'everflow/test_everflow_testbed.py::EverflowIPv4Tests::test_everflow_dscp_with_policer', 'everflow/test_everflow_testbed.py::TestEverflowV4EgressAclEgressMirror', 'everflow/test_everflow_testbed.py::TestEverflowV4EgressAclEgressMirror::test_everflow_dscp_with_policer', 'everflow/test_everflow_testbed.py::TestEverflowV4IngressAclIngressMirror::test_everflow_dscp_with_policer', 'fdb/test_fdb_mac_expire.py', 'fib/test_fib.py::test_ipinip_hash', 'generic_config_updater', 'generic_config_updater/test_dhcp_relay.py', 'generic_config_updater/test_dynamic_acl.py', 'generic_config_updater/test_incremental_qos.py', 'generic_config_updater/test_ecn_config_update.py::test_ecn_config_updates', 'generic_config_updater/test_eth_interface.py::test_replace_fec', 'generic_config_updater/test_eth_interface.py::test_toggle_pfc_asym', 'generic_config_updater/test_eth_interface.py::test_update_speed', 'generic_config_updater/test_incremental_qos.py::test_incremental_qos_config_updates', 'generic_config_updater/test_mmu_dynamic_threshold_config_update.py::test_dynamic_th_config_updates', 'generic_config_updater/test_pfcwd_status.py', 'generic_config_updater/test_pg_headroom_update.py', 'hash/test_generic_hash.py::test_algorithm_config', 'hash/test_generic_hash.py::test_backend_error_messages', 'hash/test_generic_hash.py::test_ecmp_and_lag_hash', 'hash/test_generic_hash.py::test_ecmp_and_lag_hash[CRC-INNER_IP_PROTOCOL', 'hash/test_generic_hash.py::test_ecmp_hash[CRC-INNER_IP_PROTOCOL', 'hash/test_generic_hash.py::test_hash_capability', 'hash/test_generic_hash.py::test_lag_hash[CRC-INNER_IP_PROTOCOL', 'hash/test_generic_hash.py::test_lag_member_flap', 'hash/test_generic_hash.py::test_lag_member_flap[CRC-INNER_IP_PROTOCOL', 'hash/test_generic_hash.py::test_lag_member_remove_add', 'hash/test_generic_hash.py::test_lag_member_remove_add[CRC-INNER_IP_PROTOCOL', 'hash/test_generic_hash.py::test_nexthop_flap', 'hash/test_generic_hash.py::test_nexthop_flap[CRC-INNER_IP_PROTOCOL', 'hash/test_generic_hash.py::test_reboot', 'hash/test_generic_hash.py::test_reboot[CRC-INNER_IP_PROTOCOL', 'http/test_http_copy.py', 'iface_loopback_action/test_iface_loopback_action.py', 'iface_namingmode/test_iface_namingmode.py::TestConfigInterface', 'iface_namingmode/test_iface_namingmode.py::TestShowPriorityGroup', 'iface_namingmode/test_iface_namingmode.py::TestShowQueue', 'iface_namingmode/test_iface_namingmode.py::TestShowQueue::test_show_queue_persistent_watermark', 'iface_namingmode/test_iface_namingmode.py::TestShowQueue::test_show_queue_watermark', 'ip/test_ip_packet.py', 'ip/test_ip_packet.py::TestIPPacket::test_forward_ip_packet_with_0xffff_chksum_drop', 'ip/test_ip_packet.py::TestIPPacket::test_forward_ip_packet_with_0xffff_chksum_tolerant', 'ip/test_mgmt_ipv6_only.py', 'ipfwd/test_dip_sip.py', 'ipfwd/test_dir_bcast.py', 'ipfwd/test_mtu.py', 'link_flap/test_cont_link_flap.py', 'lldp/test_lldp.py::test_lldp', 'lldp/test_lldp.py::test_lldp_neighbor', 'macsec/test_dataplane.py::TestDataPlane::test_server_to_neighbor', 'macsec/test_interop_protocol.py::TestInteropProtocol::test_bgp', 'macsec/test_macsec.py', 'mpls/test_mpls.py', 'mvrf', 'nat', 'override_config_table/test_override_config_table.py', 'pc/test_lag_2.py::test_lag_db_status_with_po_update', 'pc/test_lag_member.py', 'pc/test_po_cleanup.py', 'pc/test_po_update.py::test_po_update', 'pc/test_po_update.py::test_po_update_io_no_loss', 'pc/test_po_voq.py', 'pfc/test_unknown_mac.py', 'pfc_asym/test_pfc_asym.py', 'pfc_asym/test_pfc_asym.py::test_pfc_asym_off_rx_pause_frames', 'pfcwd', 'pfcwd/test_pfc_config.py::TestPfcConfig::test_forward_action_cfg', 'pfcwd/test_pfcwd_all_port_storm.py', 'pfcwd/test_pfcwd_function.py::TestPfcwdFunc::test_pfcwd_no_traffic', 'pfcwd/test_pfcwd_warm_reboot.py', 'process_monitoring/test_critical_process_monitoring.py::test_orchagent_heartbeat', 'qos', 'qos/test_buffer.py', 'qos/test_buffer.py::test_buffer_model_test', 'qos/test_buffer_traditional.py', 'qos/test_pfc_pause.py::test_pfc_pause_lossless', 'qos/test_qos_dscp_mapping.py::TestQoSSaiDSCPQueueMapping_IPIP_Base::test_dscp_to_queue_mapping_pipe_mode', 'qos/test_qos_masic.py', 'qos/test_qos_sai.py', 'qos/test_qos_sai.py::TestQosSai', 'qos/test_qos_sai.py::TestQosSai::testIPIPQosSaiDscpToPgMapping', 'qos/test_qos_sai.py::TestQosSai::testPfcStormWithSharedHeadroomOccupancy', 'qos/test_qos_sai.py::TestQosSai::testQosSaiBufferPoolWatermark', 'qos/test_qos_sai.py::TestQosSai::testQosSaiDot1pPgMapping', 'qos/test_qos_sai.py::TestQosSai::testQosSaiDot1pQueueMapping', 'qos/test_qos_sai.py::TestQosSai::testQosSaiDscpQueueMapping', 'qos/test_qos_sai.py::TestQosSai::testQosSaiDscpToPgMapping', 'qos/test_qos_sai.py::TestQosSai::testQosSaiDwrrWeightChange', 'qos/test_qos_sai.py::TestQosSai::testQosSaiFullMeshTrafficSanity', 'qos/test_qos_sai.py::TestQosSai::testQosSaiHeadroomPoolSize', 'qos/test_qos_sai.py::TestQosSai::testQosSaiHeadroomPoolWatermark', 'qos/test_qos_sai.py::TestQosSai::testQosSaiLosslessVoq', 'qos/test_qos_sai.py::TestQosSai::testQosSaiLossyQueueVoq', 'qos/test_qos_sai.py::TestQosSai::testQosSaiLossyQueueVoqMultiSrc', 'qos/test_qos_sai.py::TestQosSai::testQosSaiPGDrop', 'qos/test_qos_sai.py::TestQosSai::testQosSaiPgHeadroomWatermark', 'qos/test_qos_sai.py::TestQosSai::testQosSaiPgSharedWatermark[None-wm_pg_shared_lossy]', 'qos/test_qos_sai.py::TestQosSai::testQosSaiQWatermarkAllPorts', 'qos/test_qos_sai.py::TestQosSai::testQosSaiSharedReservationSize', 'qos/test_tunnel_qos_remap.py::test_pfc_watermark_extra_lossless_active', 'qos/test_tunnel_qos_remap.py::test_pfc_watermark_extra_lossless_standby', 'radv/test_radv_ipv6_ra.py::test_solicited_router_advertisement_with_m_flag', 'radv/test_radv_ipv6_ra.py::test_unsolicited_router_advertisement_with_m_flag', 'reset_factory/test_reset_factory.py', 'restapi/test_restapi.py', 'restapi/test_restapi.py::test_create_vrf', 'restapi/test_restapi_vxlan_ecmp.py', 'route/test_default_route.py', 'route/test_route_flap.py', 'route/test_route_perf.py', 'route/test_static_route.py', 'route/test_static_route.py::test_static_route_ecmp_ipv6', 'show_techsupport/test_auto_techsupport.py', 'show_techsupport/test_auto_techsupport.py::TestAutoTechSupport::test_max_limit[core]', 'show_techsupport/test_auto_techsupport.py::TestAutoTechSupport::test_sai_sdk_dump', 'snappi_tests/ecn/test_red_accuracy_with_snappi', 'snmp/test_snmp_default_route.py::test_snmp_default_route', 'snmp/test_snmp_link_local.py', 'snmp/test_snmp_loopback.py::test_snmp_loopback', 'snmp/test_snmp_pfc_counters.py', 'snmp/test_snmp_queue.py', 'snmp/test_snmp_queue_counters.py', 'span', 'span/test_port_mirroring.py', 'ssh/test_ssh_default_password', 'ssh/test_ssh_stress.py::test_ssh_stress', 'sub_port_interfaces', 'sub_port_interfaces/test_show_subinterface.py::test_subinterface_status[port]', 'sub_port_interfaces/test_show_subinterface.py::test_subinterface_status[port_in_lag]', 'sub_port_interfaces/test_sub_port_interfaces.py::TestSubPorts::test_routing_between_sub_ports_unaffected_by_sub_ports_removal[port_in_lag', 'sub_port_interfaces/test_sub_port_interfaces.py::TestSubPorts::test_tunneling_between_sub_ports', 'sub_port_interfaces/test_sub_port_interfaces.py::TestSubPorts::test_untagged_packet_not_routed[port_in_lag] ', 'sub_port_interfaces/test_sub_port_l2_forwarding.py::test_sub_port_l2_forwarding[port_in_lag]', 'syslog/test_syslog.py', 'syslog/test_syslog_source_ip.py', 'syslog/test_syslog_source_ip.py::TestSSIP::test_syslog_config_work_after_reboot', 'syslog/test_syslog_source_ip.py::TestSSIP::test_syslog_protocol_filter_severity', 'system_health/test_system_health.py::test_service_checker_with_process_exit', 'tacacs/test_authorization.py::test_authorization_tacacs_and_local', 'telemetry/test_events.py', 'telemetry/test_telemetry.py', 'test_pktgen.py', 'test_vs_chassis_setup.py', 'vlan/test_vlan.py::test_vlan_tc7_tagged_qinq_switch_on_outer_tag', 'vlan/test_vlan_ping.py', 'voq', 'voq/test_fabric_cli_and_db.py', 'voq/test_fabric_reach.py', 'voq/test_voq_fabric_isolation.py', 'voq/test_voq_fabric_status_all.py', 'vrf/test_vrf.py::TestVrfAclRedirect', 'vrf/test_vrf_attr.py::TestVrfAttrSrcMac::test_vrf1_neigh_with_default_router_mac', 'vxlan/test_vnet_route_leak.py', 'vxlan/test_vnet_vxlan.py', 'vxlan/test_vxlan_bfd_tsa.py', 'vxlan/test_vxlan_bfd_tsa.py::Test_VxLAN_BFD_TSA::test_tsa_case4', 'vxlan/test_vxlan_bfd_tsa.py::Test_VxLAN_BFD_TSA::test_tsa_case5', 'vxlan/test_vxlan_bfd_tsa.py::Test_VxLAN_BFD_TSA::test_tsa_case6', 'vxlan/test_vxlan_crm.py', 'vxlan/test_vxlan_crm.py::Test_VxLAN_Crm::test_crm_128_group_members[v4_in_v6]', 'vxlan/test_vxlan_crm.py::Test_VxLAN_Crm::test_crm_128_group_members[v6_in_v6]', 'vxlan/test_vxlan_crm.py::Test_VxLAN_Crm::test_crm_16k_routes[v4_in_v6]', 'vxlan/test_vxlan_crm.py::Test_VxLAN_Crm::test_crm_16k_routes[v6_in_v6]', 'vxlan/test_vxlan_crm.py::Test_VxLAN_Crm::test_crm_512_nexthop_groups[v4_in_v6]', 'vxlan/test_vxlan_crm.py::Test_VxLAN_Crm::test_crm_512_nexthop_groups[v6_in_v6]', 'vxlan/test_vxlan_ecmp.py', 'vxlan/test_vxlan_ecmp_switchover.py', 'wan/lacp/test_wan_lag_min_link.py::test_lag_min_link']<br/>Conditional marks after sort: ['acl/custom_acl_table/test_custom_acl_table.py', 'acl/null_route/test_null_route_helper.py', 'acl/test_acl.py', 'acl/test_acl_outer_vlan.py', 'arp/test_arp_dualtor.py::test_proxy_arp_for_standby_neighbor', 'arp/test_neighbor_mac_noptf.py', 'arp/test_unknown_mac.py', 'arp/test_wr_arp.py', 'bfd/test_bfd.py', 'bfd/test_bfd.py::test_bfd_basic', 'bfd/test_bfd.py::test_bfd_scale', 'bfd/test_bfd_static_route.py', 'bfd/test_bfd_traffic.py', 'bgp/test_bgp_allow_list.py', 'bgp/test_bgp_bbr.py', 'bgp/test_bgp_gr_helper.py', 'bgp/test_bgp_multipath_relax.py', 'bgp/test_bgp_queue.py', 'bgp/test_bgp_slb.py', 'bgp/test_bgp_slb.py::test_bgp_slb_neighbor_persistence_across_advanced_reboot', 'bgp/test_bgp_speaker.py', 'bgp/test_bgp_suppress_fib.py', 'bgp/test_bgpmon.py', 'bgp/test_traffic_shift.py::test_load_minigraph_with_traffic_shift_away', 'cacl/test_cacl_application.py::test_cacl_application_dualtor', 'cacl/test_cacl_application.py::test_cacl_application_nondualtor', 'cacl/test_cacl_application.py::test_multiasic_cacl_application', 'configlet/test_add_rack.py', 'container_hardening/test_container_hardening.py::test_container_privileged', 'copp/test_copp.py', 'copp/test_copp.py::TestCOPP::test_add_new_trap', 'copp/test_copp.py::TestCOPP::test_remove_trap', 'copp/test_copp.py::TestCOPP::test_trap_config_save_after_reboot', 'crm/test_crm.py::test_crm_fdb_entry', 'decap/test_decap.py::test_decap[ttl=pipe, dscp=pipe, vxlan=disable]', 'decap/test_decap.py::test_decap[ttl=pipe, dscp=pipe, vxlan=set_unset]', 'decap/test_decap.py::test_decap[ttl=pipe, dscp=uniform, vxlan=disable]', 'decap/test_decap.py::test_decap[ttl=pipe, dscp=uniform, vxlan=set_unset]', 'decap/test_decap.py::test_decap[ttl=uniform, dscp=pipe, vxlan=disable]', 'decap/test_decap.py::test_decap[ttl=uniform, dscp=pipe, vxlan=set_unset]', 'decap/test_decap.py::test_decap[ttl=uniform, dscp=uniform, vxlan=disable]', 'decap/test_decap.py::test_decap[ttl=uniform, dscp=uniform, vxlan=set_unset]', 'decap/test_subnet_decap.py::test_vlan_subnet_decap', 'dhcp_relay/test_dhcp_relay.py', 'dhcp_relay/test_dhcp_relay.py::test_dhcp_relay_after_link_flap', 'dhcp_relay/test_dhcp_relay.py::test_dhcp_relay_random_sport', 'dhcp_relay/test_dhcp_relay.py::test_dhcp_relay_start_with_uplinks_down', 'dhcp_relay/test_dhcp_relay.py::test_dhcp_relay_unicast_mac', 'dhcp_relay/test_dhcpv6_relay.py', 'drop_packets', 'dualtor/test_ipinip.py::test_encap_with_mirror_session', 'dualtor/test_orch_stress.py', 'dualtor/test_orchagent_active_tor_downstream.py', 'dualtor/test_orchagent_active_tor_downstream.py::test_downstream_ecmp_nexthops', 'dualtor/test_orchagent_mac_move.py', 'dualtor/test_orchagent_standby_tor_downstream.py::test_downstream_standby_mux_toggle_active', 'dualtor/test_orchagent_standby_tor_downstream.py::test_standby_tor_downstream', 'dualtor/test_orchagent_standby_tor_downstream.py::test_standby_tor_downstream_bgp_recovered', 'dualtor/test_orchagent_standby_tor_downstream.py::test_standby_tor_downstream_loopback_route_readded', 'dualtor/test_orchagent_standby_tor_downstream.py::test_standby_tor_downstream_t1_link_recovered', 'dualtor/test_orchagent_standby_tor_downstream.py::test_standby_tor_remove_neighbor_downstream_standby', 'dualtor/test_standby_tor_upstream_mux_toggle.py', 'dualtor/test_switchover_failure.py', 'dualtor/test_tor_ecn.py::test_dscp_to_queue_during_encap_on_standby', 'dualtor/test_tor_ecn.py::test_ecn_during_encap_on_standby', 'dualtor/test_tunnel_memory_leak.py::test_tunnel_memory_leak', 'dualtor_io', 'dualtor_io/test_link_failure.py::test_active_link_admin_down_config_reload_link_up_downstream_standby[active-active]', 'dualtor_io/test_link_failure.py::test_active_link_down_downstream_active', 'dualtor_io/test_link_failure.py::test_active_link_down_downstream_active_soc', 'dualtor_io/test_link_failure.py::test_active_link_down_downstream_standby', 'dualtor_io/test_link_failure.py::test_active_link_down_upstream', 'dualtor_io/test_link_failure.py::test_active_link_down_upstream_soc', 'dualtor_io/test_link_failure.py::test_standby_link_down_downstream_active', 'dualtor_io/test_link_failure.py::test_standby_link_down_downstream_standby', 'dualtor_io/test_link_failure.py::test_standby_link_down_upstream', 'dut_console', 'ecmp/inner_hashing/test_inner_hashing.py', 'ecmp/inner_hashing/test_inner_hashing_lag.py', 'ecmp/inner_hashing/test_wr_inner_hashing.py', 'ecmp/inner_hashing/test_wr_inner_hashing_lag.py', 'ecmp/test_ecmp_sai_value.py', 'ecmp/test_fgnhg.py', 'everflow/test_everflow_per_interface.py', 'everflow/test_everflow_per_interface.py::test_everflow_per_interface[ipv6-default]', 'everflow/test_everflow_per_interface.py::test_everflow_per_interface[ipv6-m0_l3_scenario]', 'everflow/test_everflow_per_interface.py::test_everflow_per_interface[ipv6-m0_vlan_scenario]', 'everflow/test_everflow_testbed.py::EverflowIPv4Tests::test_everflow_dscp_with_policer', 'everflow/test_everflow_testbed.py::TestEverflowV4EgressAclEgressMirror', 'everflow/test_everflow_testbed.py::TestEverflowV4EgressAclEgressMirror::test_everflow_dscp_with_policer', 'everflow/test_everflow_testbed.py::TestEverflowV4IngressAclIngressMirror::test_everflow_dscp_with_policer', 'fdb/test_fdb_mac_expire.py', 'fib/test_fib.py::test_ipinip_hash', 'generic_config_updater', 'generic_config_updater/test_dhcp_relay.py', 'generic_config_updater/test_dynamic_acl.py', 'generic_config_updater/test_ecn_config_update.py::test_ecn_config_updates', 'generic_config_updater/test_eth_interface.py::test_replace_fec', 'generic_config_updater/test_eth_interface.py::test_toggle_pfc_asym', 'generic_config_updater/test_eth_interface.py::test_update_speed', 'generic_config_updater/test_incremental_qos.py', 'generic_config_updater/test_incremental_qos.py::test_incremental_qos_config_updates', 'generic_config_updater/test_mmu_dynamic_threshold_config_update.py::test_dynamic_th_config_updates', 'generic_config_updater/test_pfcwd_status.py', 'generic_config_updater/test_pg_headroom_update.py', 'hash/test_generic_hash.py::test_algorithm_config', 'hash/test_generic_hash.py::test_backend_error_messages', 'hash/test_generic_hash.py::test_ecmp_and_lag_hash', 'hash/test_generic_hash.py::test_ecmp_and_lag_hash[CRC-INNER_IP_PROTOCOL', 'hash/test_generic_hash.py::test_ecmp_hash[CRC-INNER_IP_PROTOCOL', 'hash/test_generic_hash.py::test_hash_capability', 'hash/test_generic_hash.py::test_lag_hash[CRC-INNER_IP_PROTOCOL', 'hash/test_generic_hash.py::test_lag_member_flap', 'hash/test_generic_hash.py::test_lag_member_flap[CRC-INNER_IP_PROTOCOL', 'hash/test_generic_hash.py::test_lag_member_remove_add', 'hash/test_generic_hash.py::test_lag_member_remove_add[CRC-INNER_IP_PROTOCOL', 'hash/test_generic_hash.py::test_nexthop_flap', 'hash/test_generic_hash.py::test_nexthop_flap[CRC-INNER_IP_PROTOCOL', 'hash/test_generic_hash.py::test_reboot', 'hash/test_generic_hash.py::test_reboot[CRC-INNER_IP_PROTOCOL', 'http/test_http_copy.py', 'iface_loopback_action/test_iface_loopback_action.py', 'iface_namingmode/test_iface_namingmode.py::TestConfigInterface', 'iface_namingmode/test_iface_namingmode.py::TestShowPriorityGroup', 'iface_namingmode/test_iface_namingmode.py::TestShowQueue', 'iface_namingmode/test_iface_namingmode.py::TestShowQueue::test_show_queue_persistent_watermark', 'iface_namingmode/test_iface_namingmode.py::TestShowQueue::test_show_queue_watermark', 'ip/test_ip_packet.py', 'ip/test_ip_packet.py::TestIPPacket::test_forward_ip_packet_with_0xffff_chksum_drop', 'ip/test_ip_packet.py::TestIPPacket::test_forward_ip_packet_with_0xffff_chksum_tolerant', 'ip/test_mgmt_ipv6_only.py', 'ipfwd/test_dip_sip.py', 'ipfwd/test_dir_bcast.py', 'ipfwd/test_mtu.py', 'link_flap/test_cont_link_flap.py', 'lldp/test_lldp.py::test_lldp', 'lldp/test_lldp.py::test_lldp_neighbor', 'macsec/test_dataplane.py::TestDataPlane::test_server_to_neighbor', 'macsec/test_interop_protocol.py::TestInteropProtocol::test_bgp', 'macsec/test_macsec.py', 'mpls/test_mpls.py', 'mvrf', 'nat', 'override_config_table/test_override_config_table.py', 'pc/test_lag_2.py::test_lag_db_status_with_po_update', 'pc/test_lag_member.py', 'pc/test_po_cleanup.py', 'pc/test_po_update.py::test_po_update', 'pc/test_po_update.py::test_po_update_io_no_loss', 'pc/test_po_voq.py', 'pfc/test_unknown_mac.py', 'pfc_asym/test_pfc_asym.py', 'pfc_asym/test_pfc_asym.py::test_pfc_asym_off_rx_pause_frames', 'pfcwd', 'pfcwd/test_pfc_config.py::TestPfcConfig::test_forward_action_cfg', 'pfcwd/test_pfcwd_all_port_storm.py', 'pfcwd/test_pfcwd_function.py::TestPfcwdFunc::test_pfcwd_no_traffic', 'pfcwd/test_pfcwd_warm_reboot.py', 'process_monitoring/test_critical_process_monitoring.py::test_orchagent_heartbeat', 'qos', 'qos/test_buffer.py', 'qos/test_buffer.py::test_buffer_model_test', 'qos/test_buffer_traditional.py', 'qos/test_pfc_pause.py::test_pfc_pause_lossless', 'qos/test_qos_dscp_mapping.py::TestQoSSaiDSCPQueueMapping_IPIP_Base::test_dscp_to_queue_mapping_pipe_mode', 'qos/test_qos_masic.py', 'qos/test_qos_sai.py', 'qos/test_qos_sai.py::TestQosSai', 'qos/test_qos_sai.py::TestQosSai::testIPIPQosSaiDscpToPgMapping', 'qos/test_qos_sai.py::TestQosSai::testPfcStormWithSharedHeadroomOccupancy', 'qos/test_qos_sai.py::TestQosSai::testQosSaiBufferPoolWatermark', 'qos/test_qos_sai.py::TestQosSai::testQosSaiDot1pPgMapping', 'qos/test_qos_sai.py::TestQosSai::testQosSaiDot1pQueueMapping', 'qos/test_qos_sai.py::TestQosSai::testQosSaiDscpQueueMapping', 'qos/test_qos_sai.py::TestQosSai::testQosSaiDscpToPgMapping', 'qos/test_qos_sai.py::TestQosSai::testQosSaiDwrrWeightChange', 'qos/test_qos_sai.py::TestQosSai::testQosSaiFullMeshTrafficSanity', 'qos/test_qos_sai.py::TestQosSai::testQosSaiHeadroomPoolSize', 'qos/test_qos_sai.py::TestQosSai::testQosSaiHeadroomPoolWatermark', 'qos/test_qos_sai.py::TestQosSai::testQosSaiLosslessVoq', 'qos/test_qos_sai.py::TestQosSai::testQosSaiLossyQueueVoq', 'qos/test_qos_sai.py::TestQosSai::testQosSaiLossyQueueVoqMultiSrc', 'qos/test_qos_sai.py::TestQosSai::testQosSaiPGDrop', 'qos/test_qos_sai.py::TestQosSai::testQosSaiPgHeadroomWatermark', 'qos/test_qos_sai.py::TestQosSai::testQosSaiPgSharedWatermark[None-wm_pg_shared_lossy]', 'qos/test_qos_sai.py::TestQosSai::testQosSaiQWatermarkAllPorts', 'qos/test_qos_sai.py::TestQosSai::testQosSaiSharedReservationSize', 'qos/test_tunnel_qos_remap.py::test_pfc_watermark_extra_lossless_active', 'qos/test_tunnel_qos_remap.py::test_pfc_watermark_extra_lossless_standby', 'radv/test_radv_ipv6_ra.py::test_solicited_router_advertisement_with_m_flag', 'radv/test_radv_ipv6_ra.py::test_unsolicited_router_advertisement_with_m_flag', 'reset_factory/test_reset_factory.py', 'restapi/test_restapi.py', 'restapi/test_restapi.py::test_create_vrf', 'restapi/test_restapi_vxlan_ecmp.py', 'route/test_default_route.py', 'route/test_route_flap.py', 'route/test_route_perf.py', 'route/test_static_route.py', 'route/test_static_route.py::test_static_route_ecmp_ipv6', 'show_techsupport/test_auto_techsupport.py', 'show_techsupport/test_auto_techsupport.py::TestAutoTechSupport::test_max_limit[core]', 'show_techsupport/test_auto_techsupport.py::TestAutoTechSupport::test_sai_sdk_dump', 'snappi_tests/ecn/test_red_accuracy_with_snappi', 'snmp/test_snmp_default_route.py::test_snmp_default_route', 'snmp/test_snmp_link_local.py', 'snmp/test_snmp_loopback.py::test_snmp_loopback', 'snmp/test_snmp_pfc_counters.py', 'snmp/test_snmp_queue.py', 'snmp/test_snmp_queue_counters.py', 'span', 'span/test_port_mirroring.py', 'ssh/test_ssh_default_password', 'ssh/test_ssh_stress.py::test_ssh_stress', 'sub_port_interfaces', 'sub_port_interfaces/test_show_subinterface.py::test_subinterface_status[port]', 'sub_port_interfaces/test_show_subinterface.py::test_subinterface_status[port_in_lag]', 'sub_port_interfaces/test_sub_port_interfaces.py::TestSubPorts::test_routing_between_sub_ports_unaffected_by_sub_ports_removal[port_in_lag', 'sub_port_interfaces/test_sub_port_interfaces.py::TestSubPorts::test_tunneling_between_sub_ports', 'sub_port_interfaces/test_sub_port_interfaces.py::TestSubPorts::test_untagged_packet_not_routed[port_in_lag] ', 'sub_port_interfaces/test_sub_port_l2_forwarding.py::test_sub_port_l2_forwarding[port_in_lag]', 'syslog/test_syslog.py', 'syslog/test_syslog_source_ip.py', 'syslog/test_syslog_source_ip.py::TestSSIP::test_syslog_config_work_after_reboot', 'syslog/test_syslog_source_ip.py::TestSSIP::test_syslog_protocol_filter_severity', 'system_health/test_system_health.py::test_service_checker_with_process_exit', 'tacacs/test_authorization.py::test_authorization_tacacs_and_local', 'telemetry/test_events.py', 'telemetry/test_telemetry.py', 'test_pktgen.py', 'test_vs_chassis_setup.py', 'vlan/test_vlan.py::test_vlan_tc7_tagged_qinq_switch_on_outer_tag', 'vlan/test_vlan_ping.py', 'voq', 'voq/test_fabric_cli_and_db.py', 'voq/test_fabric_reach.py', 'voq/test_voq_fabric_isolation.py', 'voq/test_voq_fabric_status_all.py', 'vrf/test_vrf.py::TestVrfAclRedirect', 'vrf/test_vrf_attr.py::TestVrfAttrSrcMac::test_vrf1_neigh_with_default_router_mac', 'vxlan/test_vnet_route_leak.py', 'vxlan/test_vnet_vxlan.py', 'vxlan/test_vxlan_bfd_tsa.py', 'vxlan/test_vxlan_bfd_tsa.py::Test_VxLAN_BFD_TSA::test_tsa_case4', 'vxlan/test_vxlan_bfd_tsa.py::Test_VxLAN_BFD_TSA::test_tsa_case5', 'vxlan/test_vxlan_bfd_tsa.py::Test_VxLAN_BFD_TSA::test_tsa_case6', 'vxlan/test_vxlan_crm.py', 'vxlan/test_vxlan_crm.py::Test_VxLAN_Crm::test_crm_128_group_members[v4_in_v6]', 'vxlan/test_vxlan_crm.py::Test_VxLAN_Crm::test_crm_128_group_members[v6_in_v6]', 'vxlan/test_vxlan_crm.py::Test_VxLAN_Crm::test_crm_16k_routes[v4_in_v6]', 'vxlan/test_vxlan_crm.py::Test_VxLAN_Crm::test_crm_16k_routes[v6_in_v6]', 'vxlan/test_vxlan_crm.py::Test_VxLAN_Crm::test_crm_512_nexthop_groups[v4_in_v6]', 'vxlan/test_vxlan_crm.py::Test_VxLAN_Crm::test_crm_512_nexthop_groups[v6_in_v6]', 'vxlan/test_vxlan_ecmp.py', 'vxlan/test_vxlan_ecmp_switchover.py', 'wan/lacp/test_wan_lag_min_link.py::test_lag_min_link']<br/>===========================================================================<br/>Mismatch item, before sort: generic_config_updater/test_incremental_qos.py, after sort: generic_config_updater/test_ecn_config_update.py::test_ecn_config_updates<br/>===========================================================================<br/></samp>\n\nTo run the pre-commit checks locally, you can follow below steps:\n1. Ensure that default python is python3. In sonic-mgmt docker container, default python is python2. You can run\n the check by activating the python3 virtual environment in sonic-mgmt docker container or outside of sonic-mgmt\n docker container.\n2. Ensure that the `pre-commit` package is installed:\n```\nsudo pip install pre-commit\n```\n3. Go to repository root folder\n4. Install the pre-commit hooks:\n```\npre-commit install\n```\n5. Use pre-commit to check staged file:\n```\npre-commit\n```\n6. Alternatively, you can check committed files using:\n```\npre-commit run --from-ref <commit_id> --to-ref <commit_id>\n```"
    },
    {
        "number": 14866,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-08T18:19:37Z",
        "comment_author": "mssonicbld",
        "comment_body": "@yanmo96 PR conflicts with 202405 branch"
    },
    {
        "number": 14866,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-08T18:19:38Z",
        "comment_author": "mssonicbld",
        "comment_body": "@yanmo96 PR conflicts with 202311 branch"
    },
    {
        "number": 14866,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-08T18:18:41Z",
        "review_author": "bingwang-ms"
    },
    {
        "number": 14866,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-08T18:18:41Z",
        "latestReview_author": "bingwang-ms",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14862,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-07T21:48:50Z",
        "comment_author": "rajendrat",
        "comment_body": "viz @kevinwangsk @bpar9 "
    },
    {
        "number": 14862,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-08T02:08:08Z",
        "comment_author": "wsycqyz",
        "comment_body": "Let me re-trigger the PR test."
    },
    {
        "number": 14862,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-09T01:54:14Z",
        "comment_author": "mssonicbld",
        "comment_body": "Cherry-pick PR to 202405: https://github.com/sonic-net/sonic-mgmt/pull/14895"
    },
    {
        "number": 14862,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-08T00:59:56Z",
        "review_author": "bpar9"
    },
    {
        "number": 14862,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-08T02:09:10Z",
        "review_author": "wsycqyz"
    },
    {
        "number": 14862,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-09T01:53:37Z",
        "review_author": "kevinskwang"
    },
    {
        "number": 14862,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-08T02:09:10Z",
        "latestReview_author": "wsycqyz",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14862,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-08T00:59:56Z",
        "latestReview_author": "bpar9",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14862,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-09T01:53:37Z",
        "latestReview_author": "kevinskwang",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14857,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-07T15:45:50Z",
        "comment_author": "mssonicbld",
        "comment_body": "Original PR: https://github.com/sonic-net/sonic-mgmt/pull/14845"
    },
    {
        "number": 14849,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-15T00:04:44Z",
        "comment_author": "mssonicbld",
        "comment_body": "Cherry-pick PR to 202405: https://github.com/sonic-net/sonic-mgmt/pull/14989"
    },
    {
        "number": 14849,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-09T01:34:45Z",
        "review_author": "arlakshm"
    },
    {
        "number": 14849,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-09T01:34:45Z",
        "latestReview_author": "arlakshm",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14848,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-17T23:04:58Z",
        "comment_author": "mssonicbld",
        "comment_body": "Cherry-pick PR to 202405: https://github.com/sonic-net/sonic-mgmt/pull/15039"
    },
    {
        "number": 14848,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-09T01:36:01Z",
        "review_author": "arlakshm"
    },
    {
        "number": 14848,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-09T01:36:01Z",
        "latestReview_author": "arlakshm",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14846,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-07T15:46:24Z",
        "comment_author": "bingwang-ms",
        "comment_body": "@opcoder0, @ZhaohuiS Can you please help review?"
    },
    {
        "number": 14846,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-08T04:14:12Z",
        "comment_author": "mssonicbld",
        "comment_body": "Cherry-pick PR to 202405: https://github.com/sonic-net/sonic-mgmt/pull/14876"
    },
    {
        "number": 14846,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-08T03:12:19Z",
        "review_author": "ZhaohuiS"
    },
    {
        "number": 14846,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-08T03:31:53Z",
        "review_author": "opcoder0"
    },
    {
        "number": 14846,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-08T03:12:19Z",
        "latestReview_author": "ZhaohuiS",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14846,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-08T03:31:53Z",
        "latestReview_author": "opcoder0",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14845,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-07T15:45:47Z",
        "comment_author": "mssonicbld",
        "comment_body": "Cherry-pick PR to 202405: https://github.com/sonic-net/sonic-mgmt/pull/14857"
    },
    {
        "number": 14845,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-04T21:47:19Z",
        "review_author": "saiarcot895"
    },
    {
        "number": 14845,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-04T21:47:19Z",
        "latestReview_author": "saiarcot895",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14841,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-08T01:38:36Z",
        "comment_author": "mssonicbld",
        "comment_body": "Cherry-pick PR to 202405: https://github.com/sonic-net/sonic-mgmt/pull/14871"
    },
    {
        "number": 14841,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-04T09:35:46Z",
        "review_author": "yejianquan"
    },
    {
        "number": 14841,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-04T09:35:46Z",
        "latestReview_author": "yejianquan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14839,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-03T23:40:46Z",
        "comment_author": "mssonicbld",
        "comment_body": "Original PR: https://github.com/sonic-net/sonic-mgmt/pull/14494"
    },
    {
        "number": 14835,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-03T20:13:10Z",
        "comment_author": "mssonicbld",
        "comment_body": "The [pre-commit](http://pre-commit.com/) check detected issues in the files touched by this pull request.\nThe pre-commit check is a mandatory check, please fix detected issues.\n\nDetailed pre-commit check results:\n<samp>trim trailing whitespace.................................................Passed<br/>fix end of files.........................................................Passed<br/>check yaml...........................................(no files to check)Skipped<br/>check for added large files..............................................Passed<br/>check python ast.........................................................Passed<br/>flake8...................................................................Failed<br/>- hook id: flake8<br/>- exit code: 1<br/><br/>ansible/module_utils/port_utils.py:128:38: E261 at least two spaces before inline comment<br/><br/>flake8...............................................(no files to check)Skipped<br/>check conditional mark sort..........................(no files to check)Skipped<br/></samp>\n\nTo run the pre-commit checks locally, you can follow below steps:\n1. Ensure that default python is python3. In sonic-mgmt docker container, default python is python2. You can run\n the check by activating the python3 virtual environment in sonic-mgmt docker container or outside of sonic-mgmt\n docker container.\n2. Ensure that the `pre-commit` package is installed:\n```\nsudo pip install pre-commit\n```\n3. Go to repository root folder\n4. Install the pre-commit hooks:\n```\npre-commit install\n```\n5. Use pre-commit to check staged file:\n```\npre-commit\n```\n6. Alternatively, you can check committed files using:\n```\npre-commit run --from-ref <commit_id> --to-ref <commit_id>\n```"
    },
    {
        "number": 14835,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-17T02:42:45Z",
        "comment_author": "StormLiangMS",
        "comment_body": "hi @bingwang-ms for 202405 cherrypick."
    },
    {
        "number": 14835,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-10T01:09:46Z",
        "review_author": "r12f"
    },
    {
        "number": 14835,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-10T01:25:51Z",
        "review_author": "r12f"
    },
    {
        "number": 14835,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-10T01:25:51Z",
        "latestReview_author": "r12f",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14833,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-03T10:04:45Z",
        "comment_author": "mssonicbld",
        "comment_body": "Original PR: https://github.com/sonic-net/sonic-mgmt/pull/14799"
    },
    {
        "number": 14832,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-03T04:48:52Z",
        "comment_author": "mssonicbld",
        "comment_body": "Original PR: https://github.com/sonic-net/sonic-mgmt/pull/14533"
    },
    {
        "number": 14831,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-02T23:20:09Z",
        "comment_author": "mssonicbld",
        "comment_body": "Original PR: https://github.com/sonic-net/sonic-mgmt/pull/14787"
    },
    {
        "number": 14824,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-15T01:10:01Z",
        "comment_author": "alpeshspatel",
        "comment_body": "@Anandaraj-Maharajan and @kevinwangsk FYI"
    },
    {
        "number": 14824,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-15T02:26:19Z",
        "comment_author": "mssonicbld",
        "comment_body": "Cherry-pick PR to 202405: https://github.com/sonic-net/sonic-mgmt/pull/14993"
    },
    {
        "number": 14824,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-02T12:06:15Z",
        "review_author": "alpeshspatel"
    },
    {
        "number": 14824,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-08T06:05:26Z",
        "review_author": "wsycqyz"
    },
    {
        "number": 14824,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-15T02:25:26Z",
        "review_author": "kevinskwang"
    },
    {
        "number": 14824,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-08T06:05:26Z",
        "latestReview_author": "wsycqyz",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14824,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-02T12:06:15Z",
        "latestReview_author": "alpeshspatel",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14824,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-15T02:25:26Z",
        "latestReview_author": "kevinskwang",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14823,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-02T11:07:04Z",
        "comment_author": "mssonicbld",
        "comment_body": "Original PR: https://github.com/sonic-net/sonic-mgmt/pull/14348"
    },
    {
        "number": 14821,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-02T03:59:50Z",
        "comment_author": "mssonicbld",
        "comment_body": "Original PR: https://github.com/sonic-net/sonic-mgmt/pull/14746"
    },
    {
        "number": 14814,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-01T11:44:43Z",
        "comment_author": "sdszhang",
        "comment_body": "@selldinesh for viz."
    },
    {
        "number": 14814,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-01T11:45:07Z",
        "comment_author": "mssonicbld",
        "comment_body": "The [pre-commit](http://pre-commit.com/) check detected issues in the files touched by this pull request.\nThe pre-commit check is a mandatory check, please fix detected issues.\n\nDetailed pre-commit check results:\n<samp>trim trailing whitespace.................................................Passed<br/>fix end of files.........................................................Passed<br/>check yaml...........................................(no files to check)Skipped<br/>check for added large files..............................................Passed<br/>check python ast.........................................................Passed<br/>flake8...................................................................Failed<br/>- hook id: flake8<br/>- exit code: 1<br/><br/>tests/snappi_tests/test_multidut_snappi.py:17:1: E302 expected 2 blank lines, found 0<br/><br/>flake8...............................................(no files to check)Skipped<br/>check conditional mark sort..........................(no files to check)Skipped<br/></samp>\n\nTo run the pre-commit checks locally, you can follow below steps:\n1. Ensure that default python is python3. In sonic-mgmt docker container, default python is python2. You can run\n the check by activating the python3 virtual environment in sonic-mgmt docker container or outside of sonic-mgmt\n docker container.\n2. Ensure that the `pre-commit` package is installed:\n```\nsudo pip install pre-commit\n```\n3. Go to repository root folder\n4. Install the pre-commit hooks:\n```\npre-commit install\n```\n5. Use pre-commit to check staged file:\n```\npre-commit\n```\n6. Alternatively, you can check committed files using:\n```\npre-commit run --from-ref <commit_id> --to-ref <commit_id>\n```"
    },
    {
        "number": 14814,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-02T04:00:09Z",
        "review_author": "yejianquan"
    },
    {
        "number": 14814,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-02T04:00:09Z",
        "latestReview_author": "yejianquan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14812,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-01T07:24:01Z",
        "comment_author": "mssonicbld",
        "comment_body": "Original PR: https://github.com/sonic-net/sonic-mgmt/pull/14704"
    },
    {
        "number": 14810,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-04T01:59:02Z",
        "comment_author": "Ryangwaite",
        "comment_body": "@yxieca would you be able to assist with approval and merging? Thanks"
    },
    {
        "number": 14810,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-01T18:48:50Z",
        "review_author": "saiarcot895"
    },
    {
        "number": 14810,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-01T18:48:54Z",
        "review_author": "saiarcot895"
    },
    {
        "number": 14810,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-04T00:54:40Z",
        "review_author": "Ryangwaite"
    },
    {
        "number": 14810,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-07T20:36:08Z",
        "review_author": "bingwang-ms"
    },
    {
        "number": 14810,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-01T18:48:54Z",
        "latestReview_author": "saiarcot895",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14810,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-07T20:36:08Z",
        "latestReview_author": "bingwang-ms",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14808,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-01T01:24:44Z",
        "comment_author": "mssonicbld",
        "comment_body": "Original PR: https://github.com/sonic-net/sonic-mgmt/pull/14715"
    },
    {
        "number": 14806,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-30T23:55:54Z",
        "comment_author": "mssonicbld",
        "comment_body": "Original PR: https://github.com/sonic-net/sonic-mgmt/pull/13729"
    },
    {
        "number": 14804,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-01T19:42:40Z",
        "comment_author": "judyjoseph",
        "comment_body": "@abdosi could you review"
    },
    {
        "number": 14804,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-01T20:45:31Z",
        "review_author": "abdosi"
    },
    {
        "number": 14804,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-02T15:30:15Z",
        "review_author": "sanjair-git"
    },
    {
        "number": 14804,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-03T20:36:29Z",
        "review_author": "abdosi"
    },
    {
        "number": 14804,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-03T20:36:29Z",
        "latestReview_author": "abdosi",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14799,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-03T10:04:43Z",
        "comment_author": "mssonicbld",
        "comment_body": "Cherry-pick PR to 202405: https://github.com/sonic-net/sonic-mgmt/pull/14833"
    },
    {
        "number": 14799,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-02T04:07:09Z",
        "review_author": "yejianquan"
    },
    {
        "number": 14799,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-02T04:34:13Z",
        "review_author": "cyw233"
    },
    {
        "number": 14799,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-03T00:45:03Z",
        "review_author": "cyw233"
    },
    {
        "number": 14799,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-03T10:03:47Z",
        "review_author": "yejianquan"
    },
    {
        "number": 14799,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-03T10:03:47Z",
        "latestReview_author": "yejianquan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14798,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-01T01:21:12Z",
        "review_author": "yejianquan"
    },
    {
        "number": 14798,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-01T01:21:12Z",
        "latestReview_author": "yejianquan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14789,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-27T19:25:31Z",
        "comment_author": "mssonicbld",
        "comment_body": "The [pre-commit](http://pre-commit.com/) check detected issues in the files touched by this pull request.\nThe pre-commit check is a mandatory check, please fix detected issues.\n\nDetailed pre-commit check results:\n<samp>trim trailing whitespace.................................................Failed<br/>- hook id: trailing-whitespace<br/>- exit code: 1<br/>- files were modified by this hook<br/><br/>Fixing ansible/roles/test/files/ptftests/py3/IP_decap_test.py<br/><br/>fix end of files.........................................................Passed<br/>check yaml...........................................(no files to check)Skipped<br/>check for added large files..............................................Passed<br/>check python ast.........................................................Passed<br/>flake8...................................................................Passed<br/>flake8...............................................(no files to check)Skipped<br/>check conditional mark sort..........................(no files to check)Skipped<br/></samp>\n\nTo run the pre-commit checks locally, you can follow below steps:\n1. Ensure that default python is python3. In sonic-mgmt docker container, default python is python2. You can run\n the check by activating the python3 virtual environment in sonic-mgmt docker container or outside of sonic-mgmt\n docker container.\n2. Ensure that the `pre-commit` package is installed:\n```\nsudo pip install pre-commit\n```\n3. Go to repository root folder\n4. Install the pre-commit hooks:\n```\npre-commit install\n```\n5. Use pre-commit to check staged file:\n```\npre-commit\n```\n6. Alternatively, you can check committed files using:\n```\npre-commit run --from-ref <commit_id> --to-ref <commit_id>\n```"
    },
    {
        "number": 14789,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-07T20:58:56Z",
        "comment_author": "abdosi",
        "comment_body": "@yejianquan : please help cherry-pick to 202405"
    },
    {
        "number": 14789,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-09T06:13:01Z",
        "comment_author": "mssonicbld",
        "comment_body": "Cherry-pick PR to 202405: https://github.com/sonic-net/sonic-mgmt/pull/14902"
    },
    {
        "number": 14789,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-07T20:06:00Z",
        "review_author": "judyjoseph"
    },
    {
        "number": 14789,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-07T20:06:00Z",
        "latestReview_author": "judyjoseph",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14787,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-27T15:47:20Z",
        "comment_author": "abdosi",
        "comment_body": "@judyjoseph for viz."
    },
    {
        "number": 14787,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-27T15:47:21Z",
        "comment_author": "mssonicbld",
        "comment_body": "The [pre-commit](http://pre-commit.com/) check detected issues in the files touched by this pull request.\nThe pre-commit check is a mandatory check, please fix detected issues.\n\nDetailed pre-commit check results:\n<samp>trim trailing whitespace.................................................Passed<br/>fix end of files.........................................................Passed<br/>check yaml...........................................(no files to check)Skipped<br/>check for added large files..............................................Passed<br/>check python ast.........................................................Passed<br/>flake8...................................................................Failed<br/>- hook id: flake8<br/>- exit code: 1<br/><br/>tests/route/test_route_consistency.py:66:121: E501 line too long (143 > 120 characters)<br/>tests/route/test_route_consistency.py:86:56: E128 continuation line under-indented for visual indent<br/><br/>flake8...............................................(no files to check)Skipped<br/>check conditional mark sort..........................(no files to check)Skipped<br/></samp>\n\nTo run the pre-commit checks locally, you can follow below steps:\n1. Ensure that default python is python3. In sonic-mgmt docker container, default python is python2. You can run\n the check by activating the python3 virtual environment in sonic-mgmt docker container or outside of sonic-mgmt\n docker container.\n2. Ensure that the `pre-commit` package is installed:\n```\nsudo pip install pre-commit\n```\n3. Go to repository root folder\n4. Install the pre-commit hooks:\n```\npre-commit install\n```\n5. Use pre-commit to check staged file:\n```\npre-commit\n```\n6. Alternatively, you can check committed files using:\n```\npre-commit run --from-ref <commit_id> --to-ref <commit_id>\n```"
    },
    {
        "number": 14787,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-27T19:29:58Z",
        "comment_author": "mssonicbld",
        "comment_body": "The [pre-commit](http://pre-commit.com/) check detected issues in the files touched by this pull request.\nThe pre-commit check is a mandatory check, please fix detected issues.\n\nDetailed pre-commit check results:\n<samp>trim trailing whitespace.................................................Passed<br/>fix end of files.........................................................Passed<br/>check yaml...........................................(no files to check)Skipped<br/>check for added large files..............................................Passed<br/>check python ast.........................................................Passed<br/>flake8...................................................................Failed<br/>- hook id: flake8<br/>- exit code: 1<br/><br/>tests/route/test_route_consistency.py:66:121: E501 line too long (143 > 120 characters)<br/>tests/route/test_route_consistency.py:86:56: E128 continuation line under-indented for visual indent<br/><br/>flake8...............................................(no files to check)Skipped<br/>check conditional mark sort..........................(no files to check)Skipped<br/></samp>\n\nTo run the pre-commit checks locally, you can follow below steps:\n1. Ensure that default python is python3. In sonic-mgmt docker container, default python is python2. You can run\n the check by activating the python3 virtual environment in sonic-mgmt docker container or outside of sonic-mgmt\n docker container.\n2. Ensure that the `pre-commit` package is installed:\n```\nsudo pip install pre-commit\n```\n3. Go to repository root folder\n4. Install the pre-commit hooks:\n```\npre-commit install\n```\n5. Use pre-commit to check staged file:\n```\npre-commit\n```\n6. Alternatively, you can check committed files using:\n```\npre-commit run --from-ref <commit_id> --to-ref <commit_id>\n```"
    },
    {
        "number": 14787,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-02T23:20:07Z",
        "comment_author": "mssonicbld",
        "comment_body": "Cherry-pick PR to 202405: https://github.com/sonic-net/sonic-mgmt/pull/14831"
    },
    {
        "number": 14787,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-27T16:54:07Z",
        "review_author": "deepak-singhal0408"
    },
    {
        "number": 14787,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-02T23:19:17Z",
        "review_author": "yejianquan"
    },
    {
        "number": 14787,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-02T23:19:17Z",
        "latestReview_author": "yejianquan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14787,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-09-27T16:54:07Z",
        "latestReview_author": "deepak-singhal0408",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14785,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-27T14:55:40Z",
        "comment_author": "maunnikr-cisco",
        "comment_body": "This is a cherry pick to 202311 of PR - https://github.com/sonic-net/sonic-mgmt/pull/14518"
    },
    {
        "number": 14785,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-29T01:05:31Z",
        "comment_author": "wsycqyz",
        "comment_body": "Let us try again the PR test pipeline."
    },
    {
        "number": 14785,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-01T22:20:36Z",
        "comment_author": "maunnikr-cisco",
        "comment_body": "@wsycqyz please approve. "
    },
    {
        "number": 14785,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-08T02:00:35Z",
        "review_author": "wsycqyz"
    },
    {
        "number": 14785,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-08T02:02:28Z",
        "review_author": "kevinskwang"
    },
    {
        "number": 14785,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-08T02:00:35Z",
        "latestReview_author": "wsycqyz",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14785,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-08T02:02:28Z",
        "latestReview_author": "kevinskwang",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14777,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-27T07:09:36Z",
        "comment_author": "mssonicbld",
        "comment_body": "The [pre-commit](http://pre-commit.com/) check detected issues in the files touched by this pull request.\nThe pre-commit check is a mandatory check, please fix detected issues.\n\nDetailed pre-commit check results:\n<samp>trim trailing whitespace.................................................Passed<br/>fix end of files.........................................................Passed<br/>check yaml...........................................(no files to check)Skipped<br/>check for added large files..............................................Passed<br/>check python ast.........................................................Passed<br/>flake8...................................................................Failed<br/>- hook id: flake8<br/>- exit code: 1<br/><br/>tests/platform_tests/counterpoll/counterpoll_helper.py:4:1: E302 expected 2 blank lines, found 1<br/><br/>flake8...............................................(no files to check)Skipped<br/>check conditional mark sort..........................(no files to check)Skipped<br/></samp>\n\nTo run the pre-commit checks locally, you can follow below steps:\n1. Ensure that default python is python3. In sonic-mgmt docker container, default python is python2. You can run\n the check by activating the python3 virtual environment in sonic-mgmt docker container or outside of sonic-mgmt\n docker container.\n2. Ensure that the `pre-commit` package is installed:\n```\nsudo pip install pre-commit\n```\n3. Go to repository root folder\n4. Install the pre-commit hooks:\n```\npre-commit install\n```\n5. Use pre-commit to check staged file:\n```\npre-commit\n```\n6. Alternatively, you can check committed files using:\n```\npre-commit run --from-ref <commit_id> --to-ref <commit_id>\n```"
    },
    {
        "number": 14777,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-02T06:13:53Z",
        "comment_author": "liamkearney-msft",
        "comment_body": "> can you please test this change on T0/T1 testbed to make sure these changes do not break single ASIC platforms\r\n\r\n@arlakshm tested on t0 TB, and a t2 TB with a multi-asic and single-asic linecard - tests pass"
    },
    {
        "number": 14777,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-02T23:10:23Z",
        "comment_author": "mssonicbld",
        "comment_body": "The [pre-commit](http://pre-commit.com/) check detected issues in the files touched by this pull request.\nThe pre-commit check is a mandatory check, please fix detected issues.\n\nDetailed pre-commit check results:\n<samp>trim trailing whitespace.................................................Passed<br/>fix end of files.........................................................Passed<br/>check yaml...........................................(no files to check)Skipped<br/>check for added large files..............................................Passed<br/>check python ast.........................................................Passed<br/>flake8...................................................................Failed<br/>- hook id: flake8<br/>- exit code: 1<br/><br/>tests/platform_tests/counterpoll/counterpoll_helper.py:2:1: F401 'tests.common.devices.sonic_asic.SonicAsic' imported but unused<br/><br/>flake8...............................................(no files to check)Skipped<br/>check conditional mark sort..........................(no files to check)Skipped<br/></samp>\n\nTo run the pre-commit checks locally, you can follow below steps:\n1. Ensure that default python is python3. In sonic-mgmt docker container, default python is python2. You can run\n the check by activating the python3 virtual environment in sonic-mgmt docker container or outside of sonic-mgmt\n docker container.\n2. Ensure that the `pre-commit` package is installed:\n```\nsudo pip install pre-commit\n```\n3. Go to repository root folder\n4. Install the pre-commit hooks:\n```\npre-commit install\n```\n5. Use pre-commit to check staged file:\n```\npre-commit\n```\n6. Alternatively, you can check committed files using:\n```\npre-commit run --from-ref <commit_id> --to-ref <commit_id>\n```"
    },
    {
        "number": 14777,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-08T03:25:30Z",
        "comment_author": "auspham",
        "comment_body": "Hi @yejianquan could you help reviewing this PR and merge for next nightly run. Thank you"
    },
    {
        "number": 14777,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-09T06:06:11Z",
        "comment_author": "mssonicbld",
        "comment_body": "Cherry-pick PR to 202405: https://github.com/sonic-net/sonic-mgmt/pull/14900"
    },
    {
        "number": 14777,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-30T01:22:57Z",
        "review_author": "auspham"
    },
    {
        "number": 14777,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-01T19:29:49Z",
        "review_author": "arlakshm"
    },
    {
        "number": 14777,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-01T23:07:09Z",
        "review_author": "liamkearney-msft"
    },
    {
        "number": 14777,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-02T05:15:40Z",
        "review_author": "liamkearney-msft"
    },
    {
        "number": 14777,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-09T01:22:32Z",
        "review_author": "arlakshm"
    },
    {
        "number": 14777,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-09-30T01:22:57Z",
        "latestReview_author": "auspham",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14777,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-09T01:22:32Z",
        "latestReview_author": "arlakshm",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14746,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-25T21:33:01Z",
        "comment_author": "mssonicbld",
        "comment_body": "The [pre-commit](http://pre-commit.com/) check detected issues in the files touched by this pull request.\nThe pre-commit check is a mandatory check, please fix detected issues.\n\nDetailed pre-commit check results:\n<samp>trim trailing whitespace.................................................Passed<br/>fix end of files.........................................................Passed<br/>check yaml...........................................(no files to check)Skipped<br/>check for added large files..............................................Passed<br/>check python ast.........................................................Passed<br/>flake8...................................................................Failed<br/>- hook id: flake8<br/>- exit code: 1<br/><br/>tests/qos/qos_sai_base.py:594:121: E501 line too long (174 > 120 characters)<br/>tests/qos/qos_sai_base.py:657:121: E501 line too long (133 > 120 characters)<br/>tests/qos/qos_sai_base.py:662:121: E501 line too long (143 > 120 characters)<br/><br/>flake8...............................................(no files to check)Skipped<br/>check conditional mark sort..........................(no files to check)Skipped<br/></samp>\n\nTo run the pre-commit checks locally, you can follow below steps:\n1. Ensure that default python is python3. In sonic-mgmt docker container, default python is python2. You can run\n the check by activating the python3 virtual environment in sonic-mgmt docker container or outside of sonic-mgmt\n docker container.\n2. Ensure that the `pre-commit` package is installed:\n```\nsudo pip install pre-commit\n```\n3. Go to repository root folder\n4. Install the pre-commit hooks:\n```\npre-commit install\n```\n5. Use pre-commit to check staged file:\n```\npre-commit\n```\n6. Alternatively, you can check committed files using:\n```\npre-commit run --from-ref <commit_id> --to-ref <commit_id>\n```"
    },
    {
        "number": 14746,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-25T21:37:13Z",
        "comment_author": "mssonicbld",
        "comment_body": "The [pre-commit](http://pre-commit.com/) check detected issues in the files touched by this pull request.\nThe pre-commit check is a mandatory check, please fix detected issues.\n\nDetailed pre-commit check results:\n<samp>trim trailing whitespace.................................................Passed<br/>fix end of files.........................................................Passed<br/>check yaml...........................................(no files to check)Skipped<br/>check for added large files..............................................Passed<br/>check python ast.........................................................Passed<br/>flake8...................................................................Failed<br/>- hook id: flake8<br/>- exit code: 1<br/><br/>tests/qos/qos_sai_base.py:660:121: E501 line too long (133 > 120 characters)<br/>tests/qos/qos_sai_base.py:665:121: E501 line too long (143 > 120 characters)<br/><br/>flake8...............................................(no files to check)Skipped<br/>check conditional mark sort..........................(no files to check)Skipped<br/></samp>\n\nTo run the pre-commit checks locally, you can follow below steps:\n1. Ensure that default python is python3. In sonic-mgmt docker container, default python is python2. You can run\n the check by activating the python3 virtual environment in sonic-mgmt docker container or outside of sonic-mgmt\n docker container.\n2. Ensure that the `pre-commit` package is installed:\n```\nsudo pip install pre-commit\n```\n3. Go to repository root folder\n4. Install the pre-commit hooks:\n```\npre-commit install\n```\n5. Use pre-commit to check staged file:\n```\npre-commit\n```\n6. Alternatively, you can check committed files using:\n```\npre-commit run --from-ref <commit_id> --to-ref <commit_id>\n```"
    },
    {
        "number": 14746,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-26T23:10:28Z",
        "comment_author": "sdszhang",
        "comment_body": "@abdosi @sdszhang pls review. "
    },
    {
        "number": 14746,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-30T22:03:55Z",
        "comment_author": "abdosi",
        "comment_body": "@vmittal-msft @mlok-nokia for viz."
    },
    {
        "number": 14746,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-02T03:59:49Z",
        "comment_author": "mssonicbld",
        "comment_body": "Cherry-pick PR to 202405: https://github.com/sonic-net/sonic-mgmt/pull/14821"
    },
    {
        "number": 14746,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-29T04:17:00Z",
        "review_author": "sdszhang"
    },
    {
        "number": 14746,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-30T22:03:29Z",
        "review_author": "abdosi"
    },
    {
        "number": 14746,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-01T21:27:17Z",
        "review_author": "alpeshspatel"
    },
    {
        "number": 14746,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-01T21:27:17Z",
        "latestReview_author": "alpeshspatel",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14746,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-09-30T22:03:29Z",
        "latestReview_author": "abdosi",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14746,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-09-29T04:17:00Z",
        "latestReview_author": "sdszhang",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14743,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-25T15:50:10Z",
        "comment_author": "ysmanman",
        "comment_body": "Add @kenneth-arista @arlakshm @vmittal-msft @wenyiz2021 for viz."
    },
    {
        "number": 14743,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-25T17:14:11Z",
        "comment_author": "arlakshm",
        "comment_body": "@mlok-nokia for viz.."
    },
    {
        "number": 14743,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-07T21:52:31Z",
        "comment_author": "ysmanman",
        "comment_body": "> Please see if we can ignore this for DNX only using available switch type or asic type.\r\n\r\nHi @vmittal-msft , today the SAI API `sai_thrift_read_port_counters` takes `asic_type` as input, which only tells if the asic if broadcom or not. If we need to restrict the change to DNX, we have to pass `platform_type` to the API, which requires a large scope of fix because the API is used in many places today."
    },
    {
        "number": 14743,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-07T23:44:58Z",
        "comment_author": "mssonicbld",
        "comment_body": "Cherry-pick PR to 202405: https://github.com/sonic-net/sonic-mgmt/pull/14867"
    },
    {
        "number": 14743,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-26T20:34:47Z",
        "review_author": "ansrajpu-git"
    },
    {
        "number": 14743,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-26T21:42:53Z",
        "review_author": "ysmanman"
    },
    {
        "number": 14743,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-27T22:03:10Z",
        "review_author": "vmittal-msft"
    },
    {
        "number": 14743,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-27T22:03:48Z",
        "review_author": "vmittal-msft"
    },
    {
        "number": 14743,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-07T21:52:15Z",
        "review_author": "ysmanman"
    },
    {
        "number": 14743,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-07T23:20:36Z",
        "review_author": "vmittal-msft"
    },
    {
        "number": 14743,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-07T23:38:06Z",
        "review_author": "arlakshm"
    },
    {
        "number": 14743,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-09-26T20:34:47Z",
        "latestReview_author": "ansrajpu-git",
        "latestReview_state": "COMMENTED"
    },
    {
        "number": 14743,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-07T23:20:36Z",
        "latestReview_author": "vmittal-msft",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14743,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-07T23:38:06Z",
        "latestReview_author": "arlakshm",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14742,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-25T14:05:05Z",
        "comment_author": "sdszhang",
        "comment_body": "@selldinesh @amitpawar12 @developfast @vmittal-msft can you help to review? Thanks."
    },
    {
        "number": 14742,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-25T23:32:35Z",
        "comment_author": "sdszhang",
        "comment_body": "@rraghav-cisco can you verify this PR on T0/T1 testbed."
    },
    {
        "number": 14742,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-26T16:20:25Z",
        "comment_author": "rraghav-cisco",
        "comment_body": "@sdszhang : Can you pls raise a PR for 202405 ? the master diff has conflicts on this branch.\r\n```\r\nrraghav@sonic-ucs-m3-2:~/Ixia/whitebox/202405/sonic-test$ git apply ../../14742.diff \r\nerror: patch failed: sonic-mgmt/tests/snappi_tests/multidut/ecn/test_multidut_dequeue_ecn_with_snappi.py:3\r\nerror: sonic-mgmt/tests/snappi_tests/multidut/ecn/test_multidut_dequeue_ecn_with_snappi.py: patch does not apply\r\nerror: patch failed: sonic-mgmt/tests/snappi_tests/multidut/ecn/test_multidut_red_accuracy_with_snappi.py:4\r\nerror: sonic-mgmt/tests/snappi_tests/multidut/ecn/test_multidut_red_accuracy_with_snappi.py: patch does not apply\r\nerror: patch failed: sonic-mgmt/tests/snappi_tests/multidut/pfc/test_multidut_pfc_pause_lossy_with_snappi.py:1\r\nerror: sonic-mgmt/tests/snappi_tests/multidut/pfc/test_multidut_pfc_pause_lossy_with_snappi.py: patch does not apply\r\nerror: patch failed: sonic-mgmt/tests/snappi_tests/multidut/pfcwd/test_multidut_pfcwd_a2a_with_snappi.py:2\r\nerror: sonic-mgmt/tests/snappi_tests/multidut/pfcwd/test_multidut_pfcwd_a2a_with_snappi.py: patch does not apply\r\nerror: patch failed: sonic-mgmt/tests/snappi_tests/multidut/pfcwd/test_multidut_pfcwd_basic_with_snappi.py:4\r\nerror: sonic-mgmt/tests/snappi_tests/multidut/pfcwd/test_multidut_pfcwd_basic_with_snappi.py: patch does not apply\r\nerror: patch failed: sonic-mgmt/tests/snappi_tests/multidut/pfcwd/test_multidut_pfcwd_burst_storm_with_snappi.py:2\r\nerror: sonic-mgmt/tests/snappi_tests/multidut/pfcwd/test_multidut_pfcwd_burst_storm_with_snappi.py: patch does not apply\r\nerror: patch failed: sonic-mgmt/tests/snappi_tests/multidut/pfcwd/test_multidut_pfcwd_m2o_with_snappi.py:2\r\nerror: sonic-mgmt/tests/snappi_tests/multidut/pfcwd/test_multidut_pfcwd_m2o_with_snappi.py: patch does not apply\r\nerror: patch failed: sonic-mgmt/tests/snappi_tests/multidut/pfcwd/test_multidut_pfcwd_runtime_traffic_with_snappi.py:1\r\nerror: sonic-mgmt/tests/snappi_tests/multidut/pfcwd/test_multidut_pfcwd_runtime_traffic_with_snappi.py: patch does not apply\r\nerror: patch failed: sonic-mgmt/tests/snappi_tests/test_multidut_snappi.py:115\r\nerror: sonic-mgmt/tests/snappi_tests/test_multidut_snappi.py: patch does not apply\r\nrraghav@sonic-ucs-m3-2:~/Ixia/whitebox/202405/sonic-test$ \r\n```"
    },
    {
        "number": 14742,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-01T11:42:22Z",
        "comment_author": "sdszhang",
        "comment_body": "> @sdszhang : Can you pls raise a PR for 202405 ? the master diff has conflicts on this branch.\r\n> \r\n> ```\r\n> rraghav@sonic-ucs-m3-2:~/Ixia/whitebox/202405/sonic-test$ git apply ../../14742.diff \r\n> error: patch failed: sonic-mgmt/tests/snappi_tests/multidut/ecn/test_multidut_dequeue_ecn_with_snappi.py:3\r\n> error: sonic-mgmt/tests/snappi_tests/multidut/ecn/test_multidut_dequeue_ecn_with_snappi.py: patch does not apply\r\n> error: patch failed: sonic-mgmt/tests/snappi_tests/multidut/ecn/test_multidut_red_accuracy_with_snappi.py:4\r\n> error: sonic-mgmt/tests/snappi_tests/multidut/ecn/test_multidut_red_accuracy_with_snappi.py: patch does not apply\r\n> error: patch failed: sonic-mgmt/tests/snappi_tests/multidut/pfc/test_multidut_pfc_pause_lossy_with_snappi.py:1\r\n> error: sonic-mgmt/tests/snappi_tests/multidut/pfc/test_multidut_pfc_pause_lossy_with_snappi.py: patch does not apply\r\n> error: patch failed: sonic-mgmt/tests/snappi_tests/multidut/pfcwd/test_multidut_pfcwd_a2a_with_snappi.py:2\r\n> error: sonic-mgmt/tests/snappi_tests/multidut/pfcwd/test_multidut_pfcwd_a2a_with_snappi.py: patch does not apply\r\n> error: patch failed: sonic-mgmt/tests/snappi_tests/multidut/pfcwd/test_multidut_pfcwd_basic_with_snappi.py:4\r\n> error: sonic-mgmt/tests/snappi_tests/multidut/pfcwd/test_multidut_pfcwd_basic_with_snappi.py: patch does not apply\r\n> error: patch failed: sonic-mgmt/tests/snappi_tests/multidut/pfcwd/test_multidut_pfcwd_burst_storm_with_snappi.py:2\r\n> error: sonic-mgmt/tests/snappi_tests/multidut/pfcwd/test_multidut_pfcwd_burst_storm_with_snappi.py: patch does not apply\r\n> error: patch failed: sonic-mgmt/tests/snappi_tests/multidut/pfcwd/test_multidut_pfcwd_m2o_with_snappi.py:2\r\n> error: sonic-mgmt/tests/snappi_tests/multidut/pfcwd/test_multidut_pfcwd_m2o_with_snappi.py: patch does not apply\r\n> error: patch failed: sonic-mgmt/tests/snappi_tests/multidut/pfcwd/test_multidut_pfcwd_runtime_traffic_with_snappi.py:1\r\n> error: sonic-mgmt/tests/snappi_tests/multidut/pfcwd/test_multidut_pfcwd_runtime_traffic_with_snappi.py: patch does not apply\r\n> error: patch failed: sonic-mgmt/tests/snappi_tests/test_multidut_snappi.py:115\r\n> error: sonic-mgmt/tests/snappi_tests/test_multidut_snappi.py: patch does not apply\r\n> rraghav@sonic-ucs-m3-2:~/Ixia/whitebox/202405/sonic-test$ \r\n> ```\r\n\r\n@rraghav-cisco this PR has dependencies on #14305 which is not in 202405 yet. can you try it on master branch first?"
    },
    {
        "number": 14742,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-03T01:50:02Z",
        "comment_author": "sdszhang",
        "comment_body": "> > @sdszhang : Can you pls raise a PR for 202405 ? the master diff has conflicts on this branch.\r\n> \r\n> @rraghav-cisco this PR has dependencies on #14305 which is not in 202405 yet. can you try it on master branch first?\r\n\r\n@rraghav-cisco #14305 is merged into 202405 now. Can you try cherry-pick this PR again?"
    },
    {
        "number": 14742,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-04T13:14:29Z",
        "comment_author": "sdszhang",
        "comment_body": "> can you please confirm there is no regression on T0/T1 testbed?\r\n\r\nThis change is in snappi_tests/multidut folder only. No shared code with existing snappi_tests/* test cases. So it won't affect existing T0/T1 regression tests.\r\n\r\n"
    },
    {
        "number": 14742,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-07T12:23:21Z",
        "comment_author": "sdszhang",
        "comment_body": "Full test logs are available at https://microsoftapc.sharepoint.com/:f:/t/T2-Ixiacommunityteam/EvlBrGmGs1VEq1MKBixPcYoBmFelqLE0yv5hpPyvnTqIfQ?e=FW6uSJ "
    },
    {
        "number": 14742,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-08T01:46:53Z",
        "comment_author": "mssonicbld",
        "comment_body": "Cherry-pick PR to 202405: https://github.com/sonic-net/sonic-mgmt/pull/14873"
    },
    {
        "number": 14742,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-03T05:15:35Z",
        "review_author": "developfast"
    },
    {
        "number": 14742,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-04T15:34:44Z",
        "review_author": "developfast"
    },
    {
        "number": 14742,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-08T01:45:48Z",
        "review_author": "yejianquan"
    },
    {
        "number": 14742,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-08T01:45:48Z",
        "latestReview_author": "yejianquan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14742,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-04T15:34:44Z",
        "latestReview_author": "developfast",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14739,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-10T00:13:55Z",
        "comment_author": "mssonicbld",
        "comment_body": "Cherry-pick PR to 202405: https://github.com/sonic-net/sonic-mgmt/pull/14929"
    },
    {
        "number": 14739,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-10T00:14:01Z",
        "comment_author": "mssonicbld",
        "comment_body": "Cherry-pick PR to 202311: https://github.com/sonic-net/sonic-mgmt/pull/14930"
    },
    {
        "number": 14739,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-26T06:45:17Z",
        "review_author": "lizhijianrd"
    },
    {
        "number": 14739,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-08T07:23:52Z",
        "review_author": "wangxin"
    },
    {
        "number": 14739,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-08T07:23:52Z",
        "latestReview_author": "wangxin",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14739,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-09-26T06:45:17Z",
        "latestReview_author": "lizhijianrd",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14731,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-26T01:34:44Z",
        "comment_author": "weiguo-nvidia",
        "comment_body": "/azpw run"
    },
    {
        "number": 14731,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-26T01:34:45Z",
        "comment_author": "mssonicbld",
        "comment_body": "/AzurePipelines run"
    },
    {
        "number": 14731,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-26T01:34:56Z",
        "comment_author": "azure-pipelines",
        "comment_body": "<samp>\nAzure Pipelines successfully started running 1 pipeline(s).<br>\r\n\n</samp>"
    },
    {
        "number": 14731,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-15T21:05:52Z",
        "comment_author": "mssonicbld",
        "comment_body": "@weiguo-nvidia PR conflicts with 202405 branch"
    },
    {
        "number": 14731,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-15T21:05:18Z",
        "review_author": "bingwang-ms"
    },
    {
        "number": 14731,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-15T21:05:18Z",
        "latestReview_author": "bingwang-ms",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14715,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-30T07:44:05Z",
        "comment_author": "sdszhang",
        "comment_body": "@zhixzhu is this needed for 202311 and 202305 too?"
    },
    {
        "number": 14715,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-30T16:24:06Z",
        "comment_author": "zhixzhu",
        "comment_body": "> @zhixzhu is this needed for 202311 and 202305 too?\r\n\r\n@sdszhang Yes, it is also needed in 202311 and 202305."
    },
    {
        "number": 14715,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-01T01:24:42Z",
        "comment_author": "mssonicbld",
        "comment_body": "Cherry-pick PR to 202405: https://github.com/sonic-net/sonic-mgmt/pull/14808"
    },
    {
        "number": 14715,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-27T05:21:44Z",
        "review_author": "sdszhang"
    },
    {
        "number": 14715,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-27T18:16:56Z",
        "review_author": "zhixzhu"
    },
    {
        "number": 14715,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-29T04:17:12Z",
        "review_author": "sdszhang"
    },
    {
        "number": 14715,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-01T01:23:38Z",
        "review_author": "yejianquan"
    },
    {
        "number": 14715,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-01T01:23:38Z",
        "latestReview_author": "yejianquan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14715,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-09-29T04:17:12Z",
        "latestReview_author": "sdszhang",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14713,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-02T18:59:25Z",
        "comment_author": "judyjoseph",
        "comment_body": "/azp run"
    },
    {
        "number": 14713,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-02T18:59:37Z",
        "comment_author": "azure-pipelines",
        "comment_body": "<samp>\nAzure Pipelines successfully started running 1 pipeline(s).<br>\r\n\n</samp>"
    },
    {
        "number": 14713,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-01T19:41:22Z",
        "review_author": "judyjoseph"
    },
    {
        "number": 14713,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-01T20:38:51Z",
        "review_author": "judyjoseph"
    },
    {
        "number": 14713,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-02T13:48:27Z",
        "review_author": "sanjair-git"
    },
    {
        "number": 14713,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-07T20:06:47Z",
        "review_author": "judyjoseph"
    },
    {
        "number": 14713,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-07T20:06:47Z",
        "latestReview_author": "judyjoseph",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14709,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-09T02:28:48Z",
        "comment_author": "wangxin",
        "comment_body": "/azp run"
    },
    {
        "number": 14709,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-09T02:28:59Z",
        "comment_author": "azure-pipelines",
        "comment_body": "<samp>\nAzure Pipelines successfully started running 1 pipeline(s).<br>\r\n\n</samp>"
    },
    {
        "number": 14709,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-24T09:09:01Z",
        "review_author": "xwjiang-ms"
    },
    {
        "number": 14709,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-24T10:59:05Z",
        "review_author": "wangxin"
    },
    {
        "number": 14709,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-09-24T10:59:05Z",
        "latestReview_author": "wangxin",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14709,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-09-24T09:09:01Z",
        "latestReview_author": "xwjiang-ms",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14704,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-30T12:12:59Z",
        "comment_author": "ZhaohuiS",
        "comment_body": "@StormLiangMS @wangxin @yejianquan Could you please help review, approve and merge? Thanks."
    },
    {
        "number": 14704,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-01T07:23:59Z",
        "comment_author": "mssonicbld",
        "comment_body": "Cherry-pick PR to 202405: https://github.com/sonic-net/sonic-mgmt/pull/14812"
    },
    {
        "number": 14704,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-25T02:55:27Z",
        "review_author": "ZhaohuiS"
    },
    {
        "number": 14704,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-25T02:58:35Z",
        "review_author": "ZhaohuiS"
    },
    {
        "number": 14704,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-26T01:57:15Z",
        "review_author": "ZhaohuiS"
    },
    {
        "number": 14704,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-26T02:04:20Z",
        "review_author": "matthew-soulsby"
    },
    {
        "number": 14704,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-26T02:05:51Z",
        "review_author": "matthew-soulsby"
    },
    {
        "number": 14704,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-26T02:10:30Z",
        "review_author": "matthew-soulsby"
    },
    {
        "number": 14704,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-30T03:19:15Z",
        "review_author": "ZhaohuiS"
    },
    {
        "number": 14704,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-30T05:58:56Z",
        "review_author": "matthew-soulsby"
    },
    {
        "number": 14704,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-30T12:12:15Z",
        "review_author": "ZhaohuiS"
    },
    {
        "number": 14704,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-30T23:54:55Z",
        "review_author": "yejianquan"
    },
    {
        "number": 14704,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-01T01:50:29Z",
        "review_author": "matthew-soulsby"
    },
    {
        "number": 14704,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-01T07:22:27Z",
        "review_author": "yejianquan"
    },
    {
        "number": 14704,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-01T07:22:44Z",
        "review_author": "yejianquan"
    },
    {
        "number": 14704,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-01T07:22:44Z",
        "latestReview_author": "yejianquan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14704,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-09-30T12:12:15Z",
        "latestReview_author": "ZhaohuiS",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14699,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-23T23:25:30Z",
        "comment_author": "mssonicbld",
        "comment_body": "The [pre-commit](http://pre-commit.com/) check detected issues in the files touched by this pull request.\nThe pre-commit check is a mandatory check, please fix detected issues.\n\nDetailed pre-commit check results:\n<samp>trim trailing whitespace.................................................Passed<br/>fix end of files.........................................................Passed<br/>check yaml...........................................(no files to check)Skipped<br/>check for added large files..............................................Passed<br/>check python ast.........................................................Passed<br/>flake8...................................................................Failed<br/>- hook id: flake8<br/>- exit code: 1<br/><br/>tests/ecmp/test_fgnhg.py:275:13: E117 over-indented<br/>tests/ecmp/test_fgnhg.py:281:1: E302 expected 2 blank lines, found 1<br/>tests/ecmp/test_fgnhg.py:344:5: E265 block comment should start with '# '<br/>tests/ecmp/test_fgnhg.py:413:5: E265 block comment should start with '# '<br/><br/>flake8...............................................(no files to check)Skipped<br/>check conditional mark sort..........................(no files to check)Skipped<br/></samp>\n\nTo run the pre-commit checks locally, you can follow below steps:\n1. Ensure that default python is python3. In sonic-mgmt docker container, default python is python2. You can run\n the check by activating the python3 virtual environment in sonic-mgmt docker container or outside of sonic-mgmt\n docker container.\n2. Ensure that the `pre-commit` package is installed:\n```\nsudo pip install pre-commit\n```\n3. Go to repository root folder\n4. Install the pre-commit hooks:\n```\npre-commit install\n```\n5. Use pre-commit to check staged file:\n```\npre-commit\n```\n6. Alternatively, you can check committed files using:\n```\npre-commit run --from-ref <commit_id> --to-ref <commit_id>\n```"
    },
    {
        "number": 14699,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-24T20:33:44Z",
        "comment_author": "mssonicbld",
        "comment_body": "The [pre-commit](http://pre-commit.com/) check detected issues in the files touched by this pull request.\nThe pre-commit check is a mandatory check, please fix detected issues.\n\nDetailed pre-commit check results:\n<samp>trim trailing whitespace.................................................Passed<br/>fix end of files.........................................................Passed<br/>check yaml...........................................(no files to check)Skipped<br/>check for added large files..............................................Passed<br/>check python ast.........................................................Passed<br/>flake8...................................................................Failed<br/>- hook id: flake8<br/>- exit code: 1<br/><br/>tests/ecmp/test_fgnhg.py:275:13: E117 over-indented<br/>tests/ecmp/test_fgnhg.py:289:5: E265 block comment should start with '# '<br/><br/>flake8...............................................(no files to check)Skipped<br/>check conditional mark sort..........................(no files to check)Skipped<br/></samp>\n\nTo run the pre-commit checks locally, you can follow below steps:\n1. Ensure that default python is python3. In sonic-mgmt docker container, default python is python2. You can run\n the check by activating the python3 virtual environment in sonic-mgmt docker container or outside of sonic-mgmt\n docker container.\n2. Ensure that the `pre-commit` package is installed:\n```\nsudo pip install pre-commit\n```\n3. Go to repository root folder\n4. Install the pre-commit hooks:\n```\npre-commit install\n```\n5. Use pre-commit to check staged file:\n```\npre-commit\n```\n6. Alternatively, you can check committed files using:\n```\npre-commit run --from-ref <commit_id> --to-ref <commit_id>\n```"
    },
    {
        "number": 14699,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-25T18:36:55Z",
        "comment_author": "bingwang-ms",
        "comment_body": "/azp run Azure.sonic-mgmt "
    },
    {
        "number": 14699,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-25T18:37:05Z",
        "comment_author": "azure-pipelines",
        "comment_body": "<samp>\nAzure Pipelines successfully started running 1 pipeline(s).<br>\r\n\n</samp>"
    },
    {
        "number": 14699,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-08T00:40:37Z",
        "comment_author": "mssonicbld",
        "comment_body": "Cherry-pick PR to 202305: https://github.com/sonic-net/sonic-mgmt/pull/14868"
    },
    {
        "number": 14699,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-08T00:41:32Z",
        "comment_author": "mssonicbld",
        "comment_body": "Cherry-pick PR to 202405: https://github.com/sonic-net/sonic-mgmt/pull/14869"
    },
    {
        "number": 14699,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-08T00:41:32Z",
        "comment_author": "mssonicbld",
        "comment_body": "Cherry-pick PR to 202311: https://github.com/sonic-net/sonic-mgmt/pull/14870"
    },
    {
        "number": 14699,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-24T00:17:20Z",
        "review_author": "anish-n"
    },
    {
        "number": 14699,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-24T00:17:29Z",
        "review_author": "anish-n"
    },
    {
        "number": 14699,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-24T00:18:46Z",
        "review_author": "anish-n"
    },
    {
        "number": 14699,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-24T23:52:17Z",
        "review_author": "anish-n"
    },
    {
        "number": 14699,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-26T17:08:55Z",
        "review_author": "bingwang-ms"
    },
    {
        "number": 14699,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-26T17:10:44Z",
        "review_author": "bingwang-ms"
    },
    {
        "number": 14699,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-26T18:05:08Z",
        "review_author": "alawing"
    },
    {
        "number": 14699,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-26T18:05:27Z",
        "review_author": "alawing"
    },
    {
        "number": 14699,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-26T18:15:49Z",
        "review_author": "bingwang-ms"
    },
    {
        "number": 14699,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-26T21:56:24Z",
        "review_author": "alawing"
    },
    {
        "number": 14699,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-30T23:41:34Z",
        "review_author": "prsunny"
    },
    {
        "number": 14699,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-01T17:26:49Z",
        "review_author": "prsunny"
    },
    {
        "number": 14699,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-01T17:45:10Z",
        "review_author": "alawing"
    },
    {
        "number": 14699,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-09-26T18:15:49Z",
        "latestReview_author": "bingwang-ms",
        "latestReview_state": "COMMENTED"
    },
    {
        "number": 14699,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-01T17:26:49Z",
        "latestReview_author": "prsunny",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14699,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-09-24T23:52:17Z",
        "latestReview_author": "anish-n",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14694,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-14T18:09:05Z",
        "comment_author": "bingwang-ms",
        "comment_body": "@yutongzhang-microsoft Can you please review this change? Thanks"
    },
    {
        "number": 14694,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-17T18:57:22Z",
        "comment_author": "mssonicbld",
        "comment_body": "Cherry-pick PR to 202405: https://github.com/sonic-net/sonic-mgmt/pull/15036"
    },
    {
        "number": 14694,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-25T17:23:17Z",
        "review_author": "arlakshm"
    },
    {
        "number": 14694,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-26T17:38:57Z",
        "review_author": "wumiaont"
    },
    {
        "number": 14694,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-26T20:19:11Z",
        "review_author": "wumiaont"
    },
    {
        "number": 14694,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-27T22:08:35Z",
        "review_author": "vmittal-msft"
    },
    {
        "number": 14694,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-14T18:57:22Z",
        "review_author": "yatishkoul"
    },
    {
        "number": 14694,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-14T20:59:00Z",
        "review_author": "zbud-msft"
    },
    {
        "number": 14694,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-14T20:59:20Z",
        "review_author": "arlakshm"
    },
    {
        "number": 14694,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-15T01:22:22Z",
        "review_author": "yutongzhang-microsoft"
    },
    {
        "number": 14694,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-14T18:57:22Z",
        "latestReview_author": "yatishkoul",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14694,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-09-27T22:08:35Z",
        "latestReview_author": "vmittal-msft",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14694,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-14T20:59:20Z",
        "latestReview_author": "arlakshm",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14694,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-15T01:22:22Z",
        "latestReview_author": "yutongzhang-microsoft",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14694,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-14T20:59:00Z",
        "latestReview_author": "zbud-msft",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14680,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-20T11:18:33Z",
        "comment_author": "mssonicbld",
        "comment_body": "The [pre-commit](http://pre-commit.com/) check detected issues in the files touched by this pull request.\nThe pre-commit check is a mandatory check, please fix detected issues.\n\nDetailed pre-commit check results:\n<samp>trim trailing whitespace.................................................Failed<br/>- hook id: trailing-whitespace<br/>- exit code: 1<br/>- files were modified by this hook<br/><br/>Fixing tests/dualtor/test_switchover_faulty_ycable.py<br/><br/>fix end of files.........................................................Passed<br/>check yaml...........................................(no files to check)Skipped<br/>check for added large files..............................................Passed<br/>check python ast.........................................................Passed<br/>flake8...................................................................Failed<br/>- hook id: flake8<br/>- exit code: 1<br/><br/>tests/dualtor/test_switchover_faulty_ycable.py:5:1: F401 'ipaddress' imported but unused<br/>tests/dualtor/test_switchover_faulty_ycable.py:7:1: F811 redefinition of unused 'pytest' from line 4<br/>tests/dualtor/test_switchover_faulty_ycable.py:10:1: F811 redefinition of unused 'logging' from line 3<br/>tests/dualtor/test_switchover_faulty_ycable.py:23:1: E303 too many blank lines (3)<br/>tests/dualtor/test_switchover_faulty_ycable.py:46:121: E501 line too long (153 > 120 characters)<br/>...<br/>[truncated extra lines, please run pre-commit locally to view full check results]<br/></samp>\n\nTo run the pre-commit checks locally, you can follow below steps:\n1. Ensure that default python is python3. In sonic-mgmt docker container, default python is python2. You can run\n the check by activating the python3 virtual environment in sonic-mgmt docker container or outside of sonic-mgmt\n docker container.\n2. Ensure that the `pre-commit` package is installed:\n```\nsudo pip install pre-commit\n```\n3. Go to repository root folder\n4. Install the pre-commit hooks:\n```\npre-commit install\n```\n5. Use pre-commit to check staged file:\n```\npre-commit\n```\n6. Alternatively, you can check committed files using:\n```\npre-commit run --from-ref <commit_id> --to-ref <commit_id>\n```"
    },
    {
        "number": 14680,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-20T11:25:55Z",
        "comment_author": "mssonicbld",
        "comment_body": "The [pre-commit](http://pre-commit.com/) check detected issues in the files touched by this pull request.\nThe pre-commit check is a mandatory check, please fix detected issues.\n\nDetailed pre-commit check results:\n<samp>trim trailing whitespace.................................................Failed<br/>- hook id: trailing-whitespace<br/>- exit code: 1<br/>- files were modified by this hook<br/><br/>Fixing tests/dualtor/test_switchover_faulty_ycable.py<br/><br/>fix end of files.........................................................Passed<br/>check yaml...........................................(no files to check)Skipped<br/>check for added large files..............................................Passed<br/>check python ast.........................................................Passed<br/>flake8...................................................................Passed<br/>flake8...............................................(no files to check)Skipped<br/>check conditional mark sort..........................(no files to check)Skipped<br/></samp>\n\nTo run the pre-commit checks locally, you can follow below steps:\n1. Ensure that default python is python3. In sonic-mgmt docker container, default python is python2. You can run\n the check by activating the python3 virtual environment in sonic-mgmt docker container or outside of sonic-mgmt\n docker container.\n2. Ensure that the `pre-commit` package is installed:\n```\nsudo pip install pre-commit\n```\n3. Go to repository root folder\n4. Install the pre-commit hooks:\n```\npre-commit install\n```\n5. Use pre-commit to check staged file:\n```\npre-commit\n```\n6. Alternatively, you can check committed files using:\n```\npre-commit run --from-ref <commit_id> --to-ref <commit_id>\n```"
    },
    {
        "number": 14680,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-09T03:05:00Z",
        "comment_author": "mssonicbld",
        "comment_body": "The [pre-commit](http://pre-commit.com/) check detected issues in the files touched by this pull request.\nThe pre-commit check is a mandatory check, please fix detected issues.\n\nDetailed pre-commit check results:\n<samp>trim trailing whitespace.................................................Passed<br/>fix end of files.........................................................Passed<br/>check yaml...........................................(no files to check)Skipped<br/>check for added large files..............................................Passed<br/>check python ast.........................................................Passed<br/>flake8...................................................................Failed<br/>- hook id: flake8<br/>- exit code: 1<br/><br/>tests/dualtor/test_switchover_faulty_ycable.py:158:23: E702 multiple statements on one line (semicolon)<br/><br/>flake8...............................................(no files to check)Skipped<br/>check conditional mark sort..........................(no files to check)Skipped<br/></samp>\n\nTo run the pre-commit checks locally, you can follow below steps:\n1. Ensure that default python is python3. In sonic-mgmt docker container, default python is python2. You can run\n the check by activating the python3 virtual environment in sonic-mgmt docker container or outside of sonic-mgmt\n docker container.\n2. Ensure that the `pre-commit` package is installed:\n```\nsudo pip install pre-commit\n```\n3. Go to repository root folder\n4. Install the pre-commit hooks:\n```\npre-commit install\n```\n5. Use pre-commit to check staged file:\n```\npre-commit\n```\n6. Alternatively, you can check committed files using:\n```\npre-commit run --from-ref <commit_id> --to-ref <commit_id>\n```"
    },
    {
        "number": 14680,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-09T15:02:56Z",
        "comment_author": "lolyu",
        "comment_body": "Hi @yxieca, updated, please help review."
    },
    {
        "number": 14680,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-11T05:43:16Z",
        "review_author": "yxieca"
    },
    {
        "number": 14680,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-11T05:43:16Z",
        "latestReview_author": "yxieca",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14668,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-20T20:04:54Z",
        "review_author": "prabhataravind"
    },
    {
        "number": 14668,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-09-20T20:04:54Z",
        "latestReview_author": "prabhataravind",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14628,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-20T05:40:04Z",
        "comment_author": "AnantKishorSharma",
        "comment_body": "Hi @kevinskwang , please review."
    },
    {
        "number": 14628,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-21T01:42:54Z",
        "comment_author": "AnantKishorSharma",
        "comment_body": "> can you change this line <<As the required SW changes are not available in 202411 we should skip test_bgp_suppress_fib for 202411>> to have 202405 and not 202411 because the required changes will be available in 202411, isnt it? which is why you had put the skip for 202405 and not 202411\r\n\r\nMy bad. Corrected the PR description."
    },
    {
        "number": 14628,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-25T01:46:20Z",
        "comment_author": "AnantKishorSharma",
        "comment_body": "Hi @kevinskwang , pls have a look."
    },
    {
        "number": 14628,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-27T02:55:22Z",
        "comment_author": "AnantKishorSharma",
        "comment_body": "Hi @kevinskwang, pls review this change."
    },
    {
        "number": 14628,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-30T21:33:18Z",
        "comment_author": "AnantKishorSharma",
        "comment_body": "Hi @kevinskwang , @bingwang-ms , @StormLiangMS , @echuawu , could you please help review this?"
    },
    {
        "number": 14628,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-08T02:15:53Z",
        "comment_author": "mssonicbld",
        "comment_body": "@AnantKishorSharma PR conflicts with 202405 branch"
    },
    {
        "number": 14628,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-20T23:22:25Z",
        "review_author": "bpar9"
    },
    {
        "number": 14628,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-25T00:37:09Z",
        "review_author": "bpar9"
    },
    {
        "number": 14628,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-08T02:03:25Z",
        "review_author": "wsycqyz"
    },
    {
        "number": 14628,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-08T02:03:25Z",
        "latestReview_author": "wsycqyz",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14628,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-09-25T00:37:09Z",
        "latestReview_author": "bpar9",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14607,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-18T18:09:47Z",
        "comment_author": "vvolam",
        "comment_body": "/azpw run"
    },
    {
        "number": 14607,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-18T18:09:50Z",
        "comment_author": "mssonicbld",
        "comment_body": "/AzurePipelines run"
    },
    {
        "number": 14607,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-18T18:10:00Z",
        "comment_author": "azure-pipelines",
        "comment_body": "<samp>\nAzure Pipelines successfully started running 1 pipeline(s).<br>\r\n\n</samp>"
    },
    {
        "number": 14607,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-18T03:46:28Z",
        "review_author": "Pterosaur"
    },
    {
        "number": 14607,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-18T17:56:16Z",
        "review_author": "assrinivasan"
    },
    {
        "number": 14607,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-18T22:39:54Z",
        "review_author": "saiarcot895"
    },
    {
        "number": 14607,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-25T16:35:49Z",
        "review_author": "prgeor"
    },
    {
        "number": 14607,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-25T16:36:59Z",
        "review_author": "prgeor"
    },
    {
        "number": 14607,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-25T16:59:03Z",
        "review_author": "vvolam"
    },
    {
        "number": 14607,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-25T17:02:38Z",
        "review_author": "vvolam"
    },
    {
        "number": 14607,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-30T17:13:43Z",
        "review_author": "vvolam"
    },
    {
        "number": 14607,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-18T00:13:01Z",
        "review_author": "vvolam"
    },
    {
        "number": 14607,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-18T01:59:39Z",
        "review_author": "prgeor"
    },
    {
        "number": 14607,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-09-18T03:46:28Z",
        "latestReview_author": "Pterosaur",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14607,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-18T01:59:39Z",
        "latestReview_author": "prgeor",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14607,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-09-18T17:56:16Z",
        "latestReview_author": "assrinivasan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14601,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-16T20:50:13Z",
        "comment_author": "linux-foundation-easycla",
        "comment_body": "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: ranepbhagyashree (f5de304193f343a25c2c223d8208856a2013f010, c8a58f875fb79e78bb43c3d99636ef533482fcdb, 86b88f8f18e33394f508bb91fbaf5d45b7615f28)</li></ul><!-- Date Modified: 2024-10-12 06:52:05.561754 -->"
    },
    {
        "number": 14601,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-16T21:25:22Z",
        "comment_author": "rajendrat",
        "comment_body": "viz @kevinwangsk"
    },
    {
        "number": 14601,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-08T04:52:19Z",
        "comment_author": "wsycqyz",
        "comment_body": "Do we need this PR in 202311 branch?"
    },
    {
        "number": 14601,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-09T06:59:18Z",
        "comment_author": "ranepbhagyashree",
        "comment_body": "> Do we need this PR in 202311 branch?\r\n\r\n We do not need this change for 202311 branch."
    },
    {
        "number": 14601,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-12T06:53:23Z",
        "comment_author": "qiluo-msft",
        "comment_body": "Closing and reopening PR could trigger semgrep, seems it was blocked for no reason."
    },
    {
        "number": 14601,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-15T17:05:33Z",
        "comment_author": "ranepbhagyashree",
        "comment_body": "lgtm"
    },
    {
        "number": 14601,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-17T01:33:19Z",
        "comment_author": "mssonicbld",
        "comment_body": "Cherry-pick PR to 202405: https://github.com/sonic-net/sonic-mgmt/pull/15019"
    },
    {
        "number": 14601,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-25T22:40:06Z",
        "review_author": "bpar9"
    },
    {
        "number": 14601,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-26T17:38:01Z",
        "review_author": "bpar9"
    },
    {
        "number": 14601,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-12T01:35:55Z",
        "review_author": "wsycqyz"
    },
    {
        "number": 14601,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-12T01:39:17Z",
        "review_author": "kevinskwang"
    },
    {
        "number": 14601,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-12T01:35:55Z",
        "latestReview_author": "wsycqyz",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14601,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-09-26T17:38:01Z",
        "latestReview_author": "bpar9",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14601,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-12T01:39:17Z",
        "latestReview_author": "kevinskwang",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14586,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-14T00:32:33Z",
        "comment_author": "mssonicbld",
        "comment_body": "The [pre-commit](http://pre-commit.com/) check detected issues in the files touched by this pull request.\nThe pre-commit check is a mandatory check, please fix detected issues.\n\nDetailed pre-commit check results:\n<samp>trim trailing whitespace.................................................Passed<br/>fix end of files.........................................................Passed<br/>check yaml...........................................(no files to check)Skipped<br/>check for added large files..............................................Passed<br/>check python ast.........................................................Passed<br/>flake8...................................................................Failed<br/>- hook id: flake8<br/>- exit code: 1<br/><br/>ansible/roles/test/files/ptftests/sonic.py:447:121: E501 line too long (121 > 120 characters)<br/>ansible/roles/test/files/ptftests/sonic.py:482:24: E713 test for membership should be 'not in'<br/>tests/common/helpers/sad_path.py:240:1: E302 expected 2 blank lines, found 1<br/><br/>flake8...............................................(no files to check)Skipped<br/>check conditional mark sort..........................(no files to check)Skipped<br/></samp>\n\nTo run the pre-commit checks locally, you can follow below steps:\n1. Ensure that default python is python3. In sonic-mgmt docker container, default python is python2. You can run\n the check by activating the python3 virtual environment in sonic-mgmt docker container or outside of sonic-mgmt\n docker container.\n2. Ensure that the `pre-commit` package is installed:\n```\nsudo pip install pre-commit\n```\n3. Go to repository root folder\n4. Install the pre-commit hooks:\n```\npre-commit install\n```\n5. Use pre-commit to check staged file:\n```\npre-commit\n```\n6. Alternatively, you can check committed files using:\n```\npre-commit run --from-ref <commit_id> --to-ref <commit_id>\n```"
    },
    {
        "number": 14586,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-30T22:11:02Z",
        "comment_author": "vaibhavhd",
        "comment_body": "@andywongarista please update the PR with the results from the test. Do you need this to be cherry picked to 202311, 202405? \r\n\r\nIf yes, can you ensure that the test passes on these image versions too?"
    },
    {
        "number": 14586,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-02T21:37:32Z",
        "comment_author": "yxieca",
        "comment_body": "@andywongarista please fill the PR template with proper information."
    },
    {
        "number": 14586,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-18T06:22:59Z",
        "review_author": "Ryangwaite"
    },
    {
        "number": 14586,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-20T01:55:24Z",
        "review_author": "Ryangwaite"
    },
    {
        "number": 14586,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-09-20T01:55:24Z",
        "latestReview_author": "Ryangwaite",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14565,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-24T05:32:30Z",
        "comment_author": "wangxin",
        "comment_body": "/azp run"
    },
    {
        "number": 14565,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-24T05:32:41Z",
        "comment_author": "azure-pipelines",
        "comment_body": "<samp>\nAzure Pipelines successfully started running 1 pipeline(s).<br>\r\n\n</samp>"
    },
    {
        "number": 14565,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-02T11:10:44Z",
        "comment_author": "yejianquan",
        "comment_body": "/azp run"
    },
    {
        "number": 14565,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-02T11:10:55Z",
        "comment_author": "azure-pipelines",
        "comment_body": "<samp>\nAzure Pipelines successfully started running 1 pipeline(s).<br>\r\n\n</samp>"
    },
    {
        "number": 14565,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-24T05:31:59Z",
        "review_author": "wangxin"
    },
    {
        "number": 14565,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-27T04:00:01Z",
        "review_author": "yejianquan"
    },
    {
        "number": 14565,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-09-24T05:31:59Z",
        "latestReview_author": "wangxin",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14565,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-09-27T04:00:01Z",
        "latestReview_author": "yejianquan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14533,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-12T03:10:25Z",
        "comment_author": "mssonicbld",
        "comment_body": "The [pre-commit](http://pre-commit.com/) check detected issues in the files touched by this pull request.\nThe pre-commit check is a mandatory check, please fix detected issues.\n\nDetailed pre-commit check results:\n<samp>trim trailing whitespace.................................................Passed<br/>fix end of files.........................................................Passed<br/>check yaml...........................................(no files to check)Skipped<br/>check for added large files..............................................Passed<br/>check python ast.........................................................Passed<br/>flake8...................................................................Failed<br/>- hook id: flake8<br/>- exit code: 1<br/><br/>tests/common/helpers/parallel_utils.py:18:1: E302 expected 2 blank lines, found 1<br/>tests/common/helpers/parallel_utils.py:28:1: E302 expected 2 blank lines, found 1<br/>tests/common/helpers/parallel_utils.py:101:28: E231 missing whitespace after ','<br/>tests/common/plugins/sanity_check/__init__.py:339:121: E501 line too long (122 > 120 characters)<br/>tests/conftest.py:2270:121: E501 line too long (121 > 120 characters)<br/>tests/conftest.py:2305:121: E501 line too long (124 > 120 characters)<br/><br/>flake8...............................................(no files to check)Skipped<br/>check conditional mark sort..........................(no files to check)Skipped<br/></samp>\n\nTo run the pre-commit checks locally, you can follow below steps:\n1. Ensure that default python is python3. In sonic-mgmt docker container, default python is python2. You can run\n the check by activating the python3 virtual environment in sonic-mgmt docker container or outside of sonic-mgmt\n docker container.\n2. Ensure that the `pre-commit` package is installed:\n```\nsudo pip install pre-commit\n```\n3. Go to repository root folder\n4. Install the pre-commit hooks:\n```\npre-commit install\n```\n5. Use pre-commit to check staged file:\n```\npre-commit\n```\n6. Alternatively, you can check committed files using:\n```\npre-commit run --from-ref <commit_id> --to-ref <commit_id>\n```"
    },
    {
        "number": 14533,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-13T08:56:32Z",
        "comment_author": "mssonicbld",
        "comment_body": "The [pre-commit](http://pre-commit.com/) check detected issues in the files touched by this pull request.\nThe pre-commit check is a mandatory check, please fix detected issues.\n\nDetailed pre-commit check results:\n<samp>trim trailing whitespace.................................................Failed<br/>- hook id: trailing-whitespace<br/>- exit code: 1<br/>- files were modified by this hook<br/><br/>Fixing tests/common/helpers/parallel_utils.py<br/><br/>fix end of files.........................................................Passed<br/>check yaml...........................................(no files to check)Skipped<br/>check for added large files..............................................Passed<br/>check python ast.........................................................Passed<br/>flake8...................................................................Passed<br/>flake8...............................................(no files to check)Skipped<br/>check conditional mark sort..........................(no files to check)Skipped<br/></samp>\n\nTo run the pre-commit checks locally, you can follow below steps:\n1. Ensure that default python is python3. In sonic-mgmt docker container, default python is python2. You can run\n the check by activating the python3 virtual environment in sonic-mgmt docker container or outside of sonic-mgmt\n docker container.\n2. Ensure that the `pre-commit` package is installed:\n```\nsudo pip install pre-commit\n```\n3. Go to repository root folder\n4. Install the pre-commit hooks:\n```\npre-commit install\n```\n5. Use pre-commit to check staged file:\n```\npre-commit\n```\n6. Alternatively, you can check committed files using:\n```\npre-commit run --from-ref <commit_id> --to-ref <commit_id>\n```"
    },
    {
        "number": 14533,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-23T08:35:20Z",
        "comment_author": "mssonicbld",
        "comment_body": "The [pre-commit](http://pre-commit.com/) check detected issues in the files touched by this pull request.\nThe pre-commit check is a mandatory check, please fix detected issues.\n\nDetailed pre-commit check results:\n<samp>trim trailing whitespace.................................................Failed<br/>- hook id: trailing-whitespace<br/>- exit code: 1<br/>- files were modified by this hook<br/><br/>Fixing tests/conftest.py<br/><br/>fix end of files.........................................................Passed<br/>check yaml...........................................(no files to check)Skipped<br/>check for added large files..............................................Passed<br/>check python ast.........................................................Passed<br/>flake8...................................................................Passed<br/>flake8...............................................(no files to check)Skipped<br/>check conditional mark sort..........................(no files to check)Skipped<br/></samp>\n\nTo run the pre-commit checks locally, you can follow below steps:\n1. Ensure that default python is python3. In sonic-mgmt docker container, default python is python2. You can run\n the check by activating the python3 virtual environment in sonic-mgmt docker container or outside of sonic-mgmt\n docker container.\n2. Ensure that the `pre-commit` package is installed:\n```\nsudo pip install pre-commit\n```\n3. Go to repository root folder\n4. Install the pre-commit hooks:\n```\npre-commit install\n```\n5. Use pre-commit to check staged file:\n```\npre-commit\n```\n6. Alternatively, you can check committed files using:\n```\npre-commit run --from-ref <commit_id> --to-ref <commit_id>\n```"
    },
    {
        "number": 14533,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-03T04:48:50Z",
        "comment_author": "mssonicbld",
        "comment_body": "Cherry-pick PR to 202405: https://github.com/sonic-net/sonic-mgmt/pull/14832"
    },
    {
        "number": 14533,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-12T04:25:35Z",
        "review_author": "cyw233"
    },
    {
        "number": 14533,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-12T04:41:42Z",
        "review_author": "cyw233"
    },
    {
        "number": 14533,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-12T04:52:24Z",
        "review_author": "cyw233"
    },
    {
        "number": 14533,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-12T05:36:00Z",
        "review_author": "cyw233"
    },
    {
        "number": 14533,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-12T07:37:45Z",
        "review_author": "auspham"
    },
    {
        "number": 14533,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-12T07:41:39Z",
        "review_author": "auspham"
    },
    {
        "number": 14533,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-13T01:27:31Z",
        "review_author": "cyw233"
    },
    {
        "number": 14533,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-13T03:17:45Z",
        "review_author": "cyw233"
    },
    {
        "number": 14533,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-13T05:21:10Z",
        "review_author": "cyw233"
    },
    {
        "number": 14533,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-13T05:31:02Z",
        "review_author": "auspham"
    },
    {
        "number": 14533,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-17T06:18:14Z",
        "review_author": "cyw233"
    },
    {
        "number": 14533,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-23T11:51:01Z",
        "review_author": "cyw233"
    },
    {
        "number": 14533,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-27T05:51:23Z",
        "review_author": "yejianquan"
    },
    {
        "number": 14533,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-03T04:47:44Z",
        "review_author": "yejianquan"
    },
    {
        "number": 14533,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-09-13T05:31:02Z",
        "latestReview_author": "auspham",
        "latestReview_state": "COMMENTED"
    },
    {
        "number": 14533,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-03T04:47:44Z",
        "latestReview_author": "yejianquan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14416,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-04T18:21:39Z",
        "comment_author": "mssonicbld",
        "comment_body": "The [pre-commit](http://pre-commit.com/) check detected issues in the files touched by this pull request.\nThe pre-commit check is a mandatory check, please fix detected issues.\n\nDetailed pre-commit check results:\n<samp>trim trailing whitespace.................................................Passed<br/>fix end of files.........................................................Passed<br/>check yaml...........................................(no files to check)Skipped<br/>check for added large files..............................................Passed<br/>check python ast.........................................................Failed<br/>- hook id: check-ast<br/>- exit code: 1<br/><br/>tests/snappi_tests/multidut/pfc/files/lossless_response_to_external_pause_storms_helper.py: failed parsing with CPython 3.10.12:<br/><br/>Traceback (most recent call last):<br/>File \"/home/AzDevOps/.cache/pre-commit/repobxfq0o6w/py_env-python3/lib/python3.10/site-packages/pre_commit_hooks/check_ast.py\", line 21, in main<br/>ast.parse(f.read(), filename=filename)<br/>File \"/usr/lib/python3.10/ast.py\", line 50, in parse<br/>return compile(source, filename, mode, flags,<br/>File \"tests/snappi_tests/multidut/pfc/files/lossless_response_to_external_pause_storms_helper.py\", line 12<br/>disable_packet_aging, sec_to_nanosec. get_interface_stats # noqa: F401<br/>^<br/>SyntaxError: invalid syntax<br/>...<br/>[truncated extra lines, please run pre-commit locally to view full check results]<br/></samp>\n\nTo run the pre-commit checks locally, you can follow below steps:\n1. Ensure that default python is python3. In sonic-mgmt docker container, default python is python2. You can run\n the check by activating the python3 virtual environment in sonic-mgmt docker container or outside of sonic-mgmt\n docker container.\n2. Ensure that the `pre-commit` package is installed:\n```\nsudo pip install pre-commit\n```\n3. Go to repository root folder\n4. Install the pre-commit hooks:\n```\npre-commit install\n```\n5. Use pre-commit to check staged file:\n```\npre-commit\n```\n6. Alternatively, you can check committed files using:\n```\npre-commit run --from-ref <commit_id> --to-ref <commit_id>\n```"
    },
    {
        "number": 14416,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-04T23:34:39Z",
        "comment_author": "sdszhang",
        "comment_body": "@rraghav-cisco @amitpawar12 to review."
    },
    {
        "number": 14416,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-27T05:13:50Z",
        "comment_author": "sdszhang",
        "comment_body": "@selldinesh can you resolve the conflicts so that we can merge it? "
    },
    {
        "number": 14416,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-01T18:39:55Z",
        "comment_author": "mssonicbld",
        "comment_body": "The [pre-commit](http://pre-commit.com/) check detected issues in the files touched by this pull request.\nThe pre-commit check is a mandatory check, please fix detected issues.\n\nDetailed pre-commit check results:\n<samp>trim trailing whitespace.................................................Failed<br/>- hook id: trailing-whitespace<br/>- exit code: 1<br/>- files were modified by this hook<br/><br/>Fixing tests/snappi_tests/multidut/pfc/files/m2o_fluctuating_lossless_helper.py<br/><br/>fix end of files.........................................................Passed<br/>check yaml...........................................(no files to check)Skipped<br/>check for added large files..............................................Passed<br/>check python ast.........................................................Passed<br/>flake8...................................................................Passed<br/>flake8...............................................(no files to check)Skipped<br/>check conditional mark sort..........................(no files to check)Skipped<br/></samp>\n\nTo run the pre-commit checks locally, you can follow below steps:\n1. Ensure that default python is python3. In sonic-mgmt docker container, default python is python2. You can run\n the check by activating the python3 virtual environment in sonic-mgmt docker container or outside of sonic-mgmt\n docker container.\n2. Ensure that the `pre-commit` package is installed:\n```\nsudo pip install pre-commit\n```\n3. Go to repository root folder\n4. Install the pre-commit hooks:\n```\npre-commit install\n```\n5. Use pre-commit to check staged file:\n```\npre-commit\n```\n6. Alternatively, you can check committed files using:\n```\npre-commit run --from-ref <commit_id> --to-ref <commit_id>\n```"
    },
    {
        "number": 14416,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-03T04:06:45Z",
        "comment_author": "sdszhang",
        "comment_body": "@selldinesh can you help to attach the test result for this change pls? "
    },
    {
        "number": 14416,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-08T01:44:15Z",
        "comment_author": "mssonicbld",
        "comment_body": "Cherry-pick PR to 202405: https://github.com/sonic-net/sonic-mgmt/pull/14872"
    },
    {
        "number": 14416,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-13T02:47:45Z",
        "review_author": "sdszhang"
    },
    {
        "number": 14416,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-17T19:39:54Z",
        "review_author": "rraghav-cisco"
    },
    {
        "number": 14416,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-18T23:09:25Z",
        "review_author": "selldinesh"
    },
    {
        "number": 14416,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-18T23:12:53Z",
        "review_author": "rraghav-cisco"
    },
    {
        "number": 14416,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-09-18T23:12:53Z",
        "latestReview_author": "rraghav-cisco",
        "latestReview_state": "COMMENTED"
    },
    {
        "number": 14416,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-09-13T02:47:45Z",
        "latestReview_author": "sdszhang",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14409,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-03T17:58:21Z",
        "comment_author": "mssonicbld",
        "comment_body": "The [pre-commit](http://pre-commit.com/) check detected issues in the files touched by this pull request.\nThe pre-commit check is a mandatory check, please fix detected issues.\n\nDetailed pre-commit check results:\n<samp>trim trailing whitespace.................................................Passed<br/>fix end of files.........................................................Passed<br/>check yaml...........................................(no files to check)Skipped<br/>check for added large files..............................................Passed<br/>check python ast.........................................................Passed<br/>flake8...................................................................Failed<br/>- hook id: flake8<br/>- exit code: 1<br/><br/>tests/arp/test_tagged_arp.py:91:1: E302 expected 2 blank lines, found 1<br/>tests/arp/test_tagged_arp.py:92:27: E703 statement ends with a semicolon<br/>tests/arp/test_tagged_arp.py:122:20: E703 statement ends with a semicolon<br/>tests/arp/test_tagged_arp.py:128:1: E302 expected 2 blank lines, found 1<br/>tests/arp/test_tagged_arp.py:159:121: E501 line too long (126 > 120 characters)<br/><br/>flake8...............................................(no files to check)Skipped<br/>check conditional mark sort..........................(no files to check)Skipped<br/></samp>\n\nTo run the pre-commit checks locally, you can follow below steps:\n1. Ensure that default python is python3. In sonic-mgmt docker container, default python is python2. You can run\n the check by activating the python3 virtual environment in sonic-mgmt docker container or outside of sonic-mgmt\n docker container.\n2. Ensure that the `pre-commit` package is installed:\n```\nsudo pip install pre-commit\n```\n3. Go to repository root folder\n4. Install the pre-commit hooks:\n```\npre-commit install\n```\n5. Use pre-commit to check staged file:\n```\npre-commit\n```\n6. Alternatively, you can check committed files using:\n```\npre-commit run --from-ref <commit_id> --to-ref <commit_id>\n```"
    },
    {
        "number": 14409,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-03T21:08:47Z",
        "comment_author": "ccroy-arista",
        "comment_body": "Checking pre-commit..."
    },
    {
        "number": 14409,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-06T08:01:00Z",
        "comment_author": "Janetxxx",
        "comment_body": "@ccroy-arista I cherry-picked this PR and ran the test, but received an ```AssertionError: Expected 10 entries, but 0 found.``` It seems ARP packets have not been received by the DUT for some reason. I'll ping you offline to discuss it further. Thanks.\r\n"
    },
    {
        "number": 14409,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-19T14:44:20Z",
        "comment_author": "StormLiangMS",
        "comment_body": "hi @Janetxxx do we still see failure with internal runs?"
    },
    {
        "number": 14409,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-20T00:31:23Z",
        "comment_author": "Janetxxx",
        "comment_body": "> hi @Janetxxx do we still see failure with internal runs?\r\n\r\nHi @StormLiangMS , It still failed in our internal run, I'll have a look in the next coming days. "
    },
    {
        "number": 14409,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-23T17:27:25Z",
        "comment_author": "r12f",
        "comment_body": "since the issue on our side is caused by different things from the issue being fixed here, let's get this merged, because eventually we will hit this anyway."
    },
    {
        "number": 14409,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-17T02:46:27Z",
        "comment_author": "StormLiangMS",
        "comment_body": "hi @yxieca need cherry pick. "
    },
    {
        "number": 14409,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-17T04:43:56Z",
        "comment_author": "mssonicbld",
        "comment_body": "Cherry-pick PR to 202311: https://github.com/sonic-net/sonic-mgmt/pull/15023"
    },
    {
        "number": 14409,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-17T04:44:00Z",
        "comment_author": "mssonicbld",
        "comment_body": "Cherry-pick PR to 202405: https://github.com/sonic-net/sonic-mgmt/pull/15024"
    },
    {
        "number": 14409,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-23T17:27:31Z",
        "review_author": "r12f"
    },
    {
        "number": 14409,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-09-23T17:27:31Z",
        "latestReview_author": "r12f",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14347,
        "repo": "sonic-mgmt",
        "comment_at": "2024-08-30T17:51:20Z",
        "comment_author": "andywongarista",
        "comment_body": "@saiarcot895 can you please review?"
    },
    {
        "number": 14347,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-10T21:44:58Z",
        "comment_author": "Ryangwaite",
        "comment_body": "I don't think it's the best approach for `postboot_setup` to always run. For our internal use of `postboot_setup` we copy and run additional scripts as well as patch various things that are only relevant after a successful reboot into the next version has occurred. If we put the `postboot_setup` in the finally block, then we'd always run these unless there was some flag that we set on error and pass into postboot_setup to selectively run pieces of the implementation. This sounds messy.\r\n\r\nI'm interested in your use case here. I get the sense that your `postboot_setup` implementation does some sort of additional log capture which would make sense to run in all cases. If so, we could introduce another hook like `preboot_setup` and `postboot_setup` that is called in the finally block."
    },
    {
        "number": 14347,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-16T23:58:22Z",
        "comment_author": "andywongarista",
        "comment_body": "> I don't think it's the best approach for `postboot_setup` to always run. For our internal use of `postboot_setup` we copy and run additional scripts as well as patch various things that are only relevant after a successful reboot into the next version has occurred. If we put the `postboot_setup` in the finally block, then we'd always run these unless there was some flag that we set on error and pass into postboot_setup to selectively run pieces of the implementation. This sounds messy.\r\n> \r\n> I'm interested in your use case here. I get the sense that your `postboot_setup` implementation does some sort of additional log capture which would make sense to run in all cases. If so, we could introduce another hook like `preboot_setup` and `postboot_setup` that is called in the finally block.\r\n\r\nInternally we use postboot_setup to restore DNS-related config that gets lost during the upgrade process, so for us it seems necessary to always run - otherwise subsequent attempts to run the test fail because the SONiC image cannot be installed."
    },
    {
        "number": 14347,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-24T21:15:52Z",
        "comment_author": "saiarcot895",
        "comment_body": "Vaibhav and I believe that the `postboot_setup` should always run, whether or not the upgrade was successful. For our use case, we'll need to refactor our code so that it works properly."
    },
    {
        "number": 14347,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-10T07:50:59Z",
        "comment_author": "StormLiangMS",
        "comment_body": "hi @yxieca @bingwang-ms need cherry pick. "
    },
    {
        "number": 14347,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-11T05:48:30Z",
        "comment_author": "mssonicbld",
        "comment_body": "Cherry-pick PR to 202405: https://github.com/sonic-net/sonic-mgmt/pull/14953"
    },
    {
        "number": 14347,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-11T05:48:30Z",
        "comment_author": "mssonicbld",
        "comment_body": "Cherry-pick PR to 202311: https://github.com/sonic-net/sonic-mgmt/pull/14954"
    },
    {
        "number": 14347,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-10T21:02:09Z",
        "review_author": "ryanzhu706"
    },
    {
        "number": 14347,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-10T22:01:18Z",
        "review_author": "saiarcot895"
    },
    {
        "number": 14347,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-01T11:01:02Z",
        "review_author": "Ryangwaite"
    },
    {
        "number": 14347,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-09-10T22:01:18Z",
        "latestReview_author": "saiarcot895",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14347,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-01T11:01:02Z",
        "latestReview_author": "Ryangwaite",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14347,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-09-10T21:02:09Z",
        "latestReview_author": "ryanzhu706",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14334,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-02T01:54:30Z",
        "comment_author": "wsycqyz",
        "comment_body": "Need confirmation if we need this change in 202311 branch."
    },
    {
        "number": 14334,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-03T14:25:08Z",
        "comment_author": "rbpittman",
        "comment_body": "@wsycqyz Yes we're testing on 202311 internally and need the changes there. \r\nFor example, @kevinskwang has merged #13825 to 202311 so far for us. "
    },
    {
        "number": 14334,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-03T17:11:21Z",
        "comment_author": "rbpittman",
        "comment_body": "@XuChen-MSFT Responded and revised. "
    },
    {
        "number": 14334,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-03T17:15:00Z",
        "comment_author": "rbpittman",
        "comment_body": "@XuChen-MSFT Random test question, would it be ok to add a lower margin on the QSharedWatermark test case's final exceeded packet send? \r\nThe current code only adds a margin on the upper:\r\n```\r\nassert (expected_wm 2016 2017 2018 2019 2020 2021 2022 2023 2024 parse_prs.py parse_reviews.py pr_dump.sh cell_size <= q_wm_res[queue]) \r\nassert (q_wm_res[queue] <= (expected_wm + margin) 2016 2017 2018 2019 2020 2021 2022 2023 2024 parse_prs.py parse_reviews.py pr_dump.sh cell_size)\r\n```\r\nI'd propose shifting down to something like this:\r\n```\r\nassert ((expected_wm -margin) 2016 2017 2018 2019 2020 2021 2022 2023 2024 parse_prs.py parse_reviews.py pr_dump.sh cell_size <= q_wm_res[queue]) \r\nassert (q_wm_res[queue] <= (expected_wm + margin) 2016 2017 2018 2019 2020 2021 2022 2023 2024 parse_prs.py parse_reviews.py pr_dump.sh cell_size)\r\n```\r\nThis is also already done in the earlier checks in the test while filling the queue. "
    },
    {
        "number": 14334,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-13T19:15:13Z",
        "comment_author": "rbpittman",
        "comment_body": "Resolved conflicts with the compute AI PR, which also resolved one of the local comments here. "
    },
    {
        "number": 14334,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-18T23:50:12Z",
        "comment_author": "kevinskwang",
        "comment_body": "@rbpittman could you solve the conflicts?"
    },
    {
        "number": 14334,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-19T02:26:26Z",
        "comment_author": "rbpittman",
        "comment_body": "@kevinskwang Resolved conflicts. "
    },
    {
        "number": 14334,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-25T10:32:20Z",
        "comment_author": "XuChen-MSFT",
        "comment_body": "> @XuChen-MSFT Random test question, would it be ok to add a lower margin on the QSharedWatermark test case's final exceeded packet send? The current code only adds a margin on the upper:\r\n> \r\n> ```\r\n> assert (expected_wm 2016 2017 2018 2019 2020 2021 2022 2023 2024 parse_prs.py parse_reviews.py pr_dump.sh cell_size <= q_wm_res[queue]) \r\n> assert (q_wm_res[queue] <= (expected_wm + margin) 2016 2017 2018 2019 2020 2021 2022 2023 2024 parse_prs.py parse_reviews.py pr_dump.sh cell_size)\r\n> ```\r\n> \r\n> I'd propose shifting down to something like this:\r\n> \r\n> ```\r\n> assert ((expected_wm -margin) 2016 2017 2018 2019 2020 2021 2022 2023 2024 parse_prs.py parse_reviews.py pr_dump.sh cell_size <= q_wm_res[queue]) \r\n> assert (q_wm_res[queue] <= (expected_wm + margin) 2016 2017 2018 2019 2020 2021 2022 2023 2024 parse_prs.py parse_reviews.py pr_dump.sh cell_size)\r\n> ```\r\n> \r\n> This is also already done in the earlier checks in the test while filling the queue.\r\n\r\nsure, can add checker for lower margin"
    },
    {
        "number": 14334,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-04T20:40:16Z",
        "comment_author": "bpar9",
        "comment_body": "/azp run"
    },
    {
        "number": 14334,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-04T20:40:27Z",
        "comment_author": "azure-pipelines",
        "comment_body": "<samp>\nAzure Pipelines successfully started running 1 pipeline(s).<br>\r\n\n</samp>"
    },
    {
        "number": 14334,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-09T07:31:12Z",
        "comment_author": "mssonicbld",
        "comment_body": "Cherry-pick PR to 202405: https://github.com/sonic-net/sonic-mgmt/pull/14907"
    },
    {
        "number": 14334,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-09T07:31:26Z",
        "comment_author": "mssonicbld",
        "comment_body": "@rbpittman PR conflicts with 202311 branch"
    },
    {
        "number": 14334,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-18T13:47:22Z",
        "comment_author": "rbpittman",
        "comment_body": "No longer needed in 202311, feel free to remove the tags. "
    },
    {
        "number": 14334,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-03T06:38:18Z",
        "review_author": "XuChen-MSFT"
    },
    {
        "number": 14334,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-03T06:53:53Z",
        "review_author": "XuChen-MSFT"
    },
    {
        "number": 14334,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-03T06:56:53Z",
        "review_author": "XuChen-MSFT"
    },
    {
        "number": 14334,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-03T07:01:35Z",
        "review_author": "XuChen-MSFT"
    },
    {
        "number": 14334,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-03T07:11:30Z",
        "review_author": "XuChen-MSFT"
    },
    {
        "number": 14334,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-03T13:38:14Z",
        "review_author": "rbpittman"
    },
    {
        "number": 14334,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-03T14:00:52Z",
        "review_author": "rbpittman"
    },
    {
        "number": 14334,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-03T17:07:37Z",
        "review_author": "rbpittman"
    },
    {
        "number": 14334,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-03T17:09:24Z",
        "review_author": "rbpittman"
    },
    {
        "number": 14334,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-13T17:44:35Z",
        "review_author": "rbpittman"
    },
    {
        "number": 14334,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-25T12:14:29Z",
        "review_author": "XuChen-MSFT"
    },
    {
        "number": 14334,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-04T20:39:53Z",
        "review_author": "bpar9"
    },
    {
        "number": 14334,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-08T06:48:23Z",
        "review_author": "kevinskwang"
    },
    {
        "number": 14334,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-09T07:30:35Z",
        "review_author": "kevinskwang"
    },
    {
        "number": 14334,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-04T20:39:53Z",
        "latestReview_author": "bpar9",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14334,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-09T07:30:35Z",
        "latestReview_author": "kevinskwang",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14334,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-09-25T12:14:29Z",
        "latestReview_author": "XuChen-MSFT",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14303,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-25T12:43:59Z",
        "comment_author": "XuChen-MSFT",
        "comment_body": "/azp run"
    },
    {
        "number": 14303,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-25T12:44:06Z",
        "comment_author": "azure-pipelines",
        "comment_body": "<samp>\nCommenter does not have sufficient privileges for PR 14303 in repo sonic-net/sonic-mgmt<br>\r\n\n</samp>"
    },
    {
        "number": 14303,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-04T20:37:06Z",
        "comment_author": "bpar9",
        "comment_body": "/azp run"
    },
    {
        "number": 14303,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-04T20:37:17Z",
        "comment_author": "azure-pipelines",
        "comment_body": "<samp>\nAzure Pipelines successfully started running 1 pipeline(s).<br>\r\n\n</samp>"
    },
    {
        "number": 14303,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-08T06:47:30Z",
        "comment_author": "mssonicbld",
        "comment_body": "Cherry-pick PR to 202405: https://github.com/sonic-net/sonic-mgmt/pull/14879"
    },
    {
        "number": 14303,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-08T06:47:34Z",
        "comment_author": "mssonicbld",
        "comment_body": "Cherry-pick PR to 202311: https://github.com/sonic-net/sonic-mgmt/pull/14880"
    },
    {
        "number": 14303,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-04T13:50:39Z",
        "review_author": "alpeshspatel"
    },
    {
        "number": 14303,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-25T10:26:59Z",
        "review_author": "XuChen-MSFT"
    },
    {
        "number": 14303,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-03T18:57:40Z",
        "review_author": "kperumalbfn"
    },
    {
        "number": 14303,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-04T12:55:06Z",
        "review_author": "rbpittman"
    },
    {
        "number": 14303,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-04T19:16:00Z",
        "review_author": "bpar9"
    },
    {
        "number": 14303,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-07T17:17:00Z",
        "review_author": "kperumalbfn"
    },
    {
        "number": 14303,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-09-04T13:50:39Z",
        "latestReview_author": "alpeshspatel",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14303,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-04T19:16:00Z",
        "latestReview_author": "bpar9",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14303,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-07T17:17:00Z",
        "latestReview_author": "kperumalbfn",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14303,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-09-25T10:26:59Z",
        "latestReview_author": "XuChen-MSFT",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14229,
        "repo": "sonic-mgmt",
        "comment_at": "2024-08-23T07:36:53Z",
        "comment_author": "mssonicbld",
        "comment_body": "The [pre-commit](http://pre-commit.com/) check detected issues in the files touched by this pull request.\nThe pre-commit check is a mandatory check, please fix detected issues.\n\nDetailed pre-commit check results:\n<samp>trim trailing whitespace.................................................Passed<br/>fix end of files.........................................................Passed<br/>check yaml...........................................(no files to check)Skipped<br/>check for added large files..............................................Passed<br/>check python ast.........................................................Passed<br/>flake8...................................................................Failed<br/>- hook id: flake8<br/>- exit code: 1<br/><br/>tests/qos/test_buffer.py:3253:5: F841 local variable 'cell_occupancy' is assigned to but never used<br/><br/>flake8...............................................(no files to check)Skipped<br/>check conditional mark sort..........................(no files to check)Skipped<br/></samp>\n\nTo run the pre-commit checks locally, you can follow below steps:\n1. Ensure that default python is python3. In sonic-mgmt docker container, default python is python2. You can run\n the check by activating the python3 virtual environment in sonic-mgmt docker container or outside of sonic-mgmt\n docker container.\n2. Ensure that the `pre-commit` package is installed:\n```\nsudo pip install pre-commit\n```\n3. Go to repository root folder\n4. Install the pre-commit hooks:\n```\npre-commit install\n```\n5. Use pre-commit to check staged file:\n```\npre-commit\n```\n6. Alternatively, you can check committed files using:\n```\npre-commit run --from-ref <commit_id> --to-ref <commit_id>\n```"
    },
    {
        "number": 14229,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-07T20:16:14Z",
        "comment_author": "bingwang-ms",
        "comment_body": "@kperumalbfn Can you please help review?"
    },
    {
        "number": 14229,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-15T05:56:18Z",
        "comment_author": "JibinBao",
        "comment_body": "Hi @bingwang-ms, If there are not other comments, Can you help merge it?"
    },
    {
        "number": 14229,
        "repo": "sonic-mgmt",
        "review_at": "2024-08-23T07:15:23Z",
        "review_author": "stephenxs"
    },
    {
        "number": 14229,
        "repo": "sonic-mgmt",
        "review_at": "2024-08-23T07:17:09Z",
        "review_author": "congh-nvidia"
    },
    {
        "number": 14229,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-07T22:30:20Z",
        "review_author": "kperumalbfn"
    },
    {
        "number": 14229,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-07T22:30:30Z",
        "review_author": "kperumalbfn"
    },
    {
        "number": 14229,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-08-23T07:15:23Z",
        "latestReview_author": "stephenxs",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14229,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-07T22:30:30Z",
        "latestReview_author": "kperumalbfn",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14229,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-08-23T07:17:09Z",
        "latestReview_author": "congh-nvidia",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "comment_at": "2024-08-16T18:02:38Z",
        "comment_author": "mssonicbld",
        "comment_body": "The [pre-commit](http://pre-commit.com/) check detected issues in the files touched by this pull request.\nThe pre-commit check is a mandatory check, please fix detected issues.\n\nDetailed pre-commit check results:\n<samp>trim trailing whitespace.................................................Failed<br/>- hook id: trailing-whitespace<br/>- exit code: 1<br/>- files were modified by this hook<br/><br/>Fixing tests/platform_tests/cli/test_show_platform_dpu.py<br/>Fixing tests/platform_tests/test_reload_dpu.py<br/><br/>fix end of files.........................................................Passed<br/>check yaml...........................................(no files to check)Skipped<br/>check for added large files..............................................Passed<br/>check python ast.........................................................Passed<br/>flake8...................................................................Failed<br/>- hook id: flake8<br/>- exit code: 1<br/><br/>tests/common/platform/device_utils_dpu.py:9:1: F403 'from tests.platform_tests.api.conftest import *' used; unable to detect undefined names<br/>tests/common/platform/device_utils_dpu.py:9:1: F401 'tests.platform_tests.api.conftest.*' imported but unused<br/>tests/common/platform/device_utils_dpu.py:10:1: F403 'from tests.common.devices.sonic import *' used; unable to detect undefined names<br/>tests/common/platform/device_utils_dpu.py:10:1: F401 'tests.common.devices.sonic.*' imported but unused<br/>...<br/>[truncated extra lines, please run pre-commit locally to view full check results]<br/></samp>\n\nTo run the pre-commit checks locally, you can follow below steps:\n1. Ensure that default python is python3. In sonic-mgmt docker container, default python is python2. You can run\n the check by activating the python3 virtual environment in sonic-mgmt docker container or outside of sonic-mgmt\n docker container.\n2. Ensure that the `pre-commit` package is installed:\n```\nsudo pip install pre-commit\n```\n3. Go to repository root folder\n4. Install the pre-commit hooks:\n```\npre-commit install\n```\n5. Use pre-commit to check staged file:\n```\npre-commit\n```\n6. Alternatively, you can check committed files using:\n```\npre-commit run --from-ref <commit_id> --to-ref <commit_id>\n```"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "comment_at": "2024-08-26T18:03:22Z",
        "comment_author": "prgeor",
        "comment_body": "@nissampa Please update the PR description with the HLD link"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-03T23:31:43Z",
        "comment_author": "mssonicbld",
        "comment_body": "The [pre-commit](http://pre-commit.com/) check detected issues in the files touched by this pull request.\nThe pre-commit check is a mandatory check, please fix detected issues.\n\nDetailed pre-commit check results:\n<samp>trim trailing whitespace.................................................Failed<br/>- hook id: trailing-whitespace<br/>- exit code: 1<br/>- files were modified by this hook<br/><br/>Fixing tests/smartswitch/test_reload_dpu.py<br/>Fixing tests/smartswitch/test_show_platform_dpu.py<br/><br/>fix end of files.........................................................Passed<br/>check yaml...........................................(no files to check)Skipped<br/>check for added large files..............................................Passed<br/>check python ast.........................................................Passed<br/>flake8...................................................................Failed<br/>- hook id: flake8<br/>- exit code: 1<br/><br/>tests/smartswitch/common/device_utils_dpu.py:9:1: F401 'tests.platform_tests.api.conftest.platform_api_conn' imported but unused<br/>tests/smartswitch/common/device_utils_dpu.py:10:1: F403 'from tests.common.devices.sonic import *' used; unable to detect undefined names<br/>tests/smartswitch/common/device_utils_dpu.py:10:1: F401 'tests.common.devices.sonic.*' imported but unused<br/>tests/smartswitch/common/device_utils_dpu.py:10:41: E261 at least two spaces before inline comment<br/>...<br/>[truncated extra lines, please run pre-commit locally to view full check results]<br/></samp>\n\nTo run the pre-commit checks locally, you can follow below steps:\n1. Ensure that default python is python3. In sonic-mgmt docker container, default python is python2. You can run\n the check by activating the python3 virtual environment in sonic-mgmt docker container or outside of sonic-mgmt\n docker container.\n2. Ensure that the `pre-commit` package is installed:\n```\nsudo pip install pre-commit\n```\n3. Go to repository root folder\n4. Install the pre-commit hooks:\n```\npre-commit install\n```\n5. Use pre-commit to check staged file:\n```\npre-commit\n```\n6. Alternatively, you can check committed files using:\n```\npre-commit run --from-ref <commit_id> --to-ref <commit_id>\n```"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-05T00:12:20Z",
        "comment_author": "mssonicbld",
        "comment_body": "The [pre-commit](http://pre-commit.com/) check detected issues in the files touched by this pull request.\nThe pre-commit check is a mandatory check, please fix detected issues.\n\nDetailed pre-commit check results:\n<samp>trim trailing whitespace.................................................Failed<br/>- hook id: trailing-whitespace<br/>- exit code: 1<br/>- files were modified by this hook<br/><br/>Fixing tests/smartswitch/test_reload_dpu.py<br/>Fixing tests/smartswitch/test_show_platform_dpu.py<br/><br/>fix end of files.........................................................Passed<br/>check yaml...........................................(no files to check)Skipped<br/>check for added large files..............................................Passed<br/>check python ast.........................................................Passed<br/>flake8...................................................................Failed<br/>- hook id: flake8<br/>- exit code: 1<br/><br/>tests/smartswitch/common/device_utils_dpu.py:9:1: F401 'tests.platform_tests.api.conftest.platform_api_conn' imported but unused<br/>tests/smartswitch/common/device_utils_dpu.py:10:1: F403 'from tests.common.devices.sonic import *' used; unable to detect undefined names<br/>tests/smartswitch/common/device_utils_dpu.py:10:1: F401 'tests.common.devices.sonic.*' imported but unused<br/>tests/smartswitch/common/device_utils_dpu.py:10:41: E261 at least two spaces before inline comment<br/>...<br/>[truncated extra lines, please run pre-commit locally to view full check results]<br/></samp>\n\nTo run the pre-commit checks locally, you can follow below steps:\n1. Ensure that default python is python3. In sonic-mgmt docker container, default python is python2. You can run\n the check by activating the python3 virtual environment in sonic-mgmt docker container or outside of sonic-mgmt\n docker container.\n2. Ensure that the `pre-commit` package is installed:\n```\nsudo pip install pre-commit\n```\n3. Go to repository root folder\n4. Install the pre-commit hooks:\n```\npre-commit install\n```\n5. Use pre-commit to check staged file:\n```\npre-commit\n```\n6. Alternatively, you can check committed files using:\n```\npre-commit run --from-ref <commit_id> --to-ref <commit_id>\n```"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-05T17:56:19Z",
        "comment_author": "mssonicbld",
        "comment_body": "The [pre-commit](http://pre-commit.com/) check detected issues in the files touched by this pull request.\nThe pre-commit check is a mandatory check, please fix detected issues.\n\nDetailed pre-commit check results:\n<samp>trim trailing whitespace.................................................Failed<br/>- hook id: trailing-whitespace<br/>- exit code: 1<br/>- files were modified by this hook<br/><br/>Fixing tests/smartswitch/platform_tests/test_reload_dpu.py<br/>Fixing tests/smartswitch/platform_tests/test_show_platform_dpu.py<br/><br/>fix end of files.........................................................Passed<br/>check yaml...........................................(no files to check)Skipped<br/>check for added large files..............................................Passed<br/>check python ast.........................................................Passed<br/>flake8...................................................................Failed<br/>- hook id: flake8<br/>- exit code: 1<br/><br/>tests/smartswitch/common/device_utils_dpu.py:9:1: F401 'tests.platform_tests.api.conftest.platform_api_conn' imported but unused<br/>tests/smartswitch/common/device_utils_dpu.py:10:1: F403 'from tests.common.devices.sonic import *' used; unable to detect undefined names<br/>tests/smartswitch/common/device_utils_dpu.py:10:1: F401 'tests.common.devices.sonic.*' imported but unused<br/>tests/smartswitch/common/device_utils_dpu.py:10:41: E261 at least two spaces before inline comment<br/>...<br/>[truncated extra lines, please run pre-commit locally to view full check results]<br/></samp>\n\nTo run the pre-commit checks locally, you can follow below steps:\n1. Ensure that default python is python3. In sonic-mgmt docker container, default python is python2. You can run\n the check by activating the python3 virtual environment in sonic-mgmt docker container or outside of sonic-mgmt\n docker container.\n2. Ensure that the `pre-commit` package is installed:\n```\nsudo pip install pre-commit\n```\n3. Go to repository root folder\n4. Install the pre-commit hooks:\n```\npre-commit install\n```\n5. Use pre-commit to check staged file:\n```\npre-commit\n```\n6. Alternatively, you can check committed files using:\n```\npre-commit run --from-ref <commit_id> --to-ref <commit_id>\n```"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-06T18:29:47Z",
        "comment_author": "mssonicbld",
        "comment_body": "The [pre-commit](http://pre-commit.com/) check detected issues in the files touched by this pull request.\nThe pre-commit check is a mandatory check, please fix detected issues.\n\nDetailed pre-commit check results:\n<samp>trim trailing whitespace.................................................Failed<br/>- hook id: trailing-whitespace<br/>- exit code: 1<br/>- files were modified by this hook<br/><br/>Fixing tests/smartswitch/platform_tests/test_reload_dpu.py<br/>Fixing tests/smartswitch/platform_tests/test_show_platform_dpu.py<br/><br/>fix end of files.........................................................Passed<br/>check yaml...........................................(no files to check)Skipped<br/>check for added large files..............................................Passed<br/>check python ast.........................................................Passed<br/>flake8...................................................................Failed<br/>- hook id: flake8<br/>- exit code: 1<br/><br/>tests/smartswitch/common/device_utils_dpu.py:9:1: F403 'from tests.platform_tests.api.conftest import *' used; unable to detect undefined names<br/>tests/smartswitch/common/device_utils_dpu.py:9:1: F401 'tests.platform_tests.api.conftest.*' imported but unused<br/>tests/smartswitch/common/device_utils_dpu.py:9:48: E261 at least two spaces before inline comment<br/>tests/smartswitch/common/device_utils_dpu.py:9:49: E262 inline comment should start with '# '<br/>...<br/>[truncated extra lines, please run pre-commit locally to view full check results]<br/></samp>\n\nTo run the pre-commit checks locally, you can follow below steps:\n1. Ensure that default python is python3. In sonic-mgmt docker container, default python is python2. You can run\n the check by activating the python3 virtual environment in sonic-mgmt docker container or outside of sonic-mgmt\n docker container.\n2. Ensure that the `pre-commit` package is installed:\n```\nsudo pip install pre-commit\n```\n3. Go to repository root folder\n4. Install the pre-commit hooks:\n```\npre-commit install\n```\n5. Use pre-commit to check staged file:\n```\npre-commit\n```\n6. Alternatively, you can check committed files using:\n```\npre-commit run --from-ref <commit_id> --to-ref <commit_id>\n```"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-09T22:53:46Z",
        "comment_author": "mssonicbld",
        "comment_body": "The [pre-commit](http://pre-commit.com/) check detected issues in the files touched by this pull request.\nThe pre-commit check is a mandatory check, please fix detected issues.\n\nDetailed pre-commit check results:\n<samp>trim trailing whitespace.................................................Failed<br/>- hook id: trailing-whitespace<br/>- exit code: 1<br/>- files were modified by this hook<br/><br/>Fixing tests/smartswitch/platform_tests/test_reload_dpu.py<br/>Fixing tests/smartswitch/platform_tests/test_show_platform_dpu.py<br/><br/>fix end of files.........................................................Passed<br/>check yaml...........................................(no files to check)Skipped<br/>check for added large files..............................................Passed<br/>check python ast.........................................................Failed<br/>- hook id: check-ast<br/>- exit code: 1<br/><br/>tests/smartswitch/common/device_utils_dpu.py: failed parsing with CPython 3.10.12:<br/><br/>Traceback (most recent call last):<br/>File \"/home/AzDevOps/.cache/pre-commit/repok5w339yo/py_env-python3/lib/python3.10/site-packages/pre_commit_hooks/check_ast.py\", line 21, in main<br/>ast.parse(f.read(), filename=filename)<br/>...<br/>[truncated extra lines, please run pre-commit locally to view full check results]<br/></samp>\n\nTo run the pre-commit checks locally, you can follow below steps:\n1. Ensure that default python is python3. In sonic-mgmt docker container, default python is python2. You can run\n the check by activating the python3 virtual environment in sonic-mgmt docker container or outside of sonic-mgmt\n docker container.\n2. Ensure that the `pre-commit` package is installed:\n```\nsudo pip install pre-commit\n```\n3. Go to repository root folder\n4. Install the pre-commit hooks:\n```\npre-commit install\n```\n5. Use pre-commit to check staged file:\n```\npre-commit\n```\n6. Alternatively, you can check committed files using:\n```\npre-commit run --from-ref <commit_id> --to-ref <commit_id>\n```"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-10T19:07:26Z",
        "comment_author": "mssonicbld",
        "comment_body": "The [pre-commit](http://pre-commit.com/) check detected issues in the files touched by this pull request.\nThe pre-commit check is a mandatory check, please fix detected issues.\n\nDetailed pre-commit check results:\n<samp>trim trailing whitespace.................................................Failed<br/>- hook id: trailing-whitespace<br/>- exit code: 1<br/>- files were modified by this hook<br/><br/>Fixing tests/smartswitch/platform_tests/test_reload_dpu.py<br/>Fixing tests/smartswitch/platform_tests/test_show_platform_dpu.py<br/><br/>fix end of files.........................................................Passed<br/>check yaml...........................................(no files to check)Skipped<br/>check for added large files..............................................Passed<br/>check python ast.........................................................Failed<br/>- hook id: check-ast<br/>- exit code: 1<br/><br/>tests/smartswitch/common/device_utils_dpu.py: failed parsing with CPython 3.10.12:<br/><br/>Traceback (most recent call last):<br/>File \"/home/AzDevOps/.cache/pre-commit/repookz215wo/py_env-python3/lib/python3.10/site-packages/pre_commit_hooks/check_ast.py\", line 21, in main<br/>ast.parse(f.read(), filename=filename)<br/>...<br/>[truncated extra lines, please run pre-commit locally to view full check results]<br/></samp>\n\nTo run the pre-commit checks locally, you can follow below steps:\n1. Ensure that default python is python3. In sonic-mgmt docker container, default python is python2. You can run\n the check by activating the python3 virtual environment in sonic-mgmt docker container or outside of sonic-mgmt\n docker container.\n2. Ensure that the `pre-commit` package is installed:\n```\nsudo pip install pre-commit\n```\n3. Go to repository root folder\n4. Install the pre-commit hooks:\n```\npre-commit install\n```\n5. Use pre-commit to check staged file:\n```\npre-commit\n```\n6. Alternatively, you can check committed files using:\n```\npre-commit run --from-ref <commit_id> --to-ref <commit_id>\n```"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-10T20:50:47Z",
        "comment_author": "mssonicbld",
        "comment_body": "The [pre-commit](http://pre-commit.com/) check detected issues in the files touched by this pull request.\nThe pre-commit check is a mandatory check, please fix detected issues.\n\nDetailed pre-commit check results:\n<samp>trim trailing whitespace.................................................Failed<br/>- hook id: trailing-whitespace<br/>- exit code: 1<br/>- files were modified by this hook<br/><br/>Fixing tests/smartswitch/platform_tests/test_reload_dpu.py<br/>Fixing tests/smartswitch/platform_tests/test_show_platform_dpu.py<br/><br/>fix end of files.........................................................Passed<br/>check yaml...........................................(no files to check)Skipped<br/>check for added large files..............................................Passed<br/>check python ast.........................................................Passed<br/>flake8...................................................................Failed<br/>- hook id: flake8<br/>- exit code: 1<br/><br/>tests/smartswitch/common/device_utils_dpu.py:5:1: F401 'time' imported but unused<br/>tests/smartswitch/common/device_utils_dpu.py:6:1: F401 'pytest' imported but unused<br/>tests/smartswitch/common/device_utils_dpu.py:7:1: F401 'tests.common.utilities.wait_until' imported but unused<br/>tests/smartswitch/common/device_utils_dpu.py:8:1: F401 'tests.common.helpers.platform_api.chassis' imported but unused<br/>...<br/>[truncated extra lines, please run pre-commit locally to view full check results]<br/></samp>\n\nTo run the pre-commit checks locally, you can follow below steps:\n1. Ensure that default python is python3. In sonic-mgmt docker container, default python is python2. You can run\n the check by activating the python3 virtual environment in sonic-mgmt docker container or outside of sonic-mgmt\n docker container.\n2. Ensure that the `pre-commit` package is installed:\n```\nsudo pip install pre-commit\n```\n3. Go to repository root folder\n4. Install the pre-commit hooks:\n```\npre-commit install\n```\n5. Use pre-commit to check staged file:\n```\npre-commit\n```\n6. Alternatively, you can check committed files using:\n```\npre-commit run --from-ref <commit_id> --to-ref <commit_id>\n```"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-10T21:50:58Z",
        "comment_author": "mssonicbld",
        "comment_body": "The [pre-commit](http://pre-commit.com/) check detected issues in the files touched by this pull request.\nThe pre-commit check is a mandatory check, please fix detected issues.\n\nDetailed pre-commit check results:\n<samp>trim trailing whitespace.................................................Failed<br/>- hook id: trailing-whitespace<br/>- exit code: 1<br/>- files were modified by this hook<br/><br/>Fixing tests/smartswitch/platform_tests/test_reload_dpu.py<br/>Fixing tests/smartswitch/platform_tests/test_show_platform_dpu.py<br/><br/>fix end of files.........................................................Passed<br/>check yaml...........................................(no files to check)Skipped<br/>check for added large files..............................................Passed<br/>check python ast.........................................................Passed<br/>flake8...................................................................Failed<br/>- hook id: flake8<br/>- exit code: 1<br/><br/>tests/smartswitch/platform_tests/test_reload_dpu.py:9:1: F401 'tests.common.fixtures.conn_graph_facts.conn_graph_facts' imported but unused<br/>tests/smartswitch/platform_tests/test_reload_dpu.py:13:39: E231 missing whitespace after ','<br/>tests/smartswitch/platform_tests/test_reload_dpu.py:13:56: E231 missing whitespace after ','<br/>tests/smartswitch/platform_tests/test_reload_dpu.py:14:1: F401 'tests.common.config_reload.config_force_option_supported' imported but unused<br/>...<br/>[truncated extra lines, please run pre-commit locally to view full check results]<br/></samp>\n\nTo run the pre-commit checks locally, you can follow below steps:\n1. Ensure that default python is python3. In sonic-mgmt docker container, default python is python2. You can run\n the check by activating the python3 virtual environment in sonic-mgmt docker container or outside of sonic-mgmt\n docker container.\n2. Ensure that the `pre-commit` package is installed:\n```\nsudo pip install pre-commit\n```\n3. Go to repository root folder\n4. Install the pre-commit hooks:\n```\npre-commit install\n```\n5. Use pre-commit to check staged file:\n```\npre-commit\n```\n6. Alternatively, you can check committed files using:\n```\npre-commit run --from-ref <commit_id> --to-ref <commit_id>\n```"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-10T22:41:08Z",
        "comment_author": "mssonicbld",
        "comment_body": "The [pre-commit](http://pre-commit.com/) check detected issues in the files touched by this pull request.\nThe pre-commit check is a mandatory check, please fix detected issues.\n\nDetailed pre-commit check results:\n<samp>trim trailing whitespace.................................................Failed<br/>- hook id: trailing-whitespace<br/>- exit code: 1<br/>- files were modified by this hook<br/><br/>Fixing tests/smartswitch/platform_tests/test_show_platform_dpu.py<br/><br/>fix end of files.........................................................Passed<br/>check yaml...........................................(no files to check)Skipped<br/>check for added large files..............................................Passed<br/>check python ast.........................................................Passed<br/>flake8...................................................................Failed<br/>- hook id: flake8<br/>- exit code: 1<br/><br/>tests/smartswitch/platform_tests/test_show_platform_dpu.py:5:1: F401 'http.client' imported but unused<br/>tests/smartswitch/platform_tests/test_show_platform_dpu.py:9:1: F401 'redis' imported but unused<br/>tests/smartswitch/platform_tests/test_show_platform_dpu.py:11:1: F401 '.util' imported but unused<br/>tests/smartswitch/platform_tests/test_show_platform_dpu.py:13:1: F403 'from tests.smartswitch.common.platform.device_utils_dpu import *' used; unable to detect undefined names<br/>tests/smartswitch/platform_tests/test_show_platform_dpu.py:15:1: F403 'from tests.platform_tests.api.conftest import *' used; unable to detect undefined names<br/>...<br/>[truncated extra lines, please run pre-commit locally to view full check results]<br/></samp>\n\nTo run the pre-commit checks locally, you can follow below steps:\n1. Ensure that default python is python3. In sonic-mgmt docker container, default python is python2. You can run\n the check by activating the python3 virtual environment in sonic-mgmt docker container or outside of sonic-mgmt\n docker container.\n2. Ensure that the `pre-commit` package is installed:\n```\nsudo pip install pre-commit\n```\n3. Go to repository root folder\n4. Install the pre-commit hooks:\n```\npre-commit install\n```\n5. Use pre-commit to check staged file:\n```\npre-commit\n```\n6. Alternatively, you can check committed files using:\n```\npre-commit run --from-ref <commit_id> --to-ref <commit_id>\n```"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-11T00:01:52Z",
        "comment_author": "mssonicbld",
        "comment_body": "The [pre-commit](http://pre-commit.com/) check detected issues in the files touched by this pull request.\nThe pre-commit check is a mandatory check, please fix detected issues.\n\nDetailed pre-commit check results:\n<samp>trim trailing whitespace.................................................Passed<br/>fix end of files.........................................................Passed<br/>check yaml...........................................(no files to check)Skipped<br/>check for added large files..............................................Passed<br/>check python ast.........................................................Passed<br/>flake8...................................................................Failed<br/>- hook id: flake8<br/>- exit code: 1<br/><br/>tests/smartswitch/platform_tests/test_show_platform_dpu.py:139:20: E128 continuation line under-indented for visual indent<br/>tests/smartswitch/platform_tests/test_show_platform_dpu.py:140:20: E128 continuation line under-indented for visual indent<br/>tests/smartswitch/platform_tests/test_show_platform_dpu.py:186:34: E127 continuation line over-indented for visual indent<br/>tests/smartswitch/platform_tests/test_show_platform_dpu.py:194:34: E127 continuation line over-indented for visual indent<br/>tests/smartswitch/platform_tests/test_show_platform_dpu.py:223:43: E502 the backslash is redundant between brackets<br/><br/>flake8...............................................(no files to check)Skipped<br/>check conditional mark sort..........................(no files to check)Skipped<br/></samp>\n\nTo run the pre-commit checks locally, you can follow below steps:\n1. Ensure that default python is python3. In sonic-mgmt docker container, default python is python2. You can run\n the check by activating the python3 virtual environment in sonic-mgmt docker container or outside of sonic-mgmt\n docker container.\n2. Ensure that the `pre-commit` package is installed:\n```\nsudo pip install pre-commit\n```\n3. Go to repository root folder\n4. Install the pre-commit hooks:\n```\npre-commit install\n```\n5. Use pre-commit to check staged file:\n```\npre-commit\n```\n6. Alternatively, you can check committed files using:\n```\npre-commit run --from-ref <commit_id> --to-ref <commit_id>\n```"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-11T15:02:22Z",
        "comment_author": "mssonicbld",
        "comment_body": "The [pre-commit](http://pre-commit.com/) check detected issues in the files touched by this pull request.\nThe pre-commit check is a mandatory check, please fix detected issues.\n\nDetailed pre-commit check results:\n<samp>trim trailing whitespace.................................................Passed<br/>fix end of files.........................................................Passed<br/>check yaml...........................................(no files to check)Skipped<br/>check for added large files..............................................Passed<br/>check python ast.........................................................Passed<br/>flake8...................................................................Failed<br/>- hook id: flake8<br/>- exit code: 1<br/><br/>tests/smartswitch/platform_tests/test_show_platform_dpu.py:187:33: E127 continuation line over-indented for visual indent<br/>tests/smartswitch/platform_tests/test_show_platform_dpu.py:195:33: E127 continuation line over-indented for visual indent<br/><br/>flake8...............................................(no files to check)Skipped<br/>check conditional mark sort..........................(no files to check)Skipped<br/></samp>\n\nTo run the pre-commit checks locally, you can follow below steps:\n1. Ensure that default python is python3. In sonic-mgmt docker container, default python is python2. You can run\n the check by activating the python3 virtual environment in sonic-mgmt docker container or outside of sonic-mgmt\n docker container.\n2. Ensure that the `pre-commit` package is installed:\n```\nsudo pip install pre-commit\n```\n3. Go to repository root folder\n4. Install the pre-commit hooks:\n```\npre-commit install\n```\n5. Use pre-commit to check staged file:\n```\npre-commit\n```\n6. Alternatively, you can check committed files using:\n```\npre-commit run --from-ref <commit_id> --to-ref <commit_id>\n```"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-11T15:05:32Z",
        "comment_author": "mssonicbld",
        "comment_body": "The [pre-commit](http://pre-commit.com/) check detected issues in the files touched by this pull request.\nThe pre-commit check is a mandatory check, please fix detected issues.\n\nDetailed pre-commit check results:\n<samp>trim trailing whitespace.................................................Passed<br/>fix end of files.........................................................Passed<br/>check yaml...........................................(no files to check)Skipped<br/>check for added large files..............................................Passed<br/>check python ast.........................................................Passed<br/>flake8...................................................................Failed<br/>- hook id: flake8<br/>- exit code: 1<br/><br/>tests/smartswitch/platform_tests/test_show_platform_dpu.py:187:34: E127 continuation line over-indented for visual indent<br/>tests/smartswitch/platform_tests/test_show_platform_dpu.py:195:34: E127 continuation line over-indented for visual indent<br/><br/>flake8...............................................(no files to check)Skipped<br/>check conditional mark sort..........................(no files to check)Skipped<br/></samp>\n\nTo run the pre-commit checks locally, you can follow below steps:\n1. Ensure that default python is python3. In sonic-mgmt docker container, default python is python2. You can run\n the check by activating the python3 virtual environment in sonic-mgmt docker container or outside of sonic-mgmt\n docker container.\n2. Ensure that the `pre-commit` package is installed:\n```\nsudo pip install pre-commit\n```\n3. Go to repository root folder\n4. Install the pre-commit hooks:\n```\npre-commit install\n```\n5. Use pre-commit to check staged file:\n```\npre-commit\n```\n6. Alternatively, you can check committed files using:\n```\npre-commit run --from-ref <commit_id> --to-ref <commit_id>\n```"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-11T15:29:41Z",
        "comment_author": "mssonicbld",
        "comment_body": "The [pre-commit](http://pre-commit.com/) check detected issues in the files touched by this pull request.\nThe pre-commit check is a mandatory check, please fix detected issues.\n\nDetailed pre-commit check results:\n<samp>trim trailing whitespace.................................................Passed<br/>fix end of files.........................................................Passed<br/>check yaml...........................................(no files to check)Skipped<br/>check for added large files..............................................Passed<br/>check python ast.........................................................Passed<br/>flake8...................................................................Failed<br/>- hook id: flake8<br/>- exit code: 1<br/><br/>tests/smartswitch/common/device_utils_dpu.py:8:2: F405 'pytest' may be undefined, or defined from star imports: tests.common.devices.sonic<br/>tests/smartswitch/common/device_utils_dpu.py:44:37: E712 comparison to False should be 'if cond is False:' or 'if not cond:'<br/>tests/smartswitch/common/device_utils_dpu.py:45:9: F405 'pytest' may be undefined, or defined from star imports: tests.common.devices.sonic<br/>tests/smartswitch/common/device_utils_dpu.py:48:39: E712 comparison to True should be 'if cond is True:' or 'if cond:'<br/>tests/smartswitch/common/device_utils_dpu.py:49:13: F405 'pytest' may be undefined, or defined from star imports: tests.common.devices.sonic<br/><br/>flake8...............................................(no files to check)Skipped<br/>check conditional mark sort..........................(no files to check)Skipped<br/></samp>\n\nTo run the pre-commit checks locally, you can follow below steps:\n1. Ensure that default python is python3. In sonic-mgmt docker container, default python is python2. You can run\n the check by activating the python3 virtual environment in sonic-mgmt docker container or outside of sonic-mgmt\n docker container.\n2. Ensure that the `pre-commit` package is installed:\n```\nsudo pip install pre-commit\n```\n3. Go to repository root folder\n4. Install the pre-commit hooks:\n```\npre-commit install\n```\n5. Use pre-commit to check staged file:\n```\npre-commit\n```\n6. Alternatively, you can check committed files using:\n```\npre-commit run --from-ref <commit_id> --to-ref <commit_id>\n```"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-18T21:36:51Z",
        "comment_author": "mssonicbld",
        "comment_body": "The [pre-commit](http://pre-commit.com/) check detected issues in the files touched by this pull request.\nThe pre-commit check is a mandatory check, please fix detected issues.\n\nDetailed pre-commit check results:\n<samp>trim trailing whitespace.................................................Passed<br/>fix end of files.........................................................Passed<br/>check yaml...........................................(no files to check)Skipped<br/>check for added large files..............................................Passed<br/>check python ast.........................................................Failed<br/>- hook id: check-ast<br/>- exit code: 1<br/><br/>tests/smartswitch/common/device_utils_dpu.py: failed parsing with CPython 3.10.12:<br/><br/>Traceback (most recent call last):<br/>File \"/home/AzDevOps/.cache/pre-commit/repof5i3ai4y/py_env-python3/lib/python3.10/site-packages/pre_commit_hooks/check_ast.py\", line 21, in main<br/>ast.parse(f.read(), filename=filename)<br/>File \"/usr/lib/python3.10/ast.py\", line 50, in parse<br/>return compile(source, filename, mode, flags,<br/>File \"tests/smartswitch/common/device_utils_dpu.py\", line 40<br/>redis-cli -p 6379 -h 127.0.0.1 ^^^^^^^^^^^^^^^^^^^^<br/>SyntaxError: invalid syntax. Perhaps you forgot a comma?<br/>...<br/>[truncated extra lines, please run pre-commit locally to view full check results]<br/></samp>\n\nTo run the pre-commit checks locally, you can follow below steps:\n1. Ensure that default python is python3. In sonic-mgmt docker container, default python is python2. You can run\n the check by activating the python3 virtual environment in sonic-mgmt docker container or outside of sonic-mgmt\n docker container.\n2. Ensure that the `pre-commit` package is installed:\n```\nsudo pip install pre-commit\n```\n3. Go to repository root folder\n4. Install the pre-commit hooks:\n```\npre-commit install\n```\n5. Use pre-commit to check staged file:\n```\npre-commit\n```\n6. Alternatively, you can check committed files using:\n```\npre-commit run --from-ref <commit_id> --to-ref <commit_id>\n```"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-19T00:17:32Z",
        "comment_author": "mssonicbld",
        "comment_body": "The [pre-commit](http://pre-commit.com/) check detected issues in the files touched by this pull request.\nThe pre-commit check is a mandatory check, please fix detected issues.\n\nDetailed pre-commit check results:\n<samp>trim trailing whitespace.................................................Passed<br/>fix end of files.........................................................Passed<br/>check yaml...........................................(no files to check)Skipped<br/>check for added large files..............................................Passed<br/>check python ast.........................................................Failed<br/>- hook id: check-ast<br/>- exit code: 1<br/><br/>tests/smartswitch/common/device_utils_dpu.py: failed parsing with CPython 3.10.12:<br/><br/>Traceback (most recent call last):<br/>File \"/home/AzDevOps/.cache/pre-commit/repowbmvhj8h/py_env-python3/lib/python3.10/site-packages/pre_commit_hooks/check_ast.py\", line 21, in main<br/>ast.parse(f.read(), filename=filename)<br/>File \"/usr/lib/python3.10/ast.py\", line 50, in parse<br/>return compile(source, filename, mode, flags,<br/>File \"tests/smartswitch/common/device_utils_dpu.py\", line 41<br/>4 hgetall \"CHASSIS_MODULE|DPU\"\", % (index))<br/>^<br/>SyntaxError: invalid syntax<br/>...<br/>[truncated extra lines, please run pre-commit locally to view full check results]<br/></samp>\n\nTo run the pre-commit checks locally, you can follow below steps:\n1. Ensure that default python is python3. In sonic-mgmt docker container, default python is python2. You can run\n the check by activating the python3 virtual environment in sonic-mgmt docker container or outside of sonic-mgmt\n docker container.\n2. Ensure that the `pre-commit` package is installed:\n```\nsudo pip install pre-commit\n```\n3. Go to repository root folder\n4. Install the pre-commit hooks:\n```\npre-commit install\n```\n5. Use pre-commit to check staged file:\n```\npre-commit\n```\n6. Alternatively, you can check committed files using:\n```\npre-commit run --from-ref <commit_id> --to-ref <commit_id>\n```"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-19T00:30:25Z",
        "comment_author": "mssonicbld",
        "comment_body": "The [pre-commit](http://pre-commit.com/) check detected issues in the files touched by this pull request.\nThe pre-commit check is a mandatory check, please fix detected issues.\n\nDetailed pre-commit check results:\n<samp>trim trailing whitespace.................................................Passed<br/>fix end of files.........................................................Passed<br/>check yaml...........................................(no files to check)Skipped<br/>check for added large files..............................................Passed<br/>check python ast.........................................................Failed<br/>- hook id: check-ast<br/>- exit code: 1<br/><br/>tests/smartswitch/common/device_utils_dpu.py: failed parsing with CPython 3.10.12:<br/><br/>Traceback (most recent call last):<br/>File \"/home/AzDevOps/.cache/pre-commit/repowbmvhj8h/py_env-python3/lib/python3.10/site-packages/pre_commit_hooks/check_ast.py\", line 21, in main<br/>ast.parse(f.read(), filename=filename)<br/>File \"/usr/lib/python3.10/ast.py\", line 50, in parse<br/>return compile(source, filename, mode, flags,<br/>File \"tests/smartswitch/common/device_utils_dpu.py\", line 41<br/>4 hgetall \"CHASSIS_MODULE|DPU\" ', % (index))<br/>^<br/>SyntaxError: invalid syntax<br/>...<br/>[truncated extra lines, please run pre-commit locally to view full check results]<br/></samp>\n\nTo run the pre-commit checks locally, you can follow below steps:\n1. Ensure that default python is python3. In sonic-mgmt docker container, default python is python2. You can run\n the check by activating the python3 virtual environment in sonic-mgmt docker container or outside of sonic-mgmt\n docker container.\n2. Ensure that the `pre-commit` package is installed:\n```\nsudo pip install pre-commit\n```\n3. Go to repository root folder\n4. Install the pre-commit hooks:\n```\npre-commit install\n```\n5. Use pre-commit to check staged file:\n```\npre-commit\n```\n6. Alternatively, you can check committed files using:\n```\npre-commit run --from-ref <commit_id> --to-ref <commit_id>\n```"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-19T00:33:08Z",
        "comment_author": "mssonicbld",
        "comment_body": "The [pre-commit](http://pre-commit.com/) check detected issues in the files touched by this pull request.\nThe pre-commit check is a mandatory check, please fix detected issues.\n\nDetailed pre-commit check results:\n<samp>trim trailing whitespace.................................................Failed<br/>- hook id: trailing-whitespace<br/>- exit code: 1<br/>- files were modified by this hook<br/><br/>Fixing tests/smartswitch/common/device_utils_dpu.py<br/><br/>fix end of files.........................................................Passed<br/>check yaml...........................................(no files to check)Skipped<br/>check for added large files..............................................Passed<br/>check python ast.........................................................Failed<br/>- hook id: check-ast<br/>- exit code: 1<br/><br/>tests/smartswitch/common/device_utils_dpu.py: failed parsing with CPython 3.10.12:<br/><br/>Traceback (most recent call last):<br/>File \"/home/AzDevOps/.cache/pre-commit/repowbmvhj8h/py_env-python3/lib/python3.10/site-packages/pre_commit_hooks/check_ast.py\", line 21, in main<br/>ast.parse(f.read(), filename=filename)<br/>File \"/usr/lib/python3.10/ast.py\", line 50, in parse<br/>...<br/>[truncated extra lines, please run pre-commit locally to view full check results]<br/></samp>\n\nTo run the pre-commit checks locally, you can follow below steps:\n1. Ensure that default python is python3. In sonic-mgmt docker container, default python is python2. You can run\n the check by activating the python3 virtual environment in sonic-mgmt docker container or outside of sonic-mgmt\n docker container.\n2. Ensure that the `pre-commit` package is installed:\n```\nsudo pip install pre-commit\n```\n3. Go to repository root folder\n4. Install the pre-commit hooks:\n```\npre-commit install\n```\n5. Use pre-commit to check staged file:\n```\npre-commit\n```\n6. Alternatively, you can check committed files using:\n```\npre-commit run --from-ref <commit_id> --to-ref <commit_id>\n```"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-19T00:38:37Z",
        "comment_author": "mssonicbld",
        "comment_body": "The [pre-commit](http://pre-commit.com/) check detected issues in the files touched by this pull request.\nThe pre-commit check is a mandatory check, please fix detected issues.\n\nDetailed pre-commit check results:\n<samp>trim trailing whitespace.................................................Passed<br/>fix end of files.........................................................Passed<br/>check yaml...........................................(no files to check)Skipped<br/>check for added large files..............................................Passed<br/>check python ast.........................................................Failed<br/>- hook id: check-ast<br/>- exit code: 1<br/><br/>tests/smartswitch/common/device_utils_dpu.py: failed parsing with CPython 3.10.12:<br/><br/>Traceback (most recent call last):<br/>File \"/home/AzDevOps/.cache/pre-commit/repowbmvhj8h/py_env-python3/lib/python3.10/site-packages/pre_commit_hooks/check_ast.py\", line 21, in main<br/>ast.parse(f.read(), filename=filename)<br/>File \"/usr/lib/python3.10/ast.py\", line 50, in parse<br/>return compile(source, filename, mode, flags,<br/>File \"tests/smartswitch/common/device_utils_dpu.py\", line 40<br/>'redis-cli -p 6379 -h 127.0.0.1 -n 4<br/>^<br/>SyntaxError: unterminated string literal (detected at line 40)<br/>...<br/>[truncated extra lines, please run pre-commit locally to view full check results]<br/></samp>\n\nTo run the pre-commit checks locally, you can follow below steps:\n1. Ensure that default python is python3. In sonic-mgmt docker container, default python is python2. You can run\n the check by activating the python3 virtual environment in sonic-mgmt docker container or outside of sonic-mgmt\n docker container.\n2. Ensure that the `pre-commit` package is installed:\n```\nsudo pip install pre-commit\n```\n3. Go to repository root folder\n4. Install the pre-commit hooks:\n```\npre-commit install\n```\n5. Use pre-commit to check staged file:\n```\npre-commit\n```\n6. Alternatively, you can check committed files using:\n```\npre-commit run --from-ref <commit_id> --to-ref <commit_id>\n```"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-19T00:48:00Z",
        "comment_author": "mssonicbld",
        "comment_body": "The [pre-commit](http://pre-commit.com/) check detected issues in the files touched by this pull request.\nThe pre-commit check is a mandatory check, please fix detected issues.\n\nDetailed pre-commit check results:\n<samp>trim trailing whitespace.................................................Passed<br/>fix end of files.........................................................Passed<br/>check yaml...........................................(no files to check)Skipped<br/>check for added large files..............................................Passed<br/>check python ast.........................................................Failed<br/>- hook id: check-ast<br/>- exit code: 1<br/><br/>tests/smartswitch/common/device_utils_dpu.py: failed parsing with CPython 3.10.12:<br/><br/>Traceback (most recent call last):<br/>File \"/home/AzDevOps/.cache/pre-commit/repo8xuum28y/py_env-python3/lib/python3.10/site-packages/pre_commit_hooks/check_ast.py\", line 21, in main<br/>ast.parse(f.read(), filename=filename)<br/>File \"/usr/lib/python3.10/ast.py\", line 50, in parse<br/>return compile(source, filename, mode, flags,<br/>File \"tests/smartswitch/common/device_utils_dpu.py\", line 40<br/>\"redis-cli -p 6379 -h 127.0.0.1 -n 4<br/>^<br/>SyntaxError: unterminated string literal (detected at line 40)<br/>...<br/>[truncated extra lines, please run pre-commit locally to view full check results]<br/></samp>\n\nTo run the pre-commit checks locally, you can follow below steps:\n1. Ensure that default python is python3. In sonic-mgmt docker container, default python is python2. You can run\n the check by activating the python3 virtual environment in sonic-mgmt docker container or outside of sonic-mgmt\n docker container.\n2. Ensure that the `pre-commit` package is installed:\n```\nsudo pip install pre-commit\n```\n3. Go to repository root folder\n4. Install the pre-commit hooks:\n```\npre-commit install\n```\n5. Use pre-commit to check staged file:\n```\npre-commit\n```\n6. Alternatively, you can check committed files using:\n```\npre-commit run --from-ref <commit_id> --to-ref <commit_id>\n```"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-19T00:51:38Z",
        "comment_author": "mssonicbld",
        "comment_body": "The [pre-commit](http://pre-commit.com/) check detected issues in the files touched by this pull request.\nThe pre-commit check is a mandatory check, please fix detected issues.\n\nDetailed pre-commit check results:\n<samp>trim trailing whitespace.................................................Passed<br/>fix end of files.........................................................Passed<br/>check yaml...........................................(no files to check)Skipped<br/>check for added large files..............................................Passed<br/>check python ast.........................................................Failed<br/>- hook id: check-ast<br/>- exit code: 1<br/><br/>tests/smartswitch/common/device_utils_dpu.py: failed parsing with CPython 3.10.12:<br/><br/>Traceback (most recent call last):<br/>File \"/home/AzDevOps/.cache/pre-commit/repoii6n31lu/py_env-python3/lib/python3.10/site-packages/pre_commit_hooks/check_ast.py\", line 21, in main<br/>ast.parse(f.read(), filename=filename)<br/>File \"/usr/lib/python3.10/ast.py\", line 50, in parse<br/>return compile(source, filename, mode, flags,<br/>File \"tests/smartswitch/common/device_utils_dpu.py\", line 41<br/>hgetall \"CHASSIS_MODULE|DPU\"\", % (index))<br/>^<br/>SyntaxError: invalid syntax<br/>...<br/>[truncated extra lines, please run pre-commit locally to view full check results]<br/></samp>\n\nTo run the pre-commit checks locally, you can follow below steps:\n1. Ensure that default python is python3. In sonic-mgmt docker container, default python is python2. You can run\n the check by activating the python3 virtual environment in sonic-mgmt docker container or outside of sonic-mgmt\n docker container.\n2. Ensure that the `pre-commit` package is installed:\n```\nsudo pip install pre-commit\n```\n3. Go to repository root folder\n4. Install the pre-commit hooks:\n```\npre-commit install\n```\n5. Use pre-commit to check staged file:\n```\npre-commit\n```\n6. Alternatively, you can check committed files using:\n```\npre-commit run --from-ref <commit_id> --to-ref <commit_id>\n```"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-19T01:35:52Z",
        "comment_author": "mssonicbld",
        "comment_body": "The [pre-commit](http://pre-commit.com/) check detected issues in the files touched by this pull request.\nThe pre-commit check is a mandatory check, please fix detected issues.\n\nDetailed pre-commit check results:\n<samp>trim trailing whitespace.................................................Passed<br/>fix end of files.........................................................Passed<br/>check yaml...........................................(no files to check)Skipped<br/>check for added large files..............................................Passed<br/>check python ast.........................................................Failed<br/>- hook id: check-ast<br/>- exit code: 1<br/><br/>tests/smartswitch/common/device_utils_dpu.py: failed parsing with CPython 3.10.12:<br/><br/>Traceback (most recent call last):<br/>File \"/home/AzDevOps/.cache/pre-commit/repophtj5oib/py_env-python3/lib/python3.10/site-packages/pre_commit_hooks/check_ast.py\", line 21, in main<br/>ast.parse(f.read(), filename=filename)<br/>File \"/usr/lib/python3.10/ast.py\", line 50, in parse<br/>return compile(source, filename, mode, flags,<br/>File \"tests/smartswitch/common/device_utils_dpu.py\", line 41<br/>4 hgetall \"CHASSIS_MODULE|DPU\"\", % (index))<br/>^<br/>SyntaxError: invalid syntax<br/>...<br/>[truncated extra lines, please run pre-commit locally to view full check results]<br/></samp>\n\nTo run the pre-commit checks locally, you can follow below steps:\n1. Ensure that default python is python3. In sonic-mgmt docker container, default python is python2. You can run\n the check by activating the python3 virtual environment in sonic-mgmt docker container or outside of sonic-mgmt\n docker container.\n2. Ensure that the `pre-commit` package is installed:\n```\nsudo pip install pre-commit\n```\n3. Go to repository root folder\n4. Install the pre-commit hooks:\n```\npre-commit install\n```\n5. Use pre-commit to check staged file:\n```\npre-commit\n```\n6. Alternatively, you can check committed files using:\n```\npre-commit run --from-ref <commit_id> --to-ref <commit_id>\n```"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-19T03:58:14Z",
        "comment_author": "mssonicbld",
        "comment_body": "The [pre-commit](http://pre-commit.com/) check detected issues in the files touched by this pull request.\nThe pre-commit check is a mandatory check, please fix detected issues.\n\nDetailed pre-commit check results:\n<samp>trim trailing whitespace.................................................Passed<br/>fix end of files.........................................................Passed<br/>check yaml...........................................(no files to check)Skipped<br/>check for added large files..............................................Passed<br/>check python ast.........................................................Failed<br/>- hook id: check-ast<br/>- exit code: 1<br/><br/>tests/smartswitch/common/device_utils_dpu.py: failed parsing with CPython 3.10.12:<br/><br/>Traceback (most recent call last):<br/>File \"/home/AzDevOps/.cache/pre-commit/repo654zphdh/py_env-python3/lib/python3.10/site-packages/pre_commit_hooks/check_ast.py\", line 21, in main<br/>ast.parse(f.read(), filename=filename)<br/>File \"/usr/lib/python3.10/ast.py\", line 50, in parse<br/>return compile(source, filename, mode, flags,<br/>File \"tests/smartswitch/common/device_utils_dpu.py\", line 41<br/>4 hgetall \"CHASSIS_MODULE|DPU\"', % (index))<br/>^<br/>SyntaxError: invalid syntax<br/>...<br/>[truncated extra lines, please run pre-commit locally to view full check results]<br/></samp>\n\nTo run the pre-commit checks locally, you can follow below steps:\n1. Ensure that default python is python3. In sonic-mgmt docker container, default python is python2. You can run\n the check by activating the python3 virtual environment in sonic-mgmt docker container or outside of sonic-mgmt\n docker container.\n2. Ensure that the `pre-commit` package is installed:\n```\nsudo pip install pre-commit\n```\n3. Go to repository root folder\n4. Install the pre-commit hooks:\n```\npre-commit install\n```\n5. Use pre-commit to check staged file:\n```\npre-commit\n```\n6. Alternatively, you can check committed files using:\n```\npre-commit run --from-ref <commit_id> --to-ref <commit_id>\n```"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-19T04:03:44Z",
        "comment_author": "mssonicbld",
        "comment_body": "The [pre-commit](http://pre-commit.com/) check detected issues in the files touched by this pull request.\nThe pre-commit check is a mandatory check, please fix detected issues.\n\nDetailed pre-commit check results:\n<samp>trim trailing whitespace.................................................Passed<br/>fix end of files.........................................................Passed<br/>check yaml...........................................(no files to check)Skipped<br/>check for added large files..............................................Passed<br/>check python ast.........................................................Passed<br/>flake8...................................................................Failed<br/>- hook id: flake8<br/>- exit code: 1<br/><br/>tests/smartswitch/common/device_utils_dpu.py:30:9: F405 'dpu_power_on' may be undefined, or defined from star imports: tests.common.devices.sonic, tests.platform_tests.api.conftest<br/>tests/smartswitch/common/device_utils_dpu.py:35:23: F405 'chassis' may be undefined, or defined from star imports: tests.common.devices.sonic, tests.platform_tests.api.conftest<br/>tests/smartswitch/common/device_utils_dpu.py:39:15: F405 'module' may be undefined, or defined from star imports: tests.common.devices.sonic, tests.platform_tests.api.conftest<br/>tests/smartswitch/common/device_utils_dpu.py:44:14: E111 indentation is not a multiple of 4<br/>tests/smartswitch/common/device_utils_dpu.py:44:14: E117 over-indented<br/>tests/smartswitch/common/device_utils_dpu.py:47:13: E117 over-indented<br/>tests/smartswitch/common/device_utils_dpu.py:59:23: F405 'chassis' may be undefined, or defined from star imports: tests.common.devices.sonic, tests.platform_tests.api.conftest<br/>tests/smartswitch/common/device_utils_dpu.py:63:15: F405 'module' may be undefined, or defined from star imports: tests.common.devices.sonic, tests.platform_tests.api.conftest<br/>tests/smartswitch/common/device_utils_dpu.py:65:17: F405 'module' may be undefined, or defined from star imports: tests.common.devices.sonic, tests.platform_tests.api.conftest<br/>tests/smartswitch/common/device_utils_dpu.py:66:9: F405 'duthosts' may be undefined, or defined from star imports: tests.common.devices.sonic, tests.platform_tests.api.conftest<br/>tests/smartswitch/common/device_utils_dpu.py:67:9: F405 'time' may be undefined, or defined from star imports: tests.common.devices.sonic, tests.platform_tests.api.conftest<br/>...<br/>[truncated extra lines, please run pre-commit locally to view full check results]<br/></samp>\n\nTo run the pre-commit checks locally, you can follow below steps:\n1. Ensure that default python is python3. In sonic-mgmt docker container, default python is python2. You can run\n the check by activating the python3 virtual environment in sonic-mgmt docker container or outside of sonic-mgmt\n docker container.\n2. Ensure that the `pre-commit` package is installed:\n```\nsudo pip install pre-commit\n```\n3. Go to repository root folder\n4. Install the pre-commit hooks:\n```\npre-commit install\n```\n5. Use pre-commit to check staged file:\n```\npre-commit\n```\n6. Alternatively, you can check committed files using:\n```\npre-commit run --from-ref <commit_id> --to-ref <commit_id>\n```"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-21T04:36:03Z",
        "comment_author": "mssonicbld",
        "comment_body": "The [pre-commit](http://pre-commit.com/) check detected issues in the files touched by this pull request.\nThe pre-commit check is a mandatory check, please fix detected issues.\n\nDetailed pre-commit check results:\n<samp>trim trailing whitespace.................................................Passed<br/>fix end of files.........................................................Passed<br/>check yaml...........................................(no files to check)Skipped<br/>check for added large files..............................................Passed<br/>check python ast.........................................................Failed<br/>- hook id: check-ast<br/>- exit code: 1<br/><br/>tests/smartswitch/common/device_utils_dpu.py: failed parsing with CPython 3.10.12:<br/><br/>Traceback (most recent call last):<br/>File \"/home/AzDevOps/.cache/pre-commit/repobhek518v/py_env-python3/lib/python3.10/site-packages/pre_commit_hooks/check_ast.py\", line 21, in main<br/>ast.parse(f.read(), filename=filename)<br/>File \"/usr/lib/python3.10/ast.py\", line 50, in parse<br/>return compile(source, filename, mode, flags,<br/>File \"tests/smartswitch/common/device_utils_dpu.py\", line 28<br/>pytest.skip(\"Test is not supported for this testbed and<br/>^<br/>SyntaxError: unterminated string literal (detected at line 28)<br/>...<br/>[truncated extra lines, please run pre-commit locally to view full check results]<br/></samp>\n\nTo run the pre-commit checks locally, you can follow below steps:\n1. Ensure that default python is python3. In sonic-mgmt docker container, default python is python2. You can run\n the check by activating the python3 virtual environment in sonic-mgmt docker container or outside of sonic-mgmt\n docker container.\n2. Ensure that the `pre-commit` package is installed:\n```\nsudo pip install pre-commit\n```\n3. Go to repository root folder\n4. Install the pre-commit hooks:\n```\npre-commit install\n```\n5. Use pre-commit to check staged file:\n```\npre-commit\n```\n6. Alternatively, you can check committed files using:\n```\npre-commit run --from-ref <commit_id> --to-ref <commit_id>\n```"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-25T18:54:26Z",
        "comment_author": "mssonicbld",
        "comment_body": "The [pre-commit](http://pre-commit.com/) check detected issues in the files touched by this pull request.\nThe pre-commit check is a mandatory check, please fix detected issues.\n\nDetailed pre-commit check results:\n<samp>trim trailing whitespace.................................................Passed<br/>fix end of files.........................................................Passed<br/>check yaml...........................................(no files to check)Skipped<br/>check for added large files..............................................Passed<br/>check python ast.........................................................Passed<br/>flake8...................................................................Failed<br/>- hook id: flake8<br/>- exit code: 1<br/><br/>tests/smartswitch/platform_tests/test_reload_dpu.py:16:1: F401 'tests.common.helpers.platform_api.chassis' imported but unused<br/>tests/smartswitch/platform_tests/test_reload_dpu.py:31:19: F405 'num_dpu_modules' may be undefined, or defined from star imports: tests.platform_tests.api.conftest, tests.smartswitch.common.platform.device_utils_dpu<br/>tests/smartswitch/platform_tests/test_reload_dpu.py:60:19: F405 'num_dpu_modules' may be undefined, or defined from star imports: tests.platform_tests.api.conftest, tests.smartswitch.common.platform.device_utils_dpu<br/>tests/smartswitch/platform_tests/test_show_platform_dpu.py:11:1: F401 'tests.common.helpers.platform_api.chassis' imported but unused<br/>tests/smartswitch/platform_tests/test_show_platform_dpu.py:129:19: F405 'num_dpu_modules' may be undefined, or defined from star imports: tests.common.devices.sonic, tests.platform_tests.api.conftest, tests.smartswitch.common.platform.device_utils_dpu<br/>tests/smartswitch/platform_tests/test_show_platform_dpu.py:154:19: F405 'num_dpu_modules' may be undefined, or defined from star imports: tests.common.devices.sonic, tests.platform_tests.api.conftest, tests.smartswitch.common.platform.device_utils_dpu<br/>tests/smartswitch/platform_tests/test_show_platform_dpu.py:190:19: F405 'num_dpu_modules' may be undefined, or defined from star imports: tests.common.devices.sonic, tests.platform_tests.api.conftest, tests.smartswitch.common.platform.device_utils_dpu<br/><br/>flake8...............................................(no files to check)Skipped<br/>check conditional mark sort..........................(no files to check)Skipped<br/></samp>\n\nTo run the pre-commit checks locally, you can follow below steps:\n1. Ensure that default python is python3. In sonic-mgmt docker container, default python is python2. You can run\n the check by activating the python3 virtual environment in sonic-mgmt docker container or outside of sonic-mgmt\n docker container.\n2. Ensure that the `pre-commit` package is installed:\n```\nsudo pip install pre-commit\n```\n3. Go to repository root folder\n4. Install the pre-commit hooks:\n```\npre-commit install\n```\n5. Use pre-commit to check staged file:\n```\npre-commit\n```\n6. Alternatively, you can check committed files using:\n```\npre-commit run --from-ref <commit_id> --to-ref <commit_id>\n```"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-25T20:25:15Z",
        "comment_author": "mssonicbld",
        "comment_body": "The [pre-commit](http://pre-commit.com/) check detected issues in the files touched by this pull request.\nThe pre-commit check is a mandatory check, please fix detected issues.\n\nDetailed pre-commit check results:\n<samp>trim trailing whitespace.................................................Passed<br/>fix end of files.........................................................Passed<br/>check yaml...........................................(no files to check)Skipped<br/>check for added large files..............................................Passed<br/>check python ast.........................................................Passed<br/>flake8...................................................................Failed<br/>- hook id: flake8<br/>- exit code: 1<br/><br/>tests/smartswitch/platform_tests/test_show_platform_dpu.py:12:1: F401 'tests.platform_tests.api.conftest.*' imported but unused<br/><br/>flake8...............................................(no files to check)Skipped<br/>check conditional mark sort..........................(no files to check)Skipped<br/></samp>\n\nTo run the pre-commit checks locally, you can follow below steps:\n1. Ensure that default python is python3. In sonic-mgmt docker container, default python is python2. You can run\n the check by activating the python3 virtual environment in sonic-mgmt docker container or outside of sonic-mgmt\n docker container.\n2. Ensure that the `pre-commit` package is installed:\n```\nsudo pip install pre-commit\n```\n3. Go to repository root folder\n4. Install the pre-commit hooks:\n```\npre-commit install\n```\n5. Use pre-commit to check staged file:\n```\npre-commit\n```\n6. Alternatively, you can check committed files using:\n```\npre-commit run --from-ref <commit_id> --to-ref <commit_id>\n```"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-01T22:01:41Z",
        "comment_author": "mssonicbld",
        "comment_body": "The [pre-commit](http://pre-commit.com/) check detected issues in the files touched by this pull request.\nThe pre-commit check is a mandatory check, please fix detected issues.\n\nDetailed pre-commit check results:\n<samp>trim trailing whitespace.................................................Passed<br/>fix end of files.........................................................Failed<br/>- hook id: end-of-file-fixer<br/>- exit code: 1<br/>- files were modified by this hook<br/><br/>Fixing tests/smartswitch/common/device_utils_dpu.py<br/><br/>check yaml...........................................(no files to check)Skipped<br/>check for added large files..............................................Passed<br/>check python ast.........................................................Passed<br/>flake8...................................................................Failed<br/>- hook id: flake8<br/>- exit code: 1<br/><br/>tests/smartswitch/platform_tests/test_show_platform_dpu.py:7:1: F401 'time' imported but unused<br/><br/>flake8...............................................(no files to check)Skipped<br/>check conditional mark sort..........................(no files to check)Skipped<br/></samp>\n\nTo run the pre-commit checks locally, you can follow below steps:\n1. Ensure that default python is python3. In sonic-mgmt docker container, default python is python2. You can run\n the check by activating the python3 virtual environment in sonic-mgmt docker container or outside of sonic-mgmt\n docker container.\n2. Ensure that the `pre-commit` package is installed:\n```\nsudo pip install pre-commit\n```\n3. Go to repository root folder\n4. Install the pre-commit hooks:\n```\npre-commit install\n```\n5. Use pre-commit to check staged file:\n```\npre-commit\n```\n6. Alternatively, you can check committed files using:\n```\npre-commit run --from-ref <commit_id> --to-ref <commit_id>\n```"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-01T22:11:07Z",
        "comment_author": "mssonicbld",
        "comment_body": "The [pre-commit](http://pre-commit.com/) check detected issues in the files touched by this pull request.\nThe pre-commit check is a mandatory check, please fix detected issues.\n\nDetailed pre-commit check results:\n<samp>trim trailing whitespace.................................................Passed<br/>fix end of files.........................................................Failed<br/>- hook id: end-of-file-fixer<br/>- exit code: 1<br/>- files were modified by this hook<br/><br/>Fixing tests/smartswitch/common/device_utils_dpu.py<br/><br/>check yaml...........................................(no files to check)Skipped<br/>check for added large files..............................................Passed<br/>check python ast.........................................................Passed<br/>flake8...................................................................Passed<br/>flake8...............................................(no files to check)Skipped<br/>check conditional mark sort..........................(no files to check)Skipped<br/></samp>\n\nTo run the pre-commit checks locally, you can follow below steps:\n1. Ensure that default python is python3. In sonic-mgmt docker container, default python is python2. You can run\n the check by activating the python3 virtual environment in sonic-mgmt docker container or outside of sonic-mgmt\n docker container.\n2. Ensure that the `pre-commit` package is installed:\n```\nsudo pip install pre-commit\n```\n3. Go to repository root folder\n4. Install the pre-commit hooks:\n```\npre-commit install\n```\n5. Use pre-commit to check staged file:\n```\npre-commit\n```\n6. Alternatively, you can check committed files using:\n```\npre-commit run --from-ref <commit_id> --to-ref <commit_id>\n```"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-04T18:46:37Z",
        "comment_author": "KrisNey-MSFT",
        "comment_body": "@vvolam for review"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-09T16:01:49Z",
        "comment_author": "vvolam",
        "comment_body": "/azpw run"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-09T16:28:13Z",
        "comment_author": "nissampa",
        "comment_body": "/azpw run"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-09T16:28:15Z",
        "comment_author": "mssonicbld",
        "comment_body": "/AzurePipelines run"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-09T16:28:27Z",
        "comment_author": "azure-pipelines",
        "comment_body": "<samp>\nAzure Pipelines successfully started running 1 pipeline(s).<br>\r\n\n</samp>"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-10T16:55:58Z",
        "comment_author": "nissampa",
        "comment_body": "@vvolam and @prgeor,\r\n\r\nAll PR checker passed and comments are addressed. \r\nCan we close on this ?"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-10T20:03:02Z",
        "comment_author": "vvolam",
        "comment_body": "> @vvolam and @prgeor,\r\n> \r\n> All PR checker passed and comments are addressed. Can we close on this ?\r\n\r\n@nissampa I have approved the PR as it looks good to me."
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-17T18:44:25Z",
        "comment_author": "nissampa",
        "comment_body": "/AzurePipelines run"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-17T18:44:31Z",
        "comment_author": "azure-pipelines",
        "comment_body": "<samp>\nCommenter does not have sufficient privileges for PR 14152 in repo sonic-net/sonic-mgmt<br>\r\n\n</samp>"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-17T18:45:00Z",
        "comment_author": "nissampa",
        "comment_body": "/azpw run"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-17T18:45:03Z",
        "comment_author": "mssonicbld",
        "comment_body": "/AzurePipelines run"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-17T18:45:15Z",
        "comment_author": "azure-pipelines",
        "comment_body": "<samp>\nAzure Pipelines successfully started running 1 pipeline(s).<br>\r\n\n</samp>"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-08-26T22:22:37Z",
        "review_author": "vvolam"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-08-30T04:08:49Z",
        "review_author": "congh-nvidia"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-08-30T04:09:08Z",
        "review_author": "r12f"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-08-30T04:10:20Z",
        "review_author": "congh-nvidia"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-08-30T04:30:33Z",
        "review_author": "congh-nvidia"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-08-30T04:33:14Z",
        "review_author": "congh-nvidia"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-08-30T04:39:08Z",
        "review_author": "congh-nvidia"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-08-30T04:41:30Z",
        "review_author": "congh-nvidia"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-08-30T04:42:08Z",
        "review_author": "congh-nvidia"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-08-30T04:45:19Z",
        "review_author": "congh-nvidia"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-08-30T04:45:41Z",
        "review_author": "congh-nvidia"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-08-30T04:50:28Z",
        "review_author": "congh-nvidia"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-08-30T06:05:44Z",
        "review_author": "congh-nvidia"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-08-30T08:45:09Z",
        "review_author": "congh-nvidia"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-08-30T09:03:25Z",
        "review_author": "congh-nvidia"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-08-30T09:10:21Z",
        "review_author": "congh-nvidia"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-08-30T09:11:13Z",
        "review_author": "congh-nvidia"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-08-30T09:17:40Z",
        "review_author": "congh-nvidia"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-08-30T09:20:13Z",
        "review_author": "congh-nvidia"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-08-30T09:24:24Z",
        "review_author": "congh-nvidia"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-08-30T09:30:27Z",
        "review_author": "congh-nvidia"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-08-30T09:35:40Z",
        "review_author": "congh-nvidia"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-08-30T09:36:18Z",
        "review_author": "congh-nvidia"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-08-30T09:39:45Z",
        "review_author": "congh-nvidia"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-08-30T09:42:16Z",
        "review_author": "congh-nvidia"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-03T20:51:37Z",
        "review_author": "nissampa"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-03T20:55:14Z",
        "review_author": "nissampa"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-03T20:56:26Z",
        "review_author": "nissampa"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-03T23:22:10Z",
        "review_author": "nissampa"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-03T23:22:22Z",
        "review_author": "nissampa"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-04T17:48:41Z",
        "review_author": "nissampa"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-04T17:57:09Z",
        "review_author": "nissampa"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-04T18:01:49Z",
        "review_author": "nissampa"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-04T18:14:00Z",
        "review_author": "vvolam"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-04T18:50:14Z",
        "review_author": "vvolam"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-05T00:05:38Z",
        "review_author": "nissampa"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-05T00:07:46Z",
        "review_author": "nissampa"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-05T00:08:19Z",
        "review_author": "nissampa"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-05T00:08:48Z",
        "review_author": "nissampa"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-05T00:10:17Z",
        "review_author": "nissampa"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-05T01:08:07Z",
        "review_author": "vvolam"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-05T17:55:44Z",
        "review_author": "nissampa"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-05T17:55:59Z",
        "review_author": "nissampa"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-06T17:34:11Z",
        "review_author": "nissampa"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-06T17:36:06Z",
        "review_author": "nissampa"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-06T17:43:15Z",
        "review_author": "nissampa"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-06T17:45:44Z",
        "review_author": "nissampa"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-06T18:19:41Z",
        "review_author": "nissampa"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-06T22:25:40Z",
        "review_author": "nissampa"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-06T22:29:45Z",
        "review_author": "nissampa"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-06T22:37:44Z",
        "review_author": "nissampa"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-06T22:38:38Z",
        "review_author": "nissampa"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-09T22:42:54Z",
        "review_author": "nissampa"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-09T22:48:51Z",
        "review_author": "nissampa"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-09T22:51:19Z",
        "review_author": "nissampa"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-09T23:02:52Z",
        "review_author": "nissampa"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-09T23:39:18Z",
        "review_author": "nissampa"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-10T18:28:56Z",
        "review_author": "nissampa"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-10T19:34:36Z",
        "review_author": "nissampa"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-10T20:41:01Z",
        "review_author": "nissampa"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-25T18:54:19Z",
        "review_author": "nissampa"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-27T19:38:37Z",
        "review_author": "vvolam"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-01T21:59:17Z",
        "review_author": "nissampa"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-01T22:02:22Z",
        "review_author": "nissampa"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-02T04:39:06Z",
        "review_author": "congh-nvidia"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-07T16:55:20Z",
        "review_author": "prgeor"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-07T16:57:25Z",
        "review_author": "vvolam"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-07T17:05:16Z",
        "review_author": "vvolam"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-07T18:07:50Z",
        "review_author": "vvolam"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-07T18:36:42Z",
        "review_author": "vvolam"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-07T18:48:54Z",
        "review_author": "nissampa"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-07T18:49:21Z",
        "review_author": "nissampa"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-07T18:49:31Z",
        "review_author": "nissampa"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-07T20:06:57Z",
        "review_author": "nissampa"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-07T20:10:52Z",
        "review_author": "nissampa"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-07T20:13:14Z",
        "review_author": "nissampa"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-07T20:25:06Z",
        "review_author": "nissampa"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-07T20:29:40Z",
        "review_author": "nissampa"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-07T20:30:35Z",
        "review_author": "nissampa"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-07T20:46:42Z",
        "review_author": "nissampa"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-08T19:48:50Z",
        "review_author": "vvolam"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-08T19:50:15Z",
        "review_author": "vvolam"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-08T19:51:31Z",
        "review_author": "vvolam"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-08T21:05:32Z",
        "review_author": "nissampa"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-08T21:05:47Z",
        "review_author": "nissampa"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-08T21:28:37Z",
        "review_author": "vvolam"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-17T22:26:28Z",
        "review_author": "bpar9"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-17T22:26:28Z",
        "latestReview_author": "bpar9",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-02T04:39:06Z",
        "latestReview_author": "congh-nvidia",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14152,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-08T21:28:37Z",
        "latestReview_author": "vvolam",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14065,
        "repo": "sonic-mgmt",
        "comment_at": "2024-08-14T03:14:06Z",
        "comment_author": "echuawu",
        "comment_body": "/azpw run\r\n"
    },
    {
        "number": 14065,
        "repo": "sonic-mgmt",
        "comment_at": "2024-08-14T03:14:09Z",
        "comment_author": "mssonicbld",
        "comment_body": "/AzurePipelines run"
    },
    {
        "number": 14065,
        "repo": "sonic-mgmt",
        "comment_at": "2024-08-14T03:14:20Z",
        "comment_author": "azure-pipelines",
        "comment_body": "<samp>\nAzure Pipelines successfully started running 1 pipeline(s).<br>\r\n\n</samp>"
    },
    {
        "number": 14065,
        "repo": "sonic-mgmt",
        "comment_at": "2024-08-21T02:50:23Z",
        "comment_author": "echuawu",
        "comment_body": " /azpw run"
    },
    {
        "number": 14065,
        "repo": "sonic-mgmt",
        "comment_at": "2024-08-21T02:50:25Z",
        "comment_author": "mssonicbld",
        "comment_body": "/AzurePipelines run"
    },
    {
        "number": 14065,
        "repo": "sonic-mgmt",
        "comment_at": "2024-08-21T02:50:36Z",
        "comment_author": "azure-pipelines",
        "comment_body": "<samp>\nAzure Pipelines successfully started running 1 pipeline(s).<br>\r\n\n</samp>"
    },
    {
        "number": 14065,
        "repo": "sonic-mgmt",
        "review_at": "2024-08-22T04:36:31Z",
        "review_author": "xwjiang-ms"
    },
    {
        "number": 14065,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-08T03:52:50Z",
        "review_author": "wangxin"
    },
    {
        "number": 14065,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-08T03:52:50Z",
        "latestReview_author": "wangxin",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 14065,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-08-22T04:36:31Z",
        "latestReview_author": "xwjiang-ms",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 13990,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-03T21:05:31Z",
        "comment_author": "mssonicbld",
        "comment_body": "The [pre-commit](http://pre-commit.com/) check detected issues in the files touched by this pull request.\nThe pre-commit check is a mandatory check, please fix detected issues.\n\nDetailed pre-commit check results:\n<samp>trim trailing whitespace.................................................Passed<br/>fix end of files.........................................................Passed<br/>check yaml...............................................................Passed<br/>check for added large files..............................................Passed<br/>check python ast.........................................................Passed<br/>flake8...................................................................Failed<br/>- hook id: flake8<br/>- exit code: 1<br/><br/>ansible/TestbedProcessing.py:334:21: F841 local variable 'AutoNeg' is assigned to but never used<br/><br/>flake8...............................................(no files to check)Skipped<br/>check conditional mark sort..............................................Passed<br/></samp>\n\nTo run the pre-commit checks locally, you can follow below steps:\n1. Ensure that default python is python3. In sonic-mgmt docker container, default python is python2. You can run\n the check by activating the python3 virtual environment in sonic-mgmt docker container or outside of sonic-mgmt\n docker container.\n2. Ensure that the `pre-commit` package is installed:\n```\nsudo pip install pre-commit\n```\n3. Go to repository root folder\n4. Install the pre-commit hooks:\n```\npre-commit install\n```\n5. Use pre-commit to check staged file:\n```\npre-commit\n```\n6. Alternatively, you can check committed files using:\n```\npre-commit run --from-ref <commit_id> --to-ref <commit_id>\n```"
    },
    {
        "number": 13990,
        "repo": "sonic-mgmt",
        "review_at": "2024-08-06T23:33:58Z",
        "review_author": "prgeor"
    },
    {
        "number": 13990,
        "repo": "sonic-mgmt",
        "review_at": "2024-08-22T02:15:40Z",
        "review_author": "wangxin"
    },
    {
        "number": 13990,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-09T02:08:55Z",
        "review_author": "ZhaohuiS"
    },
    {
        "number": 13990,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-09T02:09:19Z",
        "review_author": "ZhaohuiS"
    },
    {
        "number": 13990,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-10T07:22:07Z",
        "review_author": "wangxin"
    },
    {
        "number": 13990,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-11T00:40:00Z",
        "review_author": "vdahiya12"
    },
    {
        "number": 13990,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-11T00:40:11Z",
        "review_author": "vdahiya12"
    },
    {
        "number": 13990,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-11T00:40:17Z",
        "review_author": "vdahiya12"
    },
    {
        "number": 13990,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-11T00:49:33Z",
        "review_author": "prgeor"
    },
    {
        "number": 13990,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-11T00:55:33Z",
        "review_author": "prgeor"
    },
    {
        "number": 13990,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-11T00:58:29Z",
        "review_author": "prgeor"
    },
    {
        "number": 13990,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-11T00:58:55Z",
        "review_author": "prgeor"
    },
    {
        "number": 13990,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-11T21:51:11Z",
        "review_author": "vdahiya12"
    },
    {
        "number": 13990,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-20T17:53:46Z",
        "review_author": "lguohan"
    },
    {
        "number": 13990,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-23T15:13:16Z",
        "review_author": "vdahiya12"
    },
    {
        "number": 13990,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-27T22:59:20Z",
        "review_author": "vdahiya12"
    },
    {
        "number": 13990,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-27T23:00:15Z",
        "review_author": "vdahiya12"
    },
    {
        "number": 13990,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-27T23:01:56Z",
        "review_author": "vdahiya12"
    },
    {
        "number": 13990,
        "repo": "sonic-mgmt",
        "review_at": "2024-09-27T23:02:46Z",
        "review_author": "vdahiya12"
    },
    {
        "number": 13990,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-02T01:13:03Z",
        "review_author": "prgeor"
    },
    {
        "number": 13990,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-02T01:15:06Z",
        "review_author": "prgeor"
    },
    {
        "number": 13990,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-02T18:17:35Z",
        "review_author": "vdahiya12"
    },
    {
        "number": 13990,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-02T22:05:40Z",
        "review_author": "prgeor"
    },
    {
        "number": 13990,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-03T15:29:55Z",
        "review_author": "prgeor"
    },
    {
        "number": 13990,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-04T00:01:26Z",
        "review_author": "prgeor"
    },
    {
        "number": 13990,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-08T06:47:41Z",
        "review_author": "wangxin"
    },
    {
        "number": 13990,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-09-20T17:53:46Z",
        "latestReview_author": "lguohan",
        "latestReview_state": "COMMENTED"
    },
    {
        "number": 13990,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-09-09T02:09:19Z",
        "latestReview_author": "ZhaohuiS",
        "latestReview_state": "COMMENTED"
    },
    {
        "number": 13990,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-08T06:47:41Z",
        "latestReview_author": "wangxin",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 13990,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-04T00:01:26Z",
        "latestReview_author": "prgeor",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 13650,
        "repo": "sonic-mgmt",
        "comment_at": "2024-07-12T14:59:08Z",
        "comment_author": "linux-foundation-easycla",
        "comment_body": "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: okaravasi / name: Olympia Karavasili Arapogianni (84cfe6ba5795b3658ad90228a5b89cd51c47faa3, 6cf668c11e65e9a7dc5b413e3e739e1dfebcc32c, 51bbb52a026da18af3628048b7df274e519247ac)</li></ul><!-- Date Modified: 2024-10-02 16:11:58.885308 -->"
    },
    {
        "number": 13650,
        "repo": "sonic-mgmt",
        "comment_at": "2024-07-12T15:00:18Z",
        "comment_author": "mssonicbld",
        "comment_body": "The [pre-commit](http://pre-commit.com/) check detected issues in the files touched by this pull request.\nThe pre-commit check is a mandatory check, please fix detected issues.\n\nDetailed pre-commit check results:\n<samp>trim trailing whitespace.................................................Passed<br/>fix end of files.........................................................Passed<br/>check yaml...........................................(no files to check)Skipped<br/>check for added large files..............................................Passed<br/>check python ast.........................................................Passed<br/>flake8...................................................................Failed<br/>- hook id: flake8<br/>- exit code: 1<br/><br/>tests/generic_config_updater/test_ip_bgp.py:199:1: E302 expected 2 blank lines, found 1<br/><br/>flake8...............................................(no files to check)Skipped<br/>check conditional mark sort..........................(no files to check)Skipped<br/></samp>\n\nTo run the pre-commit checks locally, you can follow below steps:\n1. Ensure that default python is python3. In sonic-mgmt docker container, default python is python2. You can run\n the check by activating the python3 virtual environment in sonic-mgmt docker container or outside of sonic-mgmt\n docker container.\n2. Ensure that the `pre-commit` package is installed:\n```\nsudo pip install pre-commit\n```\n3. Go to repository root folder\n4. Install the pre-commit hooks:\n```\npre-commit install\n```\n5. Use pre-commit to check staged file:\n```\npre-commit\n```\n6. Alternatively, you can check committed files using:\n```\npre-commit run --from-ref <commit_id> --to-ref <commit_id>\n```"
    },
    {
        "number": 13650,
        "repo": "sonic-mgmt",
        "comment_at": "2024-07-15T13:11:25Z",
        "comment_author": "okaravasi",
        "comment_body": "Hello @judyjoseph @arlakshm , Could you please help on reviewing this?\r\nThank you."
    },
    {
        "number": 13650,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-01T22:19:08Z",
        "comment_author": "judyjoseph",
        "comment_body": "LGTM, @okaravasi could you resolve the conflicts. Also do add a snapshot of the test run for ipv4 and ipv6 under the section \"How did you verify/test it?\""
    },
    {
        "number": 13650,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-02T16:39:34Z",
        "comment_author": "okaravasi",
        "comment_body": "> LGTM, @okaravasi could you resolve the conflicts. Also do add a snapshot of the test run for ipv4 and ipv6 under the section \"How did you verify/test it?\"\r\n\r\nDone: Updated the branch and included screenshot from kvm-t0 run in the description."
    },
    {
        "number": 13650,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-07T20:37:14Z",
        "comment_author": "judyjoseph",
        "comment_body": "@okaravasi Arvind had a comment earlier -- that we need to add support for multi-asic as well. Do you plan to do it in this PR ?"
    },
    {
        "number": 13650,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-08T19:47:15Z",
        "comment_author": "okaravasi",
        "comment_body": "> ad a comment earlier -- that we need to add support for multi-asic as well. Do you plan to do it in this PR ?\r\n\r\n@judyjoseph Support to multi-asic will be handled by different PRs. \r\n1) Adding support to existing test scope shall be handled via : https://github.com/sonic-net/sonic-mgmt/pull/14070\r\n2) Adding new test for t2/chassis GCU shall be handled via separate ticket: https://github.com/sonic-net/sonic-mgmt/pull/14887. I will comment soon when it is opened as non-draft."
    },
    {
        "number": 13650,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-02T16:47:14Z",
        "review_author": "judyjoseph"
    },
    {
        "number": 13650,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-02T16:47:14Z",
        "latestReview_author": "judyjoseph",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 13569,
        "repo": "sonic-mgmt",
        "comment_at": "2024-07-04T18:17:15Z",
        "comment_author": "mssonicbld",
        "comment_body": "The [pre-commit](http://pre-commit.com/) check detected issues in the files touched by this pull request.\nThe pre-commit check is a mandatory check, please fix detected issues.\n\nDetailed pre-commit check results:\n<samp>trim trailing whitespace.................................................Passed<br/>fix end of files.........................................................Passed<br/>check yaml...............................................................Passed<br/>check for added large files..............................................Passed<br/>check python ast.........................................................Passed<br/>flake8...................................................................Failed<br/>- hook id: flake8<br/>- exit code: 1<br/><br/>ansible/module_utils/port_utils.py:246:14: E127 continuation line over-indented for visual indent<br/>ansible/module_utils/port_utils.py:247:14: E127 continuation line over-indented for visual indent<br/>ansible/module_utils/port_utils.py:248:14: E127 continuation line over-indented for visual indent<br/>ansible/module_utils/port_utils.py:249:14: E127 continuation line over-indented for visual indent<br/>ansible/module_utils/port_utils.py:250:14: E127 continuation line over-indented for visual indent<br/>ansible/module_utils/port_utils.py:254:63: E201 whitespace after '('<br/><br/>flake8...............................................(no files to check)Skipped<br/>check conditional mark sort..............................................Passed<br/></samp>\n\nTo run the pre-commit checks locally, you can follow below steps:\n1. Ensure that default python is python3. In sonic-mgmt docker container, default python is python2. You can run\n the check by activating the python3 virtual environment in sonic-mgmt docker container or outside of sonic-mgmt\n docker container.\n2. Ensure that the `pre-commit` package is installed:\n```\nsudo pip install pre-commit\n```\n3. Go to repository root folder\n4. Install the pre-commit hooks:\n```\npre-commit install\n```\n5. Use pre-commit to check staged file:\n```\npre-commit\n```\n6. Alternatively, you can check committed files using:\n```\npre-commit run --from-ref <commit_id> --to-ref <commit_id>\n```"
    },
    {
        "number": 13569,
        "repo": "sonic-mgmt",
        "comment_at": "2024-07-05T00:53:59Z",
        "comment_author": "wsycqyz",
        "comment_body": "The pre-commit check is a mandatory. Please help fix it."
    },
    {
        "number": 13569,
        "repo": "sonic-mgmt",
        "comment_at": "2024-07-05T17:45:57Z",
        "comment_author": "linux-foundation-easycla",
        "comment_body": "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: arista-hpandya / name: HP (b05da9bd9f3dfee49ddc083143ac63abd13307ad, 73b3d4518790bb6987bec80b6c0848b3dccf46e4)</li><li>:white_check_mark: login: ysmanman / name: Song Yuan (b72f783a9236190a755c2b18b8d75b8c395726da)</li></ul><!-- Date Modified: 2024-10-02 17:11:58.242292 -->"
    },
    {
        "number": 13569,
        "repo": "sonic-mgmt",
        "comment_at": "2024-07-08T21:24:44Z",
        "comment_author": "kenneth-arista",
        "comment_body": "@arlakshm fyi"
    },
    {
        "number": 13569,
        "repo": "sonic-mgmt",
        "comment_at": "2024-07-15T16:33:57Z",
        "comment_author": "arista-hpandya",
        "comment_body": "@arlakshm I have addressed the issue with the config change, should we go ahead with the merge? If there are any other concerns/suggestions blocking the merge, let me know and we can discuss them."
    },
    {
        "number": 13569,
        "repo": "sonic-mgmt",
        "comment_at": "2024-08-12T16:04:36Z",
        "comment_author": "arlakshm",
        "comment_body": "/Azp run Azure.sonic-mgmt"
    },
    {
        "number": 13569,
        "repo": "sonic-mgmt",
        "comment_at": "2024-08-12T16:04:46Z",
        "comment_author": "azure-pipelines",
        "comment_body": "<samp>\nAzure Pipelines successfully started running 1 pipeline(s).<br>\r\n\n</samp>"
    },
    {
        "number": 13569,
        "repo": "sonic-mgmt",
        "comment_at": "2024-08-19T20:32:44Z",
        "comment_author": "vmittal-msft",
        "comment_body": "@arista-hpandya @kenneth-arista we don't need this in 202205 ?"
    },
    {
        "number": 13569,
        "repo": "sonic-mgmt",
        "comment_at": "2024-08-19T20:52:48Z",
        "comment_author": "kenneth-arista",
        "comment_body": "> @arista-hpandya @kenneth-arista we don't need this in 202205 ?\r\n\r\nThis is not critical for 202205 since this release is mostly frozen and not accepting test infra changes. Internally, we have this change patched. We would like to merge this change to `master` to avoid having to carry it internally. "
    },
    {
        "number": 13569,
        "repo": "sonic-mgmt",
        "comment_at": "2024-08-21T13:20:13Z",
        "comment_author": "arlakshm",
        "comment_body": "/Azp run Azure.sonic-mgmt "
    },
    {
        "number": 13569,
        "repo": "sonic-mgmt",
        "comment_at": "2024-08-21T13:20:24Z",
        "comment_author": "azure-pipelines",
        "comment_body": "<samp>\nAzure Pipelines successfully started running 1 pipeline(s).<br>\r\n\n</samp>"
    },
    {
        "number": 13569,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-18T17:40:43Z",
        "comment_author": "kenneth-arista",
        "comment_body": "/azpw run Azure.sonic-mgmt"
    },
    {
        "number": 13569,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-02T17:12:15Z",
        "comment_author": "wenyiz2021",
        "comment_body": "close and reopen to trigger semgrep"
    },
    {
        "number": 13569,
        "repo": "sonic-mgmt",
        "review_at": "2024-07-08T22:24:17Z",
        "review_author": "arlakshm"
    },
    {
        "number": 13569,
        "repo": "sonic-mgmt",
        "review_at": "2024-07-10T17:53:39Z",
        "review_author": "arista-hpandya"
    },
    {
        "number": 13569,
        "repo": "sonic-mgmt",
        "review_at": "2024-07-15T16:30:29Z",
        "review_author": "arista-hpandya"
    },
    {
        "number": 13569,
        "repo": "sonic-mgmt",
        "review_at": "2024-08-12T16:02:38Z",
        "review_author": "arlakshm"
    },
    {
        "number": 13569,
        "repo": "sonic-mgmt",
        "review_at": "2024-08-19T20:30:31Z",
        "review_author": "vmittal-msft"
    },
    {
        "number": 13569,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-08-19T20:30:31Z",
        "latestReview_author": "vmittal-msft",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 13569,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-08-12T16:02:38Z",
        "latestReview_author": "arlakshm",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 9984,
        "repo": "sonic-mgmt",
        "comment_at": "2023-09-15T01:00:19Z",
        "comment_author": "mssonicbld",
        "comment_body": "The [pre-commit](http://pre-commit.com/) check detected issues in the files touched by this pull request.\nThe pre-commit check is a mandatory check, please fix detected issues.\n\nDetailed pre-commit check results:\n<samp>trim trailing whitespace.................................................Failed<br/>- hook id: trailing-whitespace<br/>- exit code: 1<br/>- files were modified by this hook<br/><br/>Fixing docs/testplan/smart-switch/high-availability/keysight_ha_testplan.md<br/><br/>fix end of files.........................................................Passed<br/>check yaml...........................................(no files to check)Skipped<br/>check for added large files..............................................Passed<br/>check python ast.....................................(no files to check)Skipped<br/>flake8...............................................(no files to check)Skipped<br/>flake8...............................................(no files to check)Skipped<br/>check conditional mark sort..........................(no files to check)Skipped<br/></samp>\n\nTo run the pre-commit checks locally, you can follow below steps:\n1. Ensure that default python is python3. In sonic-mgmt docker container, default python is python2. You can run\n the check by activating the python3 virtual environment in sonic-mgmt docker container or outside of sonic-mgmt\n docker container.\n2. Ensure that the `pre-commit` package is installed:\n```\nsudo pip install pre-commit\n```\n3. Go to repository root folder\n4. Install the pre-commit hooks:\n```\npre-commit install\n```\n5. Use pre-commit to check staged file:\n```\npre-commit\n```\n6. Alternatively, you can check committed files using:\n```\npre-commit run --from-ref <commit_id> --to-ref <commit_id>\n```"
    },
    {
        "number": 9984,
        "repo": "sonic-mgmt",
        "comment_at": "2023-09-20T00:43:17Z",
        "comment_author": "mssonicbld",
        "comment_body": "The [pre-commit](http://pre-commit.com/) check detected issues in the files touched by this pull request.\nThe pre-commit check is a mandatory check, please fix detected issues.\n\nDetailed pre-commit check results:\n<samp>trim trailing whitespace.................................................Failed<br/>- hook id: trailing-whitespace<br/>- exit code: 1<br/>- files were modified by this hook<br/><br/>Fixing docs/testplan/smart-switch/high-availability/keysight_ha_testplan.md<br/><br/>fix end of files.........................................................Failed<br/>- hook id: end-of-file-fixer<br/>- exit code: 1<br/>- files were modified by this hook<br/><br/>Fixing docs/testplan/smart-switch/high-availability/images/ha_test_topology.svg<br/>Fixing docs/testplan/smart-switch/high-availability/images/ha_dpuloss_not_local.svg<br/>Fixing docs/testplan/smart-switch/high-availability/images/ha_testbed.svg<br/>Fixing docs/testplan/smart-switch/high-availability/images/ha_dpuloss_test.svg<br/>Fixing docs/testplan/smart-switch/high-availability/images/smartswitch_ha_topology.svg<br/>Fixing docs/testplan/smart-switch/high-availability/images/ha_torloss_not_local.svg<br/>Fixing docs/testplan/smart-switch/high-availability/images/ha_linkloss_test.svg<br/>Fixing docs/testplan/smart-switch/high-availability/images/ha_linkloss_test_not_local.svg<br/>...<br/>[truncated extra lines, please run pre-commit locally to view full check results]<br/></samp>\n\nTo run the pre-commit checks locally, you can follow below steps:\n1. Ensure that default python is python3. In sonic-mgmt docker container, default python is python2. You can run\n the check by activating the python3 virtual environment in sonic-mgmt docker container or outside of sonic-mgmt\n docker container.\n2. Ensure that the `pre-commit` package is installed:\n```\nsudo pip install pre-commit\n```\n3. Go to repository root folder\n4. Install the pre-commit hooks:\n```\npre-commit install\n```\n5. Use pre-commit to check staged file:\n```\npre-commit\n```\n6. Alternatively, you can check committed files using:\n```\npre-commit run --from-ref <commit_id> --to-ref <commit_id>\n```"
    },
    {
        "number": 9984,
        "repo": "sonic-mgmt",
        "comment_at": "2023-09-27T18:49:03Z",
        "comment_author": "mssonicbld",
        "comment_body": "The [pre-commit](http://pre-commit.com/) check detected issues in the files touched by this pull request.\nThe pre-commit check is a mandatory check, please fix detected issues.\n\nDetailed pre-commit check results:\n<samp>trim trailing whitespace.................................................Failed<br/>- hook id: trailing-whitespace<br/>- exit code: 1<br/>- files were modified by this hook<br/><br/>Fixing docs/testplan/smart-switch/high-availability/keysight_ha_testplan.md<br/><br/>fix end of files.........................................................Failed<br/>- hook id: end-of-file-fixer<br/>- exit code: 1<br/>- files were modified by this hook<br/><br/>Fixing docs/testplan/smart-switch/high-availability/images/ha_test_topology.svg<br/>Fixing docs/testplan/smart-switch/high-availability/images/ha_dpuloss_not_local.svg<br/>Fixing docs/testplan/smart-switch/high-availability/images/ha_testbed.svg<br/>Fixing docs/testplan/smart-switch/high-availability/images/ha_dpuloss_test.svg<br/>Fixing docs/testplan/smart-switch/high-availability/images/smartswitch_ha_topology.svg<br/>Fixing docs/testplan/smart-switch/high-availability/images/ha_torloss_not_local.svg<br/>Fixing docs/testplan/smart-switch/high-availability/images/ha_linkloss_test.svg<br/>Fixing docs/testplan/smart-switch/high-availability/images/ha_linkloss_test_not_local.svg<br/>...<br/>[truncated extra lines, please run pre-commit locally to view full check results]<br/></samp>\n\nTo run the pre-commit checks locally, you can follow below steps:\n1. Ensure that default python is python3. In sonic-mgmt docker container, default python is python2. You can run\n the check by activating the python3 virtual environment in sonic-mgmt docker container or outside of sonic-mgmt\n docker container.\n2. Ensure that the `pre-commit` package is installed:\n```\nsudo pip install pre-commit\n```\n3. Go to repository root folder\n4. Install the pre-commit hooks:\n```\npre-commit install\n```\n5. Use pre-commit to check staged file:\n```\npre-commit\n```\n6. Alternatively, you can check committed files using:\n```\npre-commit run --from-ref <commit_id> --to-ref <commit_id>\n```"
    },
    {
        "number": 9984,
        "repo": "sonic-mgmt",
        "comment_at": "2023-09-28T14:25:13Z",
        "comment_author": "mssonicbld",
        "comment_body": "The [pre-commit](http://pre-commit.com/) check detected issues in the files touched by this pull request.\nThe pre-commit check is a mandatory check, please fix detected issues.\n\nDetailed pre-commit check results:\n<samp>trim trailing whitespace.................................................Failed<br/>- hook id: trailing-whitespace<br/>- exit code: 1<br/>- files were modified by this hook<br/><br/>Fixing docs/testplan/smart-switch/high-availability/keysight_ha_testplan.md<br/><br/>fix end of files.........................................................Failed<br/>- hook id: end-of-file-fixer<br/>- exit code: 1<br/>- files were modified by this hook<br/><br/>Fixing docs/testplan/smart-switch/high-availability/images/ha_test_topology.svg<br/>Fixing docs/testplan/smart-switch/high-availability/images/ha_dpuloss_not_local.svg<br/>Fixing docs/testplan/smart-switch/high-availability/images/ha_testbed.svg<br/>Fixing docs/testplan/smart-switch/high-availability/images/ha_dpuloss_test.svg<br/>Fixing docs/testplan/smart-switch/high-availability/images/smartswitch_ha_topology.svg<br/>Fixing docs/testplan/smart-switch/high-availability/images/ha_torloss_not_local.svg<br/>Fixing docs/testplan/smart-switch/high-availability/images/ha_linkloss_test.svg<br/>Fixing docs/testplan/smart-switch/high-availability/images/ha_linkloss_test_not_local.svg<br/>...<br/>[truncated extra lines, please run pre-commit locally to view full check results]<br/></samp>\n\nTo run the pre-commit checks locally, you can follow below steps:\n1. Ensure that default python is python3. In sonic-mgmt docker container, default python is python2. You can run\n the check by activating the python3 virtual environment in sonic-mgmt docker container or outside of sonic-mgmt\n docker container.\n2. Ensure that the `pre-commit` package is installed:\n```\nsudo pip install pre-commit\n```\n3. Go to repository root folder\n4. Install the pre-commit hooks:\n```\npre-commit install\n```\n5. Use pre-commit to check staged file:\n```\npre-commit\n```\n6. Alternatively, you can check committed files using:\n```\npre-commit run --from-ref <commit_id> --to-ref <commit_id>\n```"
    },
    {
        "number": 9984,
        "repo": "sonic-mgmt",
        "comment_at": "2024-06-03T18:33:17Z",
        "comment_author": "albertovillarreal-keys",
        "comment_body": "@r12f\r\nHi Riff,\r\nMade updates to this testplan, if you can please review with the latest changes.\r\nThanks!"
    },
    {
        "number": 9984,
        "repo": "sonic-mgmt",
        "comment_at": "2024-06-04T02:17:02Z",
        "comment_author": "r12f",
        "comment_body": "Great! Thanks Alberto and Will review it tomorrow!"
    },
    {
        "number": 9984,
        "repo": "sonic-mgmt",
        "comment_at": "2024-06-13T16:57:07Z",
        "comment_author": "albertovillarreal-keys",
        "comment_body": "> Great! Thanks Alberto and Will review it tomorrow!\r\n\r\n@r12f \r\nHello Riff! Hope you're doing well and having a good week! When you get a moment please review the updates and if you have any feedback I can quickly make updates to the document.\r\n\r\nThank you!"
    },
    {
        "number": 9984,
        "repo": "sonic-mgmt",
        "review_at": "2023-09-27T20:31:10Z",
        "review_author": "r12f"
    },
    {
        "number": 9984,
        "repo": "sonic-mgmt",
        "review_at": "2024-07-02T19:43:59Z",
        "review_author": "r12f"
    },
    {
        "number": 9984,
        "repo": "sonic-mgmt",
        "review_at": "2024-07-02T20:36:00Z",
        "review_author": "r12f"
    },
    {
        "number": 9984,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-04T18:09:14Z",
        "review_author": "r12f"
    },
    {
        "number": 9984,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-05T01:00:46Z",
        "review_author": "r12f"
    },
    {
        "number": 9984,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-09T21:49:55Z",
        "review_author": "r12f"
    },
    {
        "number": 9984,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-10T18:12:32Z",
        "review_author": "r12f"
    },
    {
        "number": 9984,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-10T18:24:13Z",
        "review_author": "r12f"
    },
    {
        "number": 9984,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-10T18:24:54Z",
        "review_author": "r12f"
    },
    {
        "number": 9984,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-10T18:26:58Z",
        "review_author": "r12f"
    },
    {
        "number": 9984,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-10T18:28:49Z",
        "review_author": "r12f"
    },
    {
        "number": 9984,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-10T18:32:59Z",
        "review_author": "r12f"
    },
    {
        "number": 9984,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-10T21:18:50Z",
        "review_author": "r12f"
    },
    {
        "number": 9984,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-10T21:47:10Z",
        "review_author": "r12f"
    },
    {
        "number": 9984,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-10T21:47:10Z",
        "latestReview_author": "r12f",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 9527,
        "repo": "sonic-mgmt",
        "comment_at": "2024-05-28T14:47:09Z",
        "comment_author": "parmarkj",
        "comment_body": "@yxieca can you assign someone to review this test plan?"
    },
    {
        "number": 9527,
        "repo": "sonic-mgmt",
        "comment_at": "2024-05-30T04:23:42Z",
        "comment_author": "judyjoseph",
        "comment_body": "@parmarkj Could you check the macsec testplan : https://github.com/sonic-net/sonic-mgmt/blob/master/docs/testplan/MACsec-test-plan.md - Could you add this test at the appropriate section in the same test plan \r\n\r\nIn addition, update the section \"How did you verify/test it?\" in the PR description with the test run/pass status"
    },
    {
        "number": 9527,
        "repo": "sonic-mgmt",
        "comment_at": "2024-09-10T18:45:49Z",
        "comment_author": "BYGX-wcr",
        "comment_body": "The code looks fine now. Yet as Judy said, you should post the test run result in the PR description.\r\n\r\n> @parmarkj Could you check the macsec testplan : https://github.com/sonic-net/sonic-mgmt/blob/master/docs/testplan/MACsec-test-plan.md - Could you add this test at the appropriate section in the same test plan\r\n> \r\n> In addition, update the section \"How did you verify/test it?\" in the PR description with the test run/pass status\r\n\r\n"
    },
    {
        "number": 9527,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-01T00:01:02Z",
        "comment_author": "BYGX-wcr",
        "comment_body": "> The code looks fine now. Yet as Judy said, you should post the test run result in the PR description.\r\n> \r\n> > @parmarkj Could you check the macsec testplan : https://github.com/sonic-net/sonic-mgmt/blob/master/docs/testplan/MACsec-test-plan.md - Could you add this test at the appropriate section in the same test plan\r\n> > In addition, update the section \"How did you verify/test it?\" in the PR description with the test run/pass status\r\n\r\n@parmarkj , what is your plan now? Is it hard for you to post readable test run result?"
    },
    {
        "number": 9527,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-01T03:18:16Z",
        "comment_author": "parmarkj",
        "comment_body": "@BYGX-wcr please find the attached screenshot of the log. Thank you. "
    },
    {
        "number": 9527,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-02T19:01:55Z",
        "comment_author": "judyjoseph",
        "comment_body": "@wangxin could you review and merge. thanks"
    },
    {
        "number": 9527,
        "repo": "sonic-mgmt",
        "comment_at": "2024-10-09T17:16:07Z",
        "comment_author": "BYGX-wcr",
        "comment_body": "@judyjoseph , May you merge this PR. All checks have been completed."
    },
    {
        "number": 9527,
        "repo": "sonic-mgmt",
        "review_at": "2024-08-28T18:49:28Z",
        "review_author": "BYGX-wcr"
    },
    {
        "number": 9527,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-01T22:02:31Z",
        "review_author": "judyjoseph"
    },
    {
        "number": 9527,
        "repo": "sonic-mgmt",
        "review_at": "2024-10-01T22:26:13Z",
        "review_author": "BYGX-wcr"
    },
    {
        "number": 9527,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-01T22:26:13Z",
        "latestReview_author": "BYGX-wcr",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 9527,
        "repo": "sonic-mgmt",
        "latestReview_at": "2024-10-01T22:02:31Z",
        "latestReview_author": "judyjoseph",
        "latestReview_state": "APPROVED"
    }
]